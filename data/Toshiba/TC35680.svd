<?xml version="1.0" encoding="utf-8"?>
<device schemaVersion="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="CMSIS-SVD_Schema_1_1_draft.xsd" >
  <vendor>Toshiba Electronic Devices and Storage Corporation</vendor>
  <name>TC35680</name>
  <version>0.1</version>
  <description>TC35680</description>
  <cpu>
    <name>CM0</name>
    <revision>r0p0</revision>
    <endian>little</endian>
    <mpuPresent>false</mpuPresent>
    <fpuPresent>false</fpuPresent>
    <nvicPrioBits>4</nvicPrioBits>
    <vendorSystickConfig>false</vendorSystickConfig>
  </cpu>
  <addressUnitBits>8</addressUnitBits>
  <width>32</width>

  <peripherals>
    <!-- ************************* DMAC ***************************** -->
    <peripheral>
      <name>DMAC</name>
      <description>DMAC</description>
      <baseAddress>0x40001000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x200</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>DMA_Int_Stat</name>
          <description>Interrupt Status Register</description>
          <addressOffset>0x00</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <fields>
            <field>
              <name>IntStatus6</name>
              <description>DMAC ch6 interrupt status. 
0: No interrupt. 
1: Interrupt asserted. 
Both DMA error and DMA done assert this bit.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>IntStatus5</name>
              <description>DMAC ch5 interrupt status. 
0: No interrupt. 
1: Interrupt asserted. 
Both DMA error and DMA done assert this bit.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>

            <field>
              <name>IntStatus4</name>
              <description>DMAC ch4 interrupt status. 
0: No interrupt. 
1: Interrupt asserted. 
Both DMA error and DMA done assert this bit.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>IntStatus3</name>
              <description>DMAC ch3 interrupt status. 
0: No interrupt. 
1: Interrupt asserted. 
Both DMA error and DMA done assert this bit.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>IntStatus2</name>
              <description>DMAC ch2 interrupt status. 
0: No interrupt. 
1: Interrupt asserted. 
Both DMA error and DMA done assert this bit.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>IntStatus1</name>
              <description>DMAC ch1 interrupt status. 
0: No interrupt. 
1: Interrupt asserted. 
Both DMA error and DMA done assert this bit.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>IntStatus0</name>
              <description>DMAC ch0 interrupt status. 
0: No interrupt. 
1: Interrupt asserted. 
Both DMA error and DMA done assert this bit.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_Int_TemCo_Stat</name>
          <description>Interrupt Terminal Count Status Register</description>
          <addressOffset>0x04</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <fields>
            <field>
              <name>IntTCStatus6</name>
              <description>DMAC ch6 interrupt status of DMA done. 
0: No interrupt. 
1: Interrupt asserted.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>IntTCStatus5</name>
              <description>DMAC ch5 interrupt status of DMA done. 
0: No interrupt. 
1: Interrupt asserted.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>IntTCStatus4</name>
              <description>DMAC ch4 interrupt status of DMA done. 
0: No interrupt. 
1: Interrupt asserted.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>IntTCStatus3</name>
              <description>DMAC ch3 interrupt status of DMA done. 
0: No interrupt. 
1: Interrupt asserted.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>IntTCStatus2</name>
              <description>DMAC ch2 interrupt status of DMA done. 
0: No interrupt. 
1: Interrupt asserted.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>IntTCStatus1</name>
              <description>DMAC ch1 interrupt status of DMA done. 
0: No interrupt. 
1: Interrupt asserted.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>IntTCStatus0</name>
              <description>DMAC ch0 interrupt status of DMA done. 
0: No interrupt. 
1: Interrupt asserted.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_Int_TemCo_Clr</name>
          <description>Interrupt Terminal Count Clear Register</description>
          <addressOffset>0x08</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>IntTCClear6</name>
              <description>Clear DMAC ch6 DMA done interrupt. 
0: Invalid. 
1: Clear</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>IntTCClear5</name>
              <description>Clear DMAC ch5 DMA done interrupt. 
0: Invalid. 
1: Clear</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>IntTCClear4</name>
              <description>Clear DMAC ch4 DMA done interrupt. 
0: Invalid. 
1: Clear</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>IntTCClear3</name>
              <description>Clear DMAC ch3 DMA done interrupt. 
0: Invalid. 
1: Clear</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>IntTCClear2</name>
              <description>Clear DMAC ch2 DMA done interrupt. 
0: Invalid. 
1: Clear</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>IntTCClear1</name>
              <description>Clear DMAC ch1 DMA done interrupt. 
0: Invalid. 
1: Clear</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>IntTCClear0</name>
              <description>Clear DMAC ch0 DMA done interrupt. 
0: Invalid. 
1: Clear</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_Int_Err_Stat</name>
          <description>Interrupt Error Status Register</description>
          <addressOffset>0x0C</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <fields>
            <field>
              <name>IntErrStatus6</name>
              <description>DMAC ch6 DMA error interrupt status. 
0: No interrupt. 
1: Interrupt asserted</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>IntErrStatus5</name>
              <description>DMAC ch5 DMA error interrupt status. 
0: No interrupt. 
1: Interrupt asserted</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>IntErrStatus4</name>
              <description>DMAC ch4 DMA error interrupt status. 
0: No interrupt. 
1: Interrupt asserted</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>IntErrStatus3</name>
              <description>DMAC ch3 DMA error interrupt status. 
0: No interrupt. 
1: Interrupt asserted</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>IntErrStatus2</name>
              <description>DMAC ch2 DMA error interrupt status. 
0: No interrupt. 
1: Interrupt asserted</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>IntErrStatus1</name>
              <description>DMAC ch1 DMA error interrupt status. 
0: No interrupt. 
1: Interrupt asserted</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>IntErrStatus0</name>
              <description>DMAC ch0 DMA error interrupt status. 
0: No interrupt. 
1: Interrupt asserted</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_Int_Err_Clr</name>
          <description>Interrupt Error Clear Register</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>IntErrClr6</name>
              <description>Clear DMAC ch6 DMA error interrupt. 
0: Invalid. 
1: Clear</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IntErrClr5</name>
              <description>Clear DMAC ch5 DMA error interrupt. 
0: Invalid. 
1: Clear</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IntErrClr4</name>
              <description>Clear DMAC ch4 DMA error interrupt. 
0: Invalid. 
1: Clear</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IntErrClr3</name>
              <description>Clear DMAC ch3 DMA error interrupt. 
0: Invalid. 
1: Clear</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IntErrClr2</name>
              <description>Clear DMAC ch2 DMA error interrupt. 
0: Invalid. 
1: Clear</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IntErrClr1</name>
              <description>Clear DMAC ch1 DMA error interrupt. 
0: Invalid. 
1: Clear</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IntErrClr0</name>
              <description>Clear DMAC ch0 DMA error interrupt. 
0: Invalid. 
1: Clear</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_RawInt_Tem_Stat</name>
          <description>Raw Interrupt Terminal Count Status Register</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <fields>
            <field>
              <name>RawIntTCStatus6</name>
              <description>Unmasked DMAC ch6 DMA done interrupt status. 
0: No interrupt. 
1: Interrupt asserted</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RawIntTCStatus5</name>
              <description>Unmasked DMAC ch5 DMA done interrupt status. 
0: No interrupt. 
1: Interrupt asserted</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RawIntTCStatus4</name>
              <description>Unmasked DMAC ch4 DMA done interrupt status. 
0: No interrupt. 
1: Interrupt asserted</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RawIntTCStatus3</name>
              <description>Unmasked DMAC ch3 DMA done interrupt status. 
0: No interrupt. 
1: Interrupt asserted</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RawIntTCStatus2</name>
              <description>Unmasked DMAC ch2 DMA done interrupt status. 
0: No interrupt. 
1: Interrupt asserted</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RawIntTCStatus1</name>
              <description>Unmasked DMAC ch1 DMA done interrupt status. 
0: No interrupt. 
1: Interrupt asserted</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RawIntTCStatus0</name>
              <description>Unmasked DMAC ch0 DMA done interrupt status. 
0: No interrupt. 
1: Interrupt asserted</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_RawInt_Err_Stat</name>
          <description>Raw Interrupt Error Status Register</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <fields>
            <field>
              <name>RawIntErrStatus6</name>
              <description>Unmasked DMAC ch6 DMA error interrupt status. 
0: No interrupt. 
1: Interrupt asserted</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RawIntErrStatus5</name>
              <description>Unmasked DMAC ch5 DMA error interrupt status. 
0: No interrupt. 
1: Interrupt asserted</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RawIntErrStatus4</name>
              <description>Unmasked DMAC ch4 DMA error interrupt status. 
0: No interrupt. 
1: Interrupt asserted</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RawIntErrStatus3</name>
              <description>Unmasked DMAC ch3 DMA error interrupt status. 
0: No interrupt. 
1: Interrupt asserted</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RawIntErrStatus2</name>
              <description>Unmasked DMAC ch2 DMA error interrupt status. 
0: No interrupt. 
1: Interrupt asserted</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RawIntErrStatus1</name>
              <description>Unmasked DMAC ch1 DMA error interrupt status. 
0: No interrupt. 
1: Interrupt asserted</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RawIntErrStatus0</name>
              <description>Unmasked DMAC ch0 DMA error interrupt status. 
0: No interrupt. 
1: Interrupt asserted</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_Enable_ch</name>
          <description>Enabled Channel Register</description>
          <addressOffset>0x1C</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <fields>
            <field>
              <name>EnabledChannel6</name>
              <description>Enable/Disable DMAC ch6. 
0: Disable. 
1: Enable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EnabledChannel5</name>
              <description>Enable/Disable DMAC ch5. 
0: Disable. 
1: Enable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EnabledChannel4</name>
              <description>Enable/Disable DMAC ch4. 
0: Disable. 
1: Enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EnabledChannel3</name>
              <description>Enable/Disable DMAC ch3. 
0: Disable. 
1: Enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EnabledChannel2</name>
              <description>Enable/Disable DMAC ch2. 
0: Disable. 
1: Enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EnabledChannel1</name>
              <description>Enable/Disable DMAC ch1. 
0: Disable. 
1: Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EnabledChannel0</name>
              <description>Enable/Disable DMAC ch0. 
0: Disable. 
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_Soft_burst_req</name>
          <description>Software Burtst Request Register</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>SoftBReq10</name>
              <description>Set DMA burst request for peripheral number 10. 
0: Invalid request. 
1: Occur request</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SoftBReq8</name>
              <description>Set DMA burst request for peripheral number 8. 
0: Invalid request. 
1: Occur request</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SoftBReq6</name>
              <description>Set DMA burst request for peripheral number 6. 
0: Invalid request. 
1: Occur request</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SoftBReq4</name>
              <description>Set DMA burst request for peripheral number 4. 
0: Invalid request. 
1: Occur request</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SoftBReq2</name>
              <description>Set DMA burst request for peripheral number 2. 
0: Invalid request. 
1: Occur request</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SoftBReq0</name>
              <description>Set DMA burst request for peripheral number 0. 
0: Invalid request. 
1: Occur request</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_Soft_single_req</name>
          <description>Software Single Request Register</description>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>SoftSReq12</name>
              <description>Set DMA single request for peripheral number 12. 
0: Invalid request. 
1: Occur request</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SoftSReq11</name>
              <description>Set DMA single request for peripheral number 11. 
0: Invalid request. 
1: Occur request</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SoftSReq9</name>
              <description>Set DMA single request for peripheral number 9. 
0: Invalid request. 
1: Occur request</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SoftSReq7</name>
              <description>Set DMA single request for peripheral number 7. 
0: Invalid request. 
1: Occur request</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SoftSReq5</name>
              <description>Set DMA single request for peripheral number 5. 
0: Invalid request. 
1: Occur request</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SoftSReq3</name>
              <description>Set DMA single request for peripheral number 3. 
0: Invalid request. 
1: Occur request</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SoftSReq1</name>
              <description>Set DMA single request for peripheral number 1. 
0: Invalid request. 
1: Occur request</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_Config_req</name>
          <description>Configuration Register</description>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>E</name>
              <description>Control DMA circuit. 
0: Halt. 
1: Active. 
Set 1 to read/write DMAC registers.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_ch0_Source</name>
          <description>Channel0 Source Address Register</description>
          <addressOffset>0x100</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>SrcAddr</name>
              <description>Set DMA source address. 
Please set this value when channel0 is disabled on DMA_ch0_Config register. 
Do not update this value while data are transferred by DMA. 
This address shall be 4-Byte aligned.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_ch0_Dest</name>
          <description>Channel0 Destination Address Register</description>
          <addressOffset>0x104</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>DestAddr</name>
              <description>Set DMA destination address. 
Please set this value when channel0 is disabled on DMA_ch0_Config register. 
Do not update this value while data are transferred by DMA. 
This address shall be 4-Byte aligned.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_ch0_Link</name>
          <description>Channel0 Linked ListItem Register</description>
          <addressOffset>0x108</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>LLI</name>
              <description>Set start address of next transfer information. 
Please set a value of 0xFFFFFFF0 or less. 
When 0 is set, DMA channel will be disabled after the current DMA transfer completes. 
Set this register to use scatter/gather function. Scatter/gather is a function to execute DMA repeatedly according to informations which are pre-set on RAM. 
This address shall be 4-Byte aligned.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_ch0_Contrl</name>
          <description>Channel0 Control Register</description>
          <addressOffset>0x10C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>I</name>
              <description>Set interrupt enable of Terminal Count. 
0: Disable. 
1: Enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DI</name>
              <description>Set increment config of destination address. 
0: Do not increment (The address is fixed). 
1: Increment. 
Increment timming changes according to DWidth. 
Each Increment timming is as follows: 
Bit width is 8bit: Increment every 1Byte. 
Bit width is 16bit: Increment every 2Byte. 
Bit width is 32bit: Increment every 4Byte.</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SI</name>
              <description>Set increment config of source address. 
0: Do not increment (The address is fixed). 
1: Increment. 
Increment timming is the same as DI.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DWidth</name>
              <description>Set destination bit width. 
000: 8bit (Byte). 
001: 16bit (Half word). 
010: 32bit (Word). 
Other: Reserved</description>
              <bitRange>[23:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SWidth</name>
              <description>Set source bit width. 
Same as DWidth</description>
              <bitRange>[20:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DBSize</name>
              <description>Set destination burst size. 
000: 1 beat. 
001: 4 beat. 
010: 8 beat. 
011: 16 beat. 
100: 32 beat. 
101: 64 beat. 
110: 128 beat. 
111: 256 beat.</description>
              <bitRange>[17:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SBSize</name>
              <description>Set source burst size. 
Same as DBSize</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TransferSize</name>
              <description>Set the number of transfers. 
This value is decremented on every DMA transfer. Read this value to know the number of left transfers. 
When DMA_ch_Config register [0] is enabled, this value can be read. 
The number of transfers is in unit of source bit width. 
Source bit width is 8bit: Set this register in unit of Byte. 
Source bit width is 16bit: Set this register in unit of Half word. 
Source bit width is 32bit: Set this register in unit of Word. 
Attention: If source bit width is smaller than destination bit width, you should be careful to set this. The following condition shall be satisfied: 
Source bit width * TransferSize = Destinetion bit width * N (N: integer)</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_ch0_Config</name>
          <description>Channel0 Configuration Register</description>
          <addressOffset>0x110</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>H</name>
              <description>Halt DMA. 
0: No halt. 
1: Halt(Ignore DMA request)</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>A</name>
              <description>Check FIFO data of channel0. 
0: No data in FIFO. 
1: Data exists in FIFO</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>L</name>
              <description>Set bus lock transfer config. 
0: Forbid bus lock transfer. 
1: Allow bus lock transfer. 
If bus lock transfer is allowed, specified burst size is transferred without releassing the bus.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ITC</name>
              <description>DMA done interrupt enable. 
0: enable the interrupt. 
1: disable the interrupt</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IE</name>
              <description>DMA error interrupt enable.. 
0: enable the interrupt. 
1: disable the interrupt</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FlowContrl</name>
              <description>Transfer mode config. 
000: Memory to Memory.
001: Memory to Pripheral. 
010: Peripheral to Memory. 
011: Peripheral to Peripheral. 
Other: Reserved. 
Attention: If Memory to Memory is chosen, the transfer can be started to write 1 to E.</description>
              <bitRange>[13:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DestPeripheral</name>
              <description>DMA destination peripheral number. 
Min: 0000. 
Max: 1111. 
If the destination is Memory, this value is ignored.</description>
              <bitRange>[9:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SrcPeripheral</name>
              <description>DMA source peripheral config register. 
Min: 0000. 
Max: 1111. 
If the source is Memory, this value is ignored.</description>
              <bitRange>[4:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>E</name>
              <description>Set channel enable. 
0: Disable. 
1: Enable. 
After you set up the all DMA settings, set 1 to this register. 
When this value set disable during transfer, FIFO data of channel0 is erased. If you want to restart the transfer, please initialize all config of channel0 and restart the DMA. 
If you want to stop the transfer temporarily, please perform the following sequence: 
(1)Set 1 to register H, then DMA requirement stop. 
(2)Poll FIFO data until register A becomes 0 (FIFO if empty). 
(3)Set 0(disable) to this register, and write 0(disable) to register E.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_ch1_Source</name>
          <description>Channel1 Source Address Register</description>
          <addressOffset>0x120</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>SrcAddr</name>
              <description>Set DMA source address. 
Please set this value when channel1 is disabled on DMA_ch1_Config register. 
Do not update this value while data are transferred by DMA. 
This address shall be 4-Byte aligned.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_ch1_Dest</name>
          <description>Channel1 Destination Address Register</description>
          <addressOffset>0x124</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>DestAddr</name>
              <description>Set DMA destination address. 
Please set this value when channel1 is disabled on DMA_ch1_Config register. 
Do not update this value while data are transferred by DMA. 
This address shall be 4-Byte aligned.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_ch1_Link</name>
          <description>Channel1 Linked ListItem Register</description>
          <addressOffset>0x128</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>LLI</name>
              <description>Set start address of next transfer information. 
Please set a value of 0xFFFFFFF0 or less. 
When 0 is set, DMA channel will be disabled after the current DMA transfer completes. 
Set this register to use scatter/gather function. Scatter/gather is a function to execute DMA repeatedly according to informations which are pre-set on RAM. 
This address shall be 4-Byte aligned.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_ch1_Contrl</name>
          <description>Channel1 Control Register</description>
          <addressOffset>0x12C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>I</name>
              <description>Set interrupt enable of Terminal Count. 
0: Disable. 
1: Enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DI</name>
              <description>Set increment config of destination address. 
0: Do not increment (The address is fixed). 
1: Increment. 
Increment timming changes according to DWidth. 
Each Increment timming is as follows: 
Bit width is 8bit: Increment every 1Byte. 
Bit width is 16bit: Increment every 2Byte. 
Bit width is 32bit: Increment every 4Byte</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SI</name>
              <description>Set increment config of source address. 
0: Do not increment (The address is fixed). 
1: Increment. 
Increment timming is the same as DI.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DWidth</name>
              <description>Set destination bit width. 
000: 8bit (Byte). 
001: 16bit (Half word). 
010: 32bit (Word). 
Other: Reserved</description>
              <bitRange>[23:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SWidth</name>
              <description>Set source bit width. 
Same as DWidth</description>
              <bitRange>[20:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DBSize</name>
              <description>Set destination burst size. 
000: 1 beat. 
001: 4 beat. 
010: 8 beat. 
011: 16 beat. 
100: 32 beat. 
101: 64 beat. 
110: 128 beat. 
111: 256 beat</description>
              <bitRange>[17:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SBSize</name>
              <description>Set source burst size. 
Same as DBSize</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TransferSize</name>
              <description>Set the number of transfers. 
This value is decremented on every DMA transfer. Read this value to know the number of left transfers. 
When DMA_ch_Config register [0] is enabled, this value can be read. 
The number of transfers is in unit of source bit width. 
Source bit width is 8bit: Set this register in unit of Byte. 
Source bit width is 16bit: Set this register in unit of Half word. 
Source bit width is 32bit: Set this register in unit of Word. 
Attention: If source bit width is smaller than destination bit width, you should be careful to set this. The following condition shall be satisfied: 
Source bit width * TransferSize = Destinetion bit width * N (N: integer)</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_ch1_Config</name>
          <description>Channel1 Configuration Register</description>
          <addressOffset>0x130</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>H</name>
              <description>Halt DMA. 
0: No halt. 
1: Halt(Ignore DMA request)</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>A</name>
              <description>Check FIFO data of channel0. 
0: No data in FIFO. 
1: Data exists in FIFO</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>L</name>
              <description>Set bus lock transfer config. 
0: Forbid bus lock transfer. 
1: Allow bus lock transfer. 
If bus lock transfer is allowed, specified burst size is transferred without releassing the bus.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ITC</name>
              <description>DMA done interrupt enable. 
0: enable the interrupt. 
1: disable the interrupt</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IE</name>
              <description>DMA error interrupt enable.. 
0: enable the interrupt. 
1: disable the interrupt</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FlowContrl</name>
              <description>Transfer mode config.. 
000: Memory to Memory. 
001: Memory to Pripheral. 
010: Peripheral to Memory. 
011: Peripheral to Peripheral. 
Other: Reserved. 
Attention: If Memory to Memory is chosen, the transfer can be started to write 1 to E.</description>
              <bitRange>[13:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DestPeripheral</name>
              <description>DMA destination peripheral number. 
Min: 0000. 
Max: 1111. 
If the destination is Memory, this value is ignored.</description>
              <bitRange>[9:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SrcPeripheral</name>
              <description>DMA source peripheral config register. 
Min: 0000. 
Max: 1111. 
If the source is Memory, this value is ignored.</description>
              <bitRange>[4:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>E</name>
              <description>Set channel enable. 
0: Disable. 
1: Enable. 
After you set up the all DMA settings, set 1 to this register. 
When this value set disable during transfer, FIFO data of channel0 is erased. If you want to restart the transfer, please initialize all config of channel0 and restart the DMA. 
If you want to stop the transfer temporarily, please perform the following sequence: 
(1)Set 1 to register H, then DMA requirement stop. 
(2)Poll FIFO data until register A becomes 0 (FIFO if empty). 
(3)Set 0(disable) to this register, and write 0(disable) to register E.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_ch2_Source</name>
          <description>Channel2 Source Address Register</description>
          <addressOffset>0x140</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>SrcAddr</name>
              <description>Set DMA source address. 
Please set this value when channel2 is disabled on DMA_ch2_Config register. 
Do not update this value while data are transferred by DMA. 
This address shall be 4-Byte aligned.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_ch2_Dest</name>
          <description>Channel2 Destination Address Register</description>
          <addressOffset>0x144</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>DestAddr</name>
              <description>Set DMA destination address. 
Please set this value when channel2 is disabled on DMA_ch2_Config register. 
Do not update this value while data are transferred by DMA. 
This address shall be 4-Byte aligned.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_ch2_Link</name>
          <description>Channel2 Linked ListItem Register</description>
          <addressOffset>0x148</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>LLI</name>
              <description>Set start address of next transfer information. 
Please set a value of 0xFFFFFFF0 or less. 
When 0 is set, DMA channel will be disabled after the current DMA transfer completes. 
Set this register to use scatter/gather function. Scatter/gather is a function to execute DMA repeatedly according to informations which are pre-set on RAM. 
This address shall be 4-Byte aligned.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_ch2_Contrl</name>
          <description>Channel2 Control Register</description>
          <addressOffset>0x14C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>I</name>
              <description>Set interrupt enable of Terminal Count. 
0: Disable. 
1: Enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DI</name>
              <description>Set increment config of destination address. 
0: Do not increment (The address is fixed). 
1: Increment. 
Increment timming changes according to DWidth. 
Each Increment timming is as follows: 
Bit width is 8bit: Increment every 1Byte. 
Bit width is 16bit: Increment every 2Byte. 
Bit width is 32bit: Increment every 4Byte</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SI</name>
              <description>Set increment config of source address. 
0: Do not increment (The address is fixed). 
1: Increment. 
Increment timming is the same as DI.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DWidth</name>
              <description>Set destination bit width. 
000: 8bit (Byte). 
001: 16bit (Half word). 
010: 32bit (Word). 
Other: Reserved</description>
              <bitRange>[23:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SWidth</name>
              <description>Set source bit width. 
Same as DWidth</description>
              <bitRange>[20:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DBSize</name>
              <description>Set destination burst size. 
000: 1 beat. 
001: 4 beat. 
010: 8 beat. 
011: 16 beat. 
100: 32 beat. 
101: 64 beat. 
110: 128 beat. 
111: 256 beat</description>
              <bitRange>[17:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SBSize</name>
              <description>Set source burst size. 
Same as DBSize</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TransferSize</name>
              <description>Set the number of transfers. 
This value is decremented on every DMA transfer. Read this value to know the number of left transfers. 
When DMA_ch_Config register [0] is enabled, this value can be read. 
The number of transfers is in unit of source bit width. 
Source bit width is 8bit: Set this register in unit of Byte. 
Source bit width is 16bit: Set this register in unit of Half word. 
Source bit width is 32bit: Set this register in unit of Word. 
Attention: If source bit width is smaller than destination bit width, you should be careful to set this. The following condition shall be satisfied: 
Source bit width * TransferSize = Destinetion bit width * N (N: integer)</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_ch2_Config</name>
          <description>Channel2 Configuration Register</description>
          <addressOffset>0x150</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>H</name>
              <description>Halt DMA. 
0: No halt. 
1: Halt(Ignore DMA request)</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>A</name>
              <description>Check FIFO data of channel0. 
0: No data in FIFO. 
1: Data exists in FIFO</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>L</name>
              <description>Set bus lock transfer config. 
0: Forbid bus lock transfer. 
1: Allow bus lock transfer. 
If bus lock transfer is allowed, specified burst size is transferred without releassing the bus.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ITC</name>
              <description>DMA done interrupt enable. 
0: enable the interrupt. 
1: disable the interrupt</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IE</name>
              <description>DMA error interrupt enable.. 
0: enable the interrupt. 
1: disable the interrupt</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FlowContrl</name>
              <description>Transfer mode config. 
000: Memory to Memory. 
001: Memory to Pripheral. 
010: Peripheral to Memory. 
011: Peripheral to Peripheral. 
Other: Reserved. 
Attention: If Memory to Memory is chosen, the transfer can be started to write 1 to E.</description>
              <bitRange>[13:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DestPeripheral</name>
              <description>DMA destination peripheral number. 
Min: 0000. 
Max: 1111. 
If the destination is Memory, this value is ignored.</description>
              <bitRange>[9:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SrcPeripheral</name>
              <description>DMA source peripheral config register. 
Min: 0000. 
Max: 1111. 
If the source is Memory, this value is ignored.</description>
              <bitRange>[4:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>E</name>
              <description>Set channel enable. 
0: Disable. 
1: Enable. 
After you set up the all DMA settings, set 1 to this register. 
When this value set disable during transfer, FIFO data of channel0 is erased. If you want to restart the transfer, please initialize all config of channel0 and restart the DMA. 
If you want to stop the transfer temporarily, please perform the following sequence: 
(1)Set 1 to register H, then DMA requirement stop. 
(2)Poll FIFO data until register A becomes 0 (FIFO if empty). 
(3)Set 0(disable) to this register, and write 0(disable) to register E.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_ch3_Source</name>
          <description>Channel3 Source Address Register</description>
          <addressOffset>0x160</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>SrcAddr</name>
              <description>Set DMA source address. 
Please set this value when channel3 is disabled on DMA_ch3_Config register. 
Do not update this value while data are transferred by DMA. 
This address shall be 4-Byte aligned.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_ch3_Dest</name>
          <description>Channel3 Destination Address Register</description>
          <addressOffset>0x164</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>DestAddr</name>
              <description>Set DMA destination address. 
Please set this value when channel3 is disabled on DMA_ch3_Config register. 
Do not update this value while data are transferred by DMA. 
This address shall be 4-Byte aligned.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_ch3_Link</name>
          <description>Channel3 Linked ListItem Register</description>
          <addressOffset>0x168</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>LLI</name>
              <description>Set start address of next transfer information. 
Please set a value of 0xFFFFFFF0 or less. 
When 0 is set, DMA channel will be disabled after the current DMA transfer completes. 
Set this register to use scatter/gather function. Scatter/gather is a function to execute DMA repeatedly according to informations which are pre-set on RAM. 
This address shall be 4-Byte aligned.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_ch3_Contrl</name>
          <description>Channel3 Control Register</description>
          <addressOffset>0x16C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>I</name>
              <description>Set interrupt enable of Terminal Count. 
0: Disable. 
1: Enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DI</name>
              <description>Set increment config of destination address. 
0: Do not increment (The address is fixed). 
1: Increment. 
Increment timming changes according to DWidth. 
Each Increment timming is as follows: 
Bit width is 8bit: Increment every 1Byte. 
Bit width is 16bit: Increment every 2Byte. 
Bit width is 32bit: Increment every 4Byte</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SI</name>
              <description>Set increment config of source address. 
0: Do not increment (The address is fixed). 
1: Increment. 
Increment timming is the same as DI.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DWidth</name>
              <description>Set destination bit width. 
000: 8bit (Byte). 
001: 16bit (Half word). 
010: 32bit (Word). 
Other: Reserved</description>
              <bitRange>[23:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SWidth</name>
              <description>Set source bit width. 
Same as DWidth</description>
              <bitRange>[20:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DBSize</name>
              <description>Set destination burst size. 
000: 1 beat. 
001: 4 beat. 
010: 8 beat. 
011: 16 beat. 
100: 32 beat. 
101: 64 beat. 
110: 128 beat. 
111: 256 beat</description>
              <bitRange>[17:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SBSize</name>
              <description>Set source burst size. 
Same as DBSize</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TransferSize</name>
              <description>Set the number of transfers. 
This value is decremented on every DMA transfer. Read this value to know the number of left transfers. 
When DMA_ch_Config register [0] is enabled, this value can be read. 
The number of transfers is in unit of source bit width. 
Source bit width is 8bit: Set this register in unit of Byte. 
Source bit width is 16bit: Set this register in unit of Half word. 
Source bit width is 32bit: Set this register in unit of Word. 
Attention: If source bit width is smaller than destination bit width, you should be careful to set this. The following condition shall be satisfied: 
Source bit width * TransferSize = Destinetion bit width * N (N: integer)</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_ch3_Config</name>
          <description>Channel3 Configuration Register</description>
          <addressOffset>0x170</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>H</name>
              <description>Halt DMA. 
0: No halt. 
1: Halt(Ignore DMA request)</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>A</name>
              <description>Check FIFO data of channel0. 
0: No data in FIFO. 
1: Data exists in FIFO</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>L</name>
              <description>Set bus lock transfer config. 
0: Forbid bus lock transfer. 
1: Allow bus lock transfer. 
If bus lock transfer is allowed, specified burst size is transferred without releassing the bus.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ITC</name>
              <description>DMA done interrupt enable. 
0: enable the interrupt. 
1: disable the interrupt</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IE</name>
              <description>DMA error interrupt enable. 
0: enable the interrupt. 
1: disable the interrupt</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FlowContrl</name>
              <description>Transfer mode config. 
000: Memory to Memory. 
001: Memory to Pripheral. 
010: Peripheral to Memory. 
011: Peripheral to Peripheral. 
Other: Reserved. 
Attention: If Memory to Memory is chosen, the transfer can be started to write 1 to E.</description>
              <bitRange>[13:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DestPeripheral</name>
              <description>DMA destination peripheral number. 
Min: 0000. 
Max: 1111. 
If the destination is Memory, this value is ignored.</description>
              <bitRange>[9:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SrcPeripheral</name>
              <description>DMA source peripheral config register. 
Min: 0000. 
Max: 1111. 
If the source is Memory, this value is ignored.</description>
              <bitRange>[4:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>E</name>
              <description>Set channel enable. 
0: Disable. 
1: Enable. 
After you set up the all DMA settings, set 1 to this register. 
When this value set disable during transfer, FIFO data of channel0 is erased. If you want to restart the transfer, please initialize all config of channel0 and restart the DMA. 
If you want to stop the transfer temporarily, please perform the following sequence: 
(1)Set 1 to register H, then DMA requirement stop. 
(2)Poll FIFO data until register A becomes 0 (FIFO if empty). 
(3)Set 0(disable) to this register, and write 0(disable) to register E.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_ch4_Source</name>
          <description>Channel4 Source Address Register</description>
          <addressOffset>0x180</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>SrcAddr</name>
              <description>Set DMA source address. 
Please set this value when channel4 is disabled on DMA_ch4_Config register. 
Do not update this value while data are transferred by DMA. 
This address shall be 4-Byte aligned.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_ch4_Dest</name>
          <description>Channel4 Destination Address Register</description>
          <addressOffset>0x184</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>DestAddr</name>
              <description>Set DMA destination address. 
Please set this value when channel4 is disabled on DMA_ch4_Config register. 
Do not update this value while data are transferred by DMA. 
This address shall be 4-Byte aligned.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_ch4_Link</name>
          <description>Channel4 Linked ListItem Register</description>
          <addressOffset>0x188</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>LLI</name>
              <description>Set start address of next transfer information. 
Please set a value of 0xFFFFFFF0 or less. 
When 0 is set, DMA channel will be disabled after the current DMA transfer completes. 
Set this register to use scatter/gather function. Scatter/gather is a function to execute DMA repeatedly according to informations which are pre-set on RAM. 
This address shall be 4-Byte aligned.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_ch4_Contrl</name>
          <description>Channel4 Control Register</description>
          <addressOffset>0x18C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>I</name>
              <description>Set interrupt enable of Terminal Count. 
0: Disable. 
1: Enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DI</name>
              <description>Set increment config of destination address. 
0: Do not increment (The address is fixed). 
1: Increment. 
Increment timming changes according to DWidth. 
Each Increment timming is as follows: 
Bit width is 8bit: Increment every 1Byte. 
Bit width is 16bit: Increment every 2Byte. 
Bit width is 32bit: Increment every 4Byte</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SI</name>
              <description>Set increment config of source address. 
0: Do not increment (The address is fixed). 
1: Increment. 
Increment timming is the same as DI.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DWidth</name>
              <description>Set destination bit width. 
000: 8bit (Byte). 
001: 16bit (Half word). 
010: 32bit (Word). 
Other: Reserved</description>
              <bitRange>[23:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SWidth</name>
              <description>Set source bit width. 
Same as DWidth</description>
              <bitRange>[20:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DBSize</name>
              <description>Set destination burst size. 
000: 1 beat. 
001: 4 beat. 
010: 8 beat. 
011: 16 beat. 
100: 32 beat. 
101: 64 beat. 
110: 128 beat. 
111: 256 beat</description>
              <bitRange>[17:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SBSize</name>
              <description>Set source burst size. 
Same as DBSize</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TransferSize</name>
              <description>Set the number of transfers. 
This value is decremented on every DMA transfer. Read this value to know the number of left transfers. 
When DMA_ch_Config register [0] is enabled, this value can be read. 
The number of transfers is in unit of source bit width. 
Source bit width is 8bit: Set this register in unit of Byte. 
Source bit width is 16bit: Set this register in unit of Half word. 
Source bit width is 32bit: Set this register in unit of Word. 
Attention: If source bit width is smaller than destination bit width, you should be careful to set this. The following condition shall be satisfied: 
Source bit width * TransferSize = Destinetion bit width * N (N: integer)</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_ch4_Config</name>
          <description>Channel4 Configuration Register</description>
          <addressOffset>0x190</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>H</name>
              <description>Halt DMA. 
0: No halt. 
1: Halt(Ignore DMA request)</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>A</name>
              <description>Check FIFO data of channel0. 
0: No data in FIFO. 
1: Data exists in FIFO</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>L</name>
              <description>Set bus lock transfer config. 
0: Forbid bus lock transfer. 
1: Allow bus lock transfer. 
If bus lock transfer is allowed, specified burst size is transferred without releassing the bus.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ITC</name>
              <description>DMA done interrupt enable. 
0: enable the interrupt. 
1: disable the interrupt</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IE</name>
              <description>DMA error interrupt enable. 
0: enable the interrupt. 
1: disable the interrupt</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FlowContrl</name>
              <description>Transfer mode config. 
000: Memory to Memory. 
001: Memory to Pripheral. 
010: Peripheral to Memory. 
011: Peripheral to Peripheral. 
Other: Reserved. 
Attention: If Memory to Memory is chosen, the transfer can be started to write 1 to E.</description>
              <bitRange>[13:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DestPeripheral</name>
              <description>DMA destination peripheral number. 
Min: 0000. 
Max: 1111. 
If the destination is Memory, this value is ignored.</description>
              <bitRange>[9:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SrcPeripheral</name>
              <description>DMA source peripheral config register. 
Min: 0000. 
Max: 1111. 
If the source is Memory, this value is ignored.</description>
              <bitRange>[4:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>E</name>
              <description>Set channel enable. 
0: Disable. 
1: Enable. 
After you set up the all DMA settings, set 1 to this register. 
When this value set disable during transfer, FIFO data of channel0 is erased. If you want to restart the transfer, please initialize all config of channel0 and restart the DMA. 
If you want to stop the transfer temporarily, please perform the following sequence: 
(1)Set 1 to register H, then DMA requirement stop. 
(2)Poll FIFO data until register A becomes 0 (FIFO if empty). 
(3)Set 0(disable) to this register, and write 0(disable) to register E.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_ch5_Source</name>
          <description>Channel5 Source Address Register</description>
          <addressOffset>0x1A0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>SrcAddr</name>
              <description>Set DMA source address. 
Please set this value when channel5 is disabled on DMA_ch5_Config register. 
Do not update this value while data are transferred by DMA. 
This address shall be 4-Byte aligned.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_ch5_Dest</name>
          <description>Channel5 Destination Address Register</description>
          <addressOffset>0x1A4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>DestAddr</name>
              <description>Set DMA destination address. 
Please set this value when channel5 is disabled on DMA_ch5_Config register. 
Do not update this value while data are transferred by DMA. 
This address shall be 4-Byte aligned.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_ch5_Link</name>
          <description>Channel5 Linked ListItem Register</description>
          <addressOffset>0x1A8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>LLI</name>
              <description>Set start address of next transfer information. 
Please set a value of 0xFFFFFFF0 or less. 
When 0 is set, DMA channel will be disabled after the current DMA transfer completes. 
Set this register to use scatter/gather function. Scatter/gather is a function to execute DMA repeatedly according to informations which are pre-set on RAM. 
This address shall be 4-Byte aligned.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_ch5_Contrl</name>
          <description>Channel5 Control Register</description>
          <addressOffset>0x1AC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>I</name>
              <description>Set interrupt enable of Terminal Count. 
0: Disable. 
1: Enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DI</name>
              <description>Set increment config of destination address. 
0: Do not increment (The address is fixed). 
1: Increment. 
Increment timming changes according to DWidth. 
Each Increment timming is as follows: 
Bit width is 8bit: Increment every 1Byte. 
Bit width is 16bit: Increment every 2Byte. 
Bit width is 32bit: Increment every 4Byte</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SI</name>
              <description>Set increment config of source address. 
0: Do not increment (The address is fixed). 
1: Increment. 
Increment timming is the same as DI.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DWidth</name>
              <description>Set destination bit width. 
000: 8bit (Byte). 
001: 16bit (Half word). 
010: 32bit (Word). 
Other: Reserved</description>
              <bitRange>[23:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SWidth</name>
              <description>Set source bit width. 
Same as DWidth</description>
              <bitRange>[20:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DBSize</name>
              <description>Set destination burst size. 
000: 1 beat. 
001: 4 beat. 
010: 8 beat. 
011: 16 beat. 
100: 32 beat. 
101: 64 beat. 
110: 128 beat. 
111: 256 beat</description>
              <bitRange>[17:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SBSize</name>
              <description>Set source burst size. 
Same as DBSize</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TransferSize</name>
              <description>Set the number of transfers. 
This value is decremented on every DMA transfer. Read this value to know the number of left transfers. 
When DMA_ch_Config register [0] is enabled, this value can be read. 
The number of transfers is in unit of source bit width. 
Source bit width is 8bit: Set this register in unit of Byte. 
Source bit width is 16bit: Set this register in unit of Half word. 
Source bit width is 32bit: Set this register in unit of Word. 
Attention: If source bit width is smaller than destination bit width, you should be careful to set this. The following condition shall be satisfied: 
Source bit width * TransferSize = Destinetion bit width * N (N: integer)</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_ch5_Config</name>
          <description>Channel5 Configuration Register</description>
          <addressOffset>0x1B0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>H</name>
              <description>Halt DMA. 
0: No halt. 
1: Halt(Ignore DMA request)</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>A</name>
              <description>Check FIFO data of channel0. 
0: No data in FIFO. 
1: Data exists in FIFO</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>L</name>
              <description>Set bus lock transfer config. 
0: Forbid bus lock transfer. 
1: Allow bus lock transfer. 
If bus lock transfer is allowed, specified burst size is transferred without releassing the bus.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ITC</name>
              <description>DMA done interrupt enable. 
0: enable the interrupt. 
1: disable the interrupt</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IE</name>
              <description>DMA error interrupt enable. 
0: enable the interrupt. 
1: disable the interrupt</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FlowContrl</name>
              <description>Transfer mode config. 
000: Memory to Memory. 
001: Memory to Pripheral. 
010: Peripheral to Memory. 
011: Peripheral to Peripheral. 
Other: Reserved. 
Attention: If Memory to Memory is chosen, the transfer can be started to write 1 to E.</description>
              <bitRange>[13:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DestPeripheral</name>
              <description>DMA destination peripheral number. 
Min: 0000. 
Max: 1111. 
If the destination is Memory, this value is ignored.</description>
              <bitRange>[9:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SrcPeripheral</name>
              <description>DMA source peripheral config register. 
Min: 0000. 
Max: 1111. 
If the source is Memory, this value is ignored.</description>
              <bitRange>[4:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>E</name>
              <description>Set channel enable. 
0: Disable. 
1: Enable. 
After you set up the all DMA settings, set 1 to this register. 
When this value set disable during transfer, FIFO data of channel0 is erased. If you want to restart the transfer, please initialize all config of channel0 and restart the DMA. 
If you want to stop the transfer temporarily, please perform the following sequence: 
(1)Set 1 to register H, then DMA requirement stop. 
(2)Poll FIFO data until register A becomes 0 (FIFO if empty). 
(3)Set 0(disable) to this register, and write 0(disable) to register E.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_ch6_Source</name>
          <description>Channel6 Source Address Register</description>
          <addressOffset>0x1C0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>SrcAddr</name>
              <description>Set DMA source address. 
Please set this value when channel6 is disabled on DMA_ch6_Config register. 
Do not update this value while data are transferred by DMA. 
This address shall be 4-Byte aligned.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_ch6_Dest</name>
          <description>Channel6 Destination Address Register</description>
          <addressOffset>0x1C4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>DestAddr</name>
              <description>Set DMA destination address. 
Please set this value when channel6 is disabled on DMA_ch6_Config register. 
Do not update this value while data are transferred by DMA. 
This address shall be 4-Byte aligned.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_ch6_Link</name>
          <description>Channel6 Linked ListItem Register</description>
          <addressOffset>0x1C8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>LLI</name>
              <description>Set start address of next transfer information. 
Please set a value of 0xFFFFFFF0 or less. 
When 0 is set, DMA channel will be disabled after the current DMA transfer completes. 
Set this register to use scatter/gather function. Scatter/gather is a function to execute DMA repeatedly according to informations which are pre-set on RAM. 
This address shall be 4-Byte aligned.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_ch6_Contrl</name>
          <description>Channel6 Control Register</description>
          <addressOffset>0x1CC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>I</name>
              <description>Set interrupt enable of Terminal Count. 
0: Disable. 
1: Enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DI</name>
              <description>Set increment config of destination address. 
0: Do not increment (The address is fixed). 
1: Increment. 
Increment timming changes according to DWidth. 
Each Increment timming is as follows: 
Bit width is 8bit: Increment every 1Byte. 
Bit width is 16bit: Increment every 2Byte. 
Bit width is 32bit: Increment every 4Byte</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SI</name>
              <description>Set increment config of source address. 
0: Do not increment (The address is fixed). 
1: Increment. 
Increment timming is the same as DI.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DWidth</name>
              <description>Set destination bit width. 
000: 8bit (Byte). 
001: 16bit (Half word). 
010: 32bit (Word). 
Other: Reserved</description>
              <bitRange>[23:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SWidth</name>
              <description>Set source bit width. 
Same as DWidth</description>
              <bitRange>[20:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DBSize</name>
              <description>Set destination burst size. 
000: 1 beat. 
001: 4 beat. 
010: 8 beat. 
011: 16 beat. 
100: 32 beat. 
101: 64 beat. 
110: 128 beat. 
111: 256 beat</description>
              <bitRange>[17:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SBSize</name>
              <description>Set source burst size. 
Same as DBSize</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TransferSize</name>
              <description>Set the number of transfers. 
This value is decremented on every DMA transfer. Read this value to know the number of left transfers. 
When DMA_ch_Config register [0] is enabled, this value can be read. 
The number of transfers is in unit of source bit width. 
Source bit width is 8bit: Set this register in unit of Byte. 
Source bit width is 16bit: Set this register in unit of Half word. 
Source bit width is 32bit: Set this register in unit of Word. 
Attention: If source bit width is smaller than destination bit width, you should be careful to set this. The following condition shall be satisfied:
              Source bit width * TransferSize = Destinetion bit width * N (N: integer)</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_ch6_Config</name>
          <description>Channel6 Configuration Register</description>
          <addressOffset>0x1D0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>H</name>
              <description>Halt DMA. 
0: No halt. 
1: Halt(Ignore DMA request)</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>A</name>
              <description>Check FIFO data of channel0. 
0: No data in FIFO. 
1: Data exists in FIFO</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>L</name>
              <description>Set bus lock transfer config. 
0: Forbid bus lock transfer. 
1: Allow bus lock transfer. 
If bus lock transfer is allowed, specified burst size is transferred without releassing the bus.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ITC</name>
              <description>DMA done interrupt enable. 
0: enable the interrupt. 
1: disable the interrupt</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IE</name>
              <description>DMA error interrupt enable.
0: enable the interrupt
1: disable the interrupt</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FlowContrl</name>
              <description>Transfer mode config. 
000: Memory to Memory. 
001: Memory to Pripheral. 
010: Peripheral to Memory. 
011: Peripheral to Peripheral. 
Other: Reserved. 
Attention: If Memory to Memory is chosen, the transfer can be started to write 1 to E.</description>
              <bitRange>[13:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DestPeripheral</name>
              <description>DMA destination peripheral number. 
Min: 0000. 
Max: 1111. 
If the destination is Memory, this value is ignored.</description>
              <bitRange>[9:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SrcPeripheral</name>
              <description>DMA source peripheral config register. 
Min: 0000. 
Max: 1111. 
If the source is Memory, this value is ignored.</description>
              <bitRange>[4:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>E</name>
              <description>Set channel enable. 
0: Disable. 
1: Enable. 
After you set up the all DMA settings, set 1 to this register. 
When this value set disable during transfer, FIFO data of channel0 is erased. If you want to restart the transfer, please initialize all config of channel0 and restart the DMA. 
If you want to stop the transfer temporarily, please perform the following sequence: 
(1)Set 1 to register H, then DMA requirement stop. 
(2)Poll FIFO data until register A becomes 0 (FIFO if empty). 
(3)Set 0(disable) to this register, and write 0(disable) to register E.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>


    <!-- ************************* UART1 ***************************** -->
    <peripheral>
      <name>UART1</name>
      <description>UART1</description>
      <baseAddress>0x40044000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x40</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>UART_RBR_THR</name>
          <description>Receiver Buffer Register/Transmitter Holding Register</description>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>RBR_THR</name>
              <description>Tx/Rx Data</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_ICR</name>
          <description>Interrupt Clear Register</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>TxDataCompIntClr</name>
              <description>Clear TxDataComp Interrupt</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TimeOutclr</name>
              <description>Clear CWT Time Out Interrupt</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RxDataReadyclr</name>
              <description>Clear RxDataReady Interrupt</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TxDataEMPTYclr</name>
              <description>Clear TxDataEMPTY Interrupt </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DataSentclr</name>
              <description>Clear DataSent Interrupt</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ParityErrorclr</name>
              <description>Clear ParityError Interrupt</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OverrunErrorclr</name>
              <description>Clear OverrunError Interrupt</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FramingErrorclr</name>
              <description>Clear Framing Error Interrupt</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_ILSR</name>
          <description>Interrupt and Line Status Register</description>
          <addressOffset>0x08</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>TxFC</name>
              <description>Count in Tx FIFO</description>
              <bitRange>[28:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RxFC</name>
              <description>Count in Rx FIFO</description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TxBusy</name>
              <description>Indicates is Tx working</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RxBusy</name>
              <description>Indicates if Rx working</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TxDataCompint</name>
              <description>Tx Data Complete Interrupt</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OVCRWriteBusy</name>
              <description>Status of OVCR Write</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TimeOut</name>
              <description>CWT TimeOut Interrupt Status</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RxDataReady</name>
              <description>RxDataReady Interupt Status</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TxDataEMPTY</name>
              <description>TxDataEMPTY Interrupt Status</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DataSent</name>
              <description>Data Sent Interrupt Status</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ParityError</name>
              <description>ParityErrorr Interrupt Status</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OverrunError</name>
              <description>OverrunError Interrupt Status</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FramingError</name>
              <description>FramingError Interrupt Status</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IER</name>
          <description>Interrupt Enable Register</description>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>TxDataCompEN</name>
              <description>TxDataComp Interrupt Enable</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TimeOutEN</name>
              <description>CWT TimeOut Interrupt Enable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RxDataReadyEN</name>
              <description>RxDataReady Interrupt Enable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TxDataEMPTYEN</name>
              <description>TxDataEMPTY Interrupt Enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DataSentEN</name>
              <description>DataSent Interrupt Enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ParityErrorEN</name>
              <description>ParityError Interrupt Enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OverrunErrorEN</name>
              <description>OverrunError Interrupt Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FramingErrorEN</name>
              <description>FramingError Interrupt Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LFCR</name>
          <description>Line and FIFO Control Register</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>UARTRXMSK</name>
              <description>Rx Data Mask</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RTSEn</name>
              <description>Enable RTS Flow Control</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CTSEn</name>
              <description>Enable CTS Flow Control</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TxDMAEn</name>
              <description>TxDMA Request output enable</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RxDMAEn</name>
              <description>RxDMA Request output enable</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TxFIFOEn</name>
              <description>TxFIFO Enable/Disable</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RxFIFOEn</name>
              <description>RxFIFO Enable/Disable</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RxFIFOSel</name>
              <description>Select Rx FIFO Watermark Level</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ClkSel</name>
              <description>Select Clock for BaudRate</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TimerEnable</name>
              <description>Tx Timer Enable/Disable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>InitUART</name>
              <description>Initialize Sample Counter</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>StopSel</name>
              <description>Select Stop bit(1bit or 2bit)</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ParitySel</name>
              <description>Select Parity bit (odd or even)</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TxParityEn</name>
              <description>Tx Data parity enable/disable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RxParityEn</name>
              <description>Rx Data parity enable/disable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TxOutEn</name>
              <description>Tx Output enable/disable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_OVCR</name>
          <description>Sampling Control Register</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>STDETCYC</name>
              <description>Start bit detect cycles for UART Rx Data</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OVSMPCYC</name>
              <description>Oversample cycles setting</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_CWTCR</name>
          <description>CWT Control Register</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>RxDataMon</name>
              <description>Monitor data existance info after Character Inteval Timeout</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TimStartValue</name>
              <description>UART Receive Timer value</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IBRD</name>
          <description>Baud Rate Setting Register</description>
          <addressOffset>0x1C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>BAUDINT</name>
              <description>UART Baudrate Integer divisor value</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_FBRD</name>
          <description>Baud Rate Decimal Setting Register</description>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>FBRD</name>
              <description>UART Baudrate Decimal Setting</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>


    <!-- ************************* UART2 ***************************** -->
    <peripheral>
      <name>UART2</name>
      <description>UART2</description>
      <baseAddress>0x4005C000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x40</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>UART_RBR_THR</name>
          <description>Receiver Buffer Register/Transmitter Holding Register</description>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>RBR_THR</name>
              <description>Tx/Rx Data</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_ICR</name>
          <description>Interrupt Clear Register</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>TxDataCompIntClr</name>
              <description>Clear TxDataComp Interrupt</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TimeOutclr</name>
              <description>Clear CWT Time Out Interrupt</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RxDataReadyclr</name>
              <description>Clear RxDataReady Interrupt</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TxDataEMPTYclr</name>
              <description>Clear TxDataEMPTY Interrupt </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DataSentclr</name>
              <description>Clear DataSent Interrupt</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ParityErrorclr</name>
              <description>Clear ParityError Interrupt</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OverrunErrorclr</name>
              <description>Clear OverrunError Interrupt</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FramingErrorclr</name>
              <description>Clear Framing Error Interrupt</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_ILSR</name>
          <description>Interrupt and Line Status Register</description>
          <addressOffset>0x08</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>TxFC</name>
              <description>Count in Tx FIFO</description>
              <bitRange>[28:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RxFC</name>
              <description>Count in Rx FIFO</description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TxBusy</name>
              <description>Indicates is Tx working</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RxBusy</name>
              <description>Indicates if Rx working</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TxDataCompint</name>
              <description>Tx Data Complete Interrupt</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OVCRWriteBusy</name>
              <description>Status of OVCR Write</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TimeOut</name>
              <description>CWT TimeOut Interrupt Status</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RxDataReady</name>
              <description>RxDataReady Interupt Status</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TxDataEMPTY</name>
              <description>TxDataEMPTY Interrupt Status</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DataSent</name>
              <description>Data Sent Interrupt Status</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ParityError</name>
              <description>ParityErrorr Interrupt Status</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OverrunError</name>
              <description>OverrunError Interrupt Status</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FramingError</name>
              <description>FramingError Interrupt Status</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IER</name>
          <description>Interrupt Enable Register</description>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>TxDataCompEN</name>
              <description>TxDataComp Interrupt Enable</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TimeOutEN</name>
              <description>CWT TimeOut Interrupt Enable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RxDataReadyEN</name>
              <description>RxDataReady Interrupt Enable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TxDataEMPTYEN</name>
              <description>TxDataEMPTY Interrupt Enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DataSentEN</name>
              <description>DataSent Interrupt Enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ParityErrorEN</name>
              <description>ParityError Interrupt Enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OverrunErrorEN</name>
              <description>OverrunError Interrupt Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FramingErrorEN</name>
              <description>FramingError Interrupt Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LFCR</name>
          <description>Line and FIFO Control Register</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>UARTRXMSK</name>
              <description>Rx Data Mask</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RTSEn</name>
              <description>Enable RTS Flow Control</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CTSEn</name>
              <description>Enable CTS Flow Control</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TxDMAEn</name>
              <description>TxDMA Request output enable</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RxDMAEn</name>
              <description>RxDMA Request output enable</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TxFIFOEn</name>
              <description>TxFIFO Enable/Disable</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RxFIFOEn</name>
              <description>RxFIFO Enable/Disable</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RxFIFOSel</name>
              <description>Select Rx FIFO Watermark Level</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ClkSel</name>
              <description>Select Clock for BaudRate</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TimerEnable</name>
              <description>Tx Timer Enable/Disable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>InitUART</name>
              <description>Initialize Sample Counter</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>StopSel</name>
              <description>Select Stop bit(1bit or 2bit)</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ParitySel</name>
              <description>Select Parity bit (odd or even)</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TxParityEn</name>
              <description>Tx Data parity enable/disable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RxParityEn</name>
              <description>Rx Data parity enable/disable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TxOutEn</name>
              <description>Tx Output enable/disable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_OVCR</name>
          <description>Sampling Control Register</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>STDETCYC</name>
              <description>Start bit detect cycles for UART Rx Data</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OVSMPCYC</name>
              <description>Oversample cycles setting</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_CWTCR</name>
          <description>CWT Control Register</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>RxDataMon</name>
              <description>Monitor data existance info after Character Inteval Timeout</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TimStartValue</name>
              <description>UART Receive Timer value</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IBRD</name>
          <description>Baud Rate Setting Register</description>
          <addressOffset>0x1C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>BAUDINT</name>
              <description>UART Baudrate Integer divisor value</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_FBRD</name>
          <description>Baud Rate Decimal Setting Register</description>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>FBRD</name>
              <description>UART Baudrate Decimal Setting</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    
    <!-- ************************* SPI1 ***************************** -->
    <peripheral>
      <name>SPI1</name>
      <description>Serial Peripheral Interface(Master/Slave)</description>
      <baseAddress>0x40046000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x30</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>SPI_CONTROL</name>
          <description>SPI control</description>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>SLAVE</name>
              <description>Set master/slave mode (R/W). 
0: Master mode (default). 
1: Slave mode</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPCSPL0</name>
              <description>Set CS polarity (R/W). 
0: Low active (default). 
1: High active</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPCSEN0</name>
              <description>Enable CS (R/W). 
0: Disable. 
1: Enable (default)</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPDIR</name>
              <description>Specify LSB/MSB first (R/W). 
0: MSB first (default). 
1: LSB first</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPSCKPL</name>
              <description>Specify serial clock polarity (R/W). 
0: Sampling at high (default). 
1: Sampling at low</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPSCKPH</name>
              <description>Specify serial clock phase (R/W). 
0: Sampling at the first edge (default). 
1: Sampling at the second edge</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SETACT</name>
              <description>Set operation mode (R/W). 
0: Configuration mode. 
1: Active mode (default)</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_TIMINGCONTROL</name>
          <description>SPI timing control</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>div</name>
              <description>Change the division setting.</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCKADJ</name>
              <description>Serial Clock Adjustment. 
Set a value less than [15:8]. 
0: Forbidden. 
1-63: settingvalue</description>
              <bitRange>[29:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EXCKW</name>
              <description>Set Write clock extension. 
SCK will be output after the deassert of CS. 
The duration is set on [7:4]. 
0: Disable clock extension. 
1: Enable clock extension.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EXCKR</name>
              <description>SCK will be output after the deassert of CS. 
The duration is set on [7:4]. 
0: Disable clock extension. 
1: Enable clock extension.</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SMPADJ</name>
              <description>Sampling clock adjustment. 
0: forbidden. 
1-63: setting value</description>
              <bitRange>[21:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BASE</name>
              <description>Frequency divider. 
0: Forbidden. 
1-255: value</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CSDIS</name>
              <description>Chip Select disable parameter. 
              If set, CS will be deasserted at least clock*(this value +1). 
0: No deassert. 
1-15: Deassert</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCKMD</name>
              <description>Serial Clock Mode. 
Enable/Disable Serial Clock modulation mode. 
0: Disabled. 
1: Enabled</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SMPMD</name>
              <description>Sampling Modulation Mode.HOGEHOHGEOHGOHOGEHOGH</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRS</name>
              <description>Pre-Scaler Setting. 
00: Communication clock x 1/1. 
01: Communication clock x 1/2. 
10: Communication clock x 1/4. 
11: Communication clock x 1/8</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_TXDATA</name>
          <description>SPI TX data</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>LEN</name>
              <description>Default value is zero. 
When CMD is write (bit[18] = 0), set TX options (R/W). bit[31:26] Reserved bit[25] SPI DO polarity (0: L, 1: H) bit[24] SPI DO output status (0: keep the last data, 1: output H/L set at bit 25). 
When CMD is read (bit[18] = 1), set RX data length (R/W). bit[31:24] RX data length (unit is defined at bit[17:16])</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WRBIT</name>
              <description>Set valid TX bit length (R/W). 
0x0: The setting at bit[17:16] is applied (default). 
0x1: 1 bit. 
0x2: 2 bit. 
... 
0xF: 15 bit</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CONT</name>
              <description>Set continuous transfer (R/W). 
0: Deassert CS per word (default). 
1: Keep CS between words</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CMD</name>
              <description>Set transfer command (R/W). 
0: Write (default). 
1: Read</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BYTE</name>
              <description>Set transfer byte length (R/W). 
00: 1 byte (default). 
01: 2 bytes. 
10: 3 bytes (valid for read). 
11: 4 bytes (valid for read)</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TX</name>
              <description>Set TX data (R/W) Default value is zero.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_RXDATA</name>
          <description>SPI RX Data</description>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <fields>
            <field>
              <name>RX</name>
              <description>Get RX data (R). 
When data is 24 bit length, [31:24] = 0x00 (default). 
When data is 16 bit length, [31:16] = 0x0000. 
When data is 8 bit length, [31:8] = 0x000000.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_INTCONTROL</name>
          <description>SPI intrrupt control</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>RXCLR</name>
              <description>Clear RX FIFO (R/W). 
0: Do not clear (default). 
1: Clear After claer, this register becomes 0.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXINUM</name>
              <description>Watermark for Rx FIFO interrupt. 
000: more than 1 data. 
001: more than 2 data. 
010: more than 3 data. 
011: more than 4 data. 
100: more than 5 data. 
101: more than 6 data. 
110: more than 7 data. 
111: more than 8 data</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INTCTXCOMPSEL</name>
              <description>Tx complete interrupt select bit. 
Selects the interrupt for bit 10 of interrupt status register. 
0: SPI Tx complete status. 
1: SPI Tx complete including SPI DMA TX</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXCLR</name>
              <description>Clear TX FIFO (R/W). 
0: Do not clear (default). 
1: Clear After claer, this register becomes 0.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INTCTXCOMP</name>
              <description>Set Tx complete interrupt. 
0: Disable interrupt. 
1: Enable interrupt</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXINUM</name>
              <description>Water mark for TX FIFO interrupt. 
000: more than 1 data. 
001: more than 2 data. 
010: more than 3 data. 
011: more than 4 data. 
100: more than 5 data. 
101: more than 6 data. 
110: more than 7 data. 
111: more than 8 data</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INTCTXUR</name>
              <description>Serial Under-run interrupt. 
0: Disable interrupt. 
1: Enable interrupt.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INTCTIM1</name>
              <description>Serial Tx Wait timer1 interrupt. 
0: Disable interrupt. 
1: Enable interrupt.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INTCTIM0</name>
              <description>Serial Tx Wait timer 0 interrupt. 
0: Disable interrupt. 
1: Enable interrupt.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INTCPS</name>
              <description>Serial Tx Complete interrupt. 
0: Disable interrupt. 
1: Enable interrupt.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INTCRX0</name>
              <description>RX FIFO Overrun interrupt. 
0: Disable interrupt. 
1: Enable interrupt.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INTCTX0</name>
              <description>TX FIFO Overrun interrupt. 
0: Disable interrupt. 
1: Enable interrupt.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INTRX</name>
              <description>RX FIFO interrupt. 
Asserted when there are datas more than [18:16]. 
0: Disable interrupt. 
1: Enable interrupt.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INTTX</name>
              <description>TX FIFO interrupt. 
Asserted when there are datas more than [10:8]. 
0: Disable interrupt. 
1: Enable interrupt.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_INTSTATUS</name>
          <description>SPI interrupt status</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>RXNUM</name>
              <description>Read deta length in RX FIFO (R). 
0000: 0 (default). 
0001: 1. 
...
0111: 7. 
1000: 8. 
Others: Don't care</description>
              <bitRange>[31:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TXNUM</name>
              <description>Read deta length in TX FIFO (R). 
0000: 0 (default). 
0001: 1. 
... 
0111: 7. 
1000: 8. 
Others: Don't care</description>
              <bitRange>[27:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RXRPT</name>
              <description>Rx FIFO Read pointer info</description>
              <bitRange>[23:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXWPT</name>
              <description>Rx FIFO Write pointer info</description>
              <bitRange>[20:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXRPT</name>
              <description>Tx FIFO Read pointer info</description>
              <bitRange>[17:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXWPT</name>
              <description>Tx FIFO Read pointer info</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SIFACT</name>
              <description>Read the status of serial interface (R). 
0: Idle (default). 
1: Operating</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TXCOMP</name>
              <description>Read the status of TX complete interrupt. 
0: Exists Interrupt factor. 
1: No Interrupt factor.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXEMP</name>
              <description>Read the status of RX FIFO (R). 
0: RX FIFO is empty. 
1: RX FIFO is not empty.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TXFUL</name>
              <description>Read the status of TX FIFO (R). 
0: TX FIFO is full. 
1: TX FIFO is not full.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>INTSTXUR</name>
              <description>Reads Tx Underrun interrupt status. 
Write 1 to clear. Write 0 is don't care. 
0: No interrupt. 
1: Interrupt exist.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INTSTIM1</name>
              <description>Reads Tx Wait timer1 interrupt status. 
Write 1 to clear. Write 0 is don't care. 
0: No interrupt. 
1: Interrupt exist.</description>

              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INTSTIM0</name>
              <description>Reads Tx Wait timer0 interrupt status. 
Write 1 to clear. Write 0 is don't care. 
0: No interrupt. 
1: Interrupt exist.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INTSSPS</name>
              <description>Reads Tx send complete interrupt status. 
Write 1 to clear. Write 0 is don't care. 
0: No interrupt. 
1: Interrupt exist.</description>
              <description>INTSSPS</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INTSRX0</name>
              <description>Reads Rx Fifo Overrun interrupt status. 
Write 1 to clear. Write 0 is don't care. 
0: No interrupt. 
1: Interrupt exist.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INTSTX0</name>
              <description>Reads Tx Fifo Overrun interrupt. 
Write 1 to clear. Write 0 is don't care. 
0: No interrupt. 
1: Interrupt exist.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INTSRX</name>
              <description>Reads Rx FIFO interrupt. 
Write 1 to clear. Write 0 is don't care. 
0: No interrupt. 
1: Interrupt exist.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INTSTX</name>
              <description>Reads Tx FIFO interrupt. 
Write 1 to clear. Write 0 is don't care. 
0: No interrupt. 
1: Interrupt exist.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_TIMINGCONTROL2</name>
          <description>SPI timing control</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>ADDSPLDLY</name>
              <description>Add sampling delay of RX data (R/W). 
01: 1 clk delay (fixed)</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DOADJ</name>
              <description>Adjust Serial data and chip select. 
0: No adjustment. 
Other: value</description>
              <bitRange>[13:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCSMD</name>
              <description>Chip Select output adjust timing enable/disable. 
0: disable. 
1: enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SDOMD</name>
              <description>Seriaou output adjust enable/disable. 
0: Disable. 
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_TXWAITTIMER0</name>
          <description>SPI Wait Timer 0</description>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>TIM0B</name>
              <description>Value for Tx Waittimer0.</description>
              <bitRange>[19:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_TXWAITTIMER1</name>
          <description>SPI Wait Timer 1</description>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>TIM1B</name>
              <description>Value for Tx Waittimer1.</description>
              <bitRange>[19:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_TXRXLENGTH</name>
          <description>SPI Data Langth</description>
          <addressOffset>0x2C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>RxLEN</name>
              <description>Set the length of Rx data length. 
00-02: Forbidden. 
03: 4bit. 
04: 5bit. 
... 
1E:31bit. 
1F:32bit</description>
              <bitRange>[12:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TxLEN</name>
              <description>Set the length of Tx data length. 
00-02: Forbidden. 
03: 4bit. 
04: 5bit. 
... 
1E: 31bit. 
1F: 32bit</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>

    <!-- ************************* SPI2 ***************************** -->
    <peripheral>
      <name>SPI2</name>
      <description>Serial Peripheral Interface(Master/Slave)</description>
      <baseAddress>0x40056000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x30</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>SPI_CONTROL</name>
          <description>SPI control</description>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>SLAVE</name>
              <description>Set master/slave mode (R/W). 
0: Master mode (default). 
1: Slave mode</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPCSPL0</name>
              <description>Set CS polarity (R/W). 
0: Low active (default). 
1: High active</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPCSEN0</name>
              <description>Enable CS (R/W). 
0: Disable. 
1: Enable (default)</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPDIR</name>
              <description>Specify LSB/MSB first (R/W). 
0: MSB first (default). 
1: LSB first</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPSCKPL</name>
              <description>Specify serial clock polarity (R/W). 
0: Sampling at high (default). 
1: Sampling at low</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPSCKPH</name>
              <description>Specify serial clock phase (R/W). 
0: Sampling at the first edge (default). 
1: Sampling at the second edge</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SETACT</name>
              <description>Set operation mode (R/W). 
0: Configuration mode. 
1: Active mode (default)</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_TIMINGCONTROL</name>
          <description>SPI timing control</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>div</name>
              <description>Change the division setting.</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCKADJ</name>
              <description>Serial Clock Adjustment. 
Set a value less than [15:8]. 
0: Forbidden. 
1-63: settingvalue</description>
              <bitRange>[29:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EXCKW</name>
              <description>Set Write clock extension. 
SCK will be output after the deassert of CS. 
The duration is set on [7:4]. 
0: Disable clock extension. 
1: Enable clock extension.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EXCKR</name>
              <description>SCK will be output after the deassert of CS. 
The duration is set on [7:4]. 
0: Disable clock extension. 
1: Enable clock extension.</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SMPADJ</name>
              <description>Sampling clock adjustment. 
0: forbidden. 
1-63: setting value</description>
              <bitRange>[21:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BASE</name>
              <description>Frequency divider. 
0: Forbidden. 
1-255: value</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CSDIS</name>
              <description>Chip Select disable parameter. 
If set, CS will be deasserted at least clock*(this value +1). 
0: No deassert. 
1-15: Deassert</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCKMD</name>
              <description>Serial Clock Mode. 
Enable/Disable Serial Clock modulation mode. 
0: Disabled. 
1: Enabled</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SMPMD</name>
              <description>Sampling Modulation Mode.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRS</name>
              <description>Pre-Scaler Setting. 
00: Communication clock x 1/1. 
01: Communication clock x 1/2. 
10: Communication clock x 1/4. 
11: Communication clock x 1/8</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_TXDATA</name>
          <description>SPI TX data</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>LEN</name>
              <description>Default value is zero. 
When CMD is write (bit[18] = 0), set TX options (R/W). bit[31:26] Reserved bit[25] SPI DO polarity (0: L, 1: H) bit[24] SPI DO output status (0: keep the last data, 1: output H/L set at bit 25). 
When CMD is read (bit[18] = 1), set RX data length (R/W). bit[31:24] RX data length (unit is defined at bit[17:16])</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WRBIT</name>
              <description>Set valid TX bit length (R/W). 
0x0: The setting at bit[17:16] is applied (default). 
0x1: 1 bit. 
0x2: 2 bit. 
... 
0xF: 15 bit</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CONT</name>
              <description>Set continuous transfer (R/W). 
0: Deassert CS per word (default). 
1: Keep CS between words</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CMD</name>
              <description>Set transfer command (R/W). 
0: Write (default). 
1: Read</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BYTE</name>
              <description>Set transfer byte length (R/W). 
00: 1 byte (default). 
01: 2 bytes. 
10: 3 bytes (valid for read). 
11: 4 bytes (valid for read)</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TX</name>
              <description>Set TX data (R/W) Default value is zero.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_RXDATA</name>
          <description>SPI RX Data</description>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <fields>
            <field>
              <name>RX</name>
              <description>Get RX data (R). 
When data is 24 bit length, [31:24] = 0x00 (default). 
When data is 16 bit length, [31:16] = 0x0000. 
When data is 8 bit length, [31:8] = 0x000000.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_INTCONTROL</name>
          <description>SPI intrrupt control</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>RXCLR</name>
              <description>Clear RX FIFO (R/W). 
0: Do not clear (default). 
1: Clear After claer, this register becomes 0.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXINUM</name>
              <description>Watermark for Rx FIFO interrupt. 
000: more than 1 data. 
001: more than 2 data. 
010: more than 3 data. 
011: more than 4 data. 
100: more than 5 data. 
101: more than 6 data. 
110: more than 7 data. 
111: more than 8 data</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INTCTXCOMPSEL</name>
              <description>Tx complete interrupt select bit. 
Selects the interrupt for bit 10 of interrupt status register. 
0: SPI Tx complete status. 
1: SPI Tx complete including SPI DMA TX</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXCLR</name>
              <description>Clear TX FIFO (R/W). 
0: Do not clear (default). 
1: Clear After claer, this register becomes 0.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INTCTXCOMP</name>
              <description>Set Tx complete interrupt. 
0: Disable interrupt. 
1: Enable interrupt</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXINUM</name>
              <description>Water mark for TX FIFO interrupt. 
000: more than 1 data. 
001: more than 2 data. 
010: more than 3 data. 
011: more than 4 data. 
100: more than 5 data. 
101: more than 6 data. 
110: more than 7 data. 
111: more than 8 data</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INTCTXUR</name>
              <description>Serial Under-run interrupt. 
0: Disable interrupt. 
1: Enable interrupt.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INTCTIM1</name>
              <description>Serial Tx Wait timer1 interrupt. 
0: Disable interrupt. 
1: Enable interrupt.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INTCTIM0</name>
              <description>Serial Tx Wait timer 0 interrupt. 
0: Disable interrupt. 
1: Enable interrupt.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INTCPS</name>
              <description>Serial Tx Complete interrupt. 
0: Disable interrupt. 
1: Enable interrupt.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INTCRX0</name>
              <description>RX FIFO Overrun interrupt. 
0: Disable interrupt. 
1: Enable interrupt.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INTCTX0</name>
              <description>TX FIFO Overrun interrupt. 
0: Disable interrupt. 
1: Enable interrupt.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INTRX</name>
              <description>RX FIFO interrupt. 
Asserted when there are datas more than [18:16]. 
0: Disable interrupt. 
1: Enable interrupt.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INTTX</name>
              <description>TX FIFO interrupt. 
Asserted when there are datas more than [10:8]. 
0: Disable interrupt. 
1: Enable interrupt.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_INTSTATUS</name>
          <description>SPI interrupt status</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>RXNUM</name>
              <description>Read deta length in RX FIFO (R). 
0000: 0 (default). 
0001: 1. 
... 
0111: 7. 
1000: 8. 
Others: Don't care</description>
              <bitRange>[31:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TXNUM</name>
              <description>Read deta length in TX FIFO (R). 
0000: 0 (default). 
0001: 1. 
... 
0111: 7. 
1000: 8. 
Others: Don't care</description>
              <bitRange>[27:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RXRPT</name>
              <description>Rx FIFO Read pointer info</description>
              <bitRange>[23:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXWPT</name>
              <description>Rx FIFO Write pointer info</description>
              <bitRange>[20:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXRPT</name>
              <description>Tx FIFO Read pointer info</description>
              <bitRange>[17:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXWPT</name>
              <description>Tx FIFO Read pointer info</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SIFACT</name>
              <description>Read the status of serial interface (R). 
0: Idle (default). 
1: Operating</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TXCOMP</name>
              <description>Read the status of TX complete interrupt. 
0: Exists Interrupt factor. 
1: No Interrupt factor.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXEMP</name>
              <description>Read the status of RX FIFO (R). 
0: RX FIFO is empty. 
1: RX FIFO is not empty.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TXFUL</name>
              <description>Read the status of TX FIFO (R). 
0: TX FIFO is full. 
1: TX FIFO is not full.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>INTSTXUR</name>
              <description>Reads Tx Underrun interrupt status. 
Write 1 to clear. Write 0 is don't care. 
0: No interrupt. 
1: Interrupt exist.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INTSTIM1</name>
              <description>Reads Tx Wait timer1 interrupt status. 
Write 1 to clear. Write 0 is don't care. 
0: No interrupt. 
1: Interrupt exist.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INTSTIM0</name>
              <description>Reads Tx Wait timer0 interrupt status. 
Write 1 to clear. Write 0 is don't care. 
0: No interrupt. 
1: Interrupt exist.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INTSSPS</name>
              <description>Reads Tx send complete interrupt status. 
Write 1 to clear. Write 0 is don't care. 
0: No interrupt. 
1: Interrupt exist.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INTSRX0</name>
              <description>Reads Rx Fifo Overrun interrupt status. 
Write 1 to clear. Write 0 is don't care. 
0: No interrupt. 
1: Interrupt exist.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INTSTX0</name>
              <description>Reads Tx Fifo Overrun interrupt. 
Write 1 to clear. Write 0 is don't care. 
0: No interrupt. 
1: Interrupt exist.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INTSRX</name>
              <description>Reads Rx FIFO interrupt. 
Write 1 to clear. Write 0 is don't care. 
0: No interrupt. 
1: Interrupt exist.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INTSTX</name>
              <description>Reads Tx FIFO interrupt. 
Write 1 to clear. Write 0 is don't care. 
0: No interrupt. 
1: Interrupt exist.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_TIMINGCONTROL2</name>
          <description>SPI timing control</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>ADDSPLDLY</name>
              <description>Add sampling delay of RX data (R/W). 
01: 1 clk delay (fixed)</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DOADJ</name>
              <description>Adjust Serial data and chip select. 
0: No adjustment. 
Other: value</description>
              <bitRange>[13:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCSMD</name>
              <description>Chip Select output adjust timing enable/disable. 
0: disable. 
1: enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SDOMD</name>
              <description>Seriaou output adjust enable/disable. 
0: Disable. 
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_TXWAITTIMER0</name>
          <description>SPI Wait Timer 0</description>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>TIM0B</name>
              <description>Value for Tx Waittimer0.</description>
              <bitRange>[19:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_TXWAITTIMER1</name>
          <description>SPI Wait Timer 1</description>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>TIM1B</name>
              <description>Value for Tx Waittimer1.</description>
              <bitRange>[19:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_TXRXLENGTH</name>
          <description>SPI Data Langth</description>
          <addressOffset>0x2C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>RxLEN</name>
              <description>Set the length of Rx data length. 
00-02: Forbidden. 
03: 4bit. 
04: 5bit. 
... 
1E:31bit. 
1F:32bit</description>
              <bitRange>[12:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TxLEN</name>
              <description>Set the length of Tx data length. 
00-02: Forbidden. 
03: 4bit. 
04: 5bit. 
... 
1E: 31bit. 
1F: 32bit</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>

    <!-- ************************* I2C1 ***************************** -->
    <peripheral>
      <name>I2C1</name>
      <description>I2C1</description>
      <baseAddress>0x40048000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x30</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>I2C_CR1</name>
          <description>I2C Control</description>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>BC</name>
              <description>Transfer bit setting</description>
              <bitRange>[7:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ACK</name>
              <description>Clock for Ack select</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NOACK</name>
              <description>Slave address check and general call check</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCK</name>
              <description>Serial Clock Frequency select</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_DBR</name>
          <description>Tx Data or Rx Data register</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>DB</name>
              <description>Read / Write Data</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_AR</name>
          <description>I2C Bus address register</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>SA</name>
              <description>Slave address</description>
              <bitRange>[7:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ALS</name>
              <description>Address cognition mode</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_CR2</name>
          <description>I2C Control register 2</description>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>MST</name>
              <description>Master / Slave select</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TRX</name>
              <description>Tx/Rx select</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BB</name>
              <description>Start/Stop condition</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIN</name>
              <description>Internal Interrupt reset</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>I2CM</name>
              <description>I2C control</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SWRST</name>
              <description>Software Reset</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_SR</name>
          <description>I2C Status register</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>MST</name>
              <description>Master/Slave monitor</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TRX</name>
              <description>Tx/Rx monitor</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BB</name>
              <description>Bus Busy monitor</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIN</name>
              <description>Interrupt status monitor</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AL</name>
              <description>Arbitration Lost monitor</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AAS</name>
              <description>Slave Address Correspondence monitor</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ADO</name>
              <description>General Call monitor</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LRB</name>
              <description>Last Bit Receive monitor</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_PRS</name>
          <description>I2C Pre-scaler register</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>PRSCK</name>
              <description>Select pre-scaler freqyency for serial clock</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_IE</name>
          <description>I2C Interrut enable register</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>SELPINCD</name>
              <description>PIN release condition select</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MARI2CTX</name>
              <description>DMA Request Rx enable/disable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DMARI2CRX</name>
              <description>DMA Request Tx enable/disable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ININACK</name>
              <description>NACK interrupt enable/disable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INTI2CBF</name>
              <description>Bus free interrupt enable/disable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INTI2CAL</name>
              <description>Arbitration lost interrupt enable/disable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INTI2C</name>
              <description>I2C enable/disable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_ST</name>
          <description>I2C Status register</description>
          <addressOffset>0x1C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>NOACK</name>
              <description>NOACK status</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>I2CBF</name>
              <description>INTI2CBF status</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>I2CAL</name>
              <description>INTI2CAL status</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C</name>
              <description>INTI2C status</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_OP</name>
          <description>I2C extended feature register</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>DISAL</name>
              <description>Arbitration lost disable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SA2ST</name>
              <description>Receive Slave address 2 check</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SAST</name>
              <description>Receive Slave address check</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NFSEL</name>
              <description>Select NF</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSTA</name>
              <description>Restart Flag</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GCDI</name>
              <description>General Call enable/disable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SREN</name>
              <description>Restart request</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MFACK</name>
              <description>Mask ACK output</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_PM</name>
          <description>I2C Bus monitor</description>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>MSTCMOSEN</name>
              <description>Master/Slave select in CMOS mode</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SDACMOSEN</name>
              <description>SDA CMOS mode select</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCLCMOSEN</name>
              <description>SCL CMOS mode select</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SDA</name>
              <description>Monitor SDA pin level</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCL</name>
              <description>Monitor SCL pin level</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_AR2</name>
          <description>I2C Bus address register</description>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>SA2</name>
              <description>Slave Addres config 2</description>
              <bitRange>[7:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SA2EN</name>
              <description>2nd Slave address enable/disable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>

    <!-- ************************* I2C2 ***************************** -->
    <peripheral>
      <name>I2C2</name>
      <description>I2C2</description>
      <baseAddress>0x40058000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x30</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>I2C_CR1</name>
          <description>I2C Control</description>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>BC</name>
              <description>Transfer bit setting</description>
              <bitRange>[7:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ACK</name>
              <description>Clock for Ack select</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NOACK</name>
              <description>Slave address check and general call check</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCK</name>
              <description>Serial Clock Frequency select</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_DBR</name>
          <description>Tx Data or Rx Data register</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>DB</name>
              <description>Read / Write Data</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_AR</name>
          <description>I2C Bus address register</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>SA</name>
              <description>Slave address</description>
              <bitRange>[7:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ALS</name>
              <description>Address cognition mode</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_CR2</name>
          <description>I2C Control register 2</description>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>MST</name>
              <description>Master / Slave select</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TRX</name>
              <description>Tx/Rx select</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BB</name>
              <description>Start/Stop condition</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIN</name>
              <description>Internal Interrupt reset</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>I2CM</name>
              <description>I2C control</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SWRST</name>
              <description>Software Reset</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_SR</name>
          <description>I2C Status register</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>MST</name>
              <description>Master/Slave monitor</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TRX</name>
              <description>Tx/Rx monitor</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BB</name>
              <description>Bus Busy monitor</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIN</name>
              <description>Interrupt status monitor</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AL</name>
              <description>Arbitration Lost monitor</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AAS</name>
              <description>Slave Address Correspondence monitor</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ADO</name>
              <description>General Call monitor</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LRB</name>
              <description>Last Bit Receive monitor</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_IE</name>
          <description>I2C Interrut enable register</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>SELPINCD</name>
              <description>PIN release condition select</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DMARI2CTX</name>
              <description>DMA Request Rx enable/disable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DMARI2CRX</name>
              <description>DMA Request Tx enable/disable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ININACK</name>
              <description>NACK interrupt enable/disable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INTI2CBF</name>
              <description>Bus free interrupt enable/disable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INTI2CAL</name>
              <description>Arbitration lost interrupt enable/disable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INTI2C</name>
              <description>I2C enable/disable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_ST</name>
          <description>I2C Status register</description>
          <addressOffset>0x1C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>NOACK</name>
              <description>NOACK status</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>I2CBF</name>
              <description>INTI2CBF status</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>I2CAL</name>
              <description>INTI2CAL status</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C</name>
              <description>INTI2C status</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_OP</name>
          <description>I2C extended feature register</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>DISAL</name>
              <description>Arbitration lost disable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SA2ST</name>
              <description>Receive Slave address 2 check</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SAST</name>
              <description>Receive Slave address check</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NFSEL</name>
              <description>Select NF</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSTA</name>
              <description>Restart Flag</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GCDI</name>
              <description>General Call enable/disable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SREN</name>
              <description>Restart request</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MFACK</name>
              <description>Mask ACK output</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2CPM</name>
          <description>I2C Bus monitor</description>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>MSTCMOSEN</name>
              <description>Master/Slave select in CMOS mode</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SDACMOSEN</name>
              <description>SDA CMOS mode select</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCLCMOSEN</name>
              <description>SCL CMOS mode select</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SDA</name>
              <description>Monitor SDA pin level</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCL</name>
              <description>Monitor SCL pin level</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_AR2</name>
          <description>I2C Bus address register</description>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>SA2</name>
              <description>Slave Addres config 2</description>
              <bitRange>[7:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SA2EN</name>
              <description>2nd Slave address enable/disable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>


    <!-- ************************* GPADC ***************************** -->
    <peripheral>
      <name>GPADC</name>
      <description>General Purpose ADC registers</description>
      <baseAddress>0x4004A000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x20</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>GPADCC_CTRL</name>
          <description>GPADC control</description>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>TimerSoc</name>
              <description>Periodic ADC feature</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MODE</name>
              <description>Single/Continuous ADC select</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DMAEN</name>
              <description>DMA Enable/Disable</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Cont</name>
              <description>GPADC characteristic register</description>
              <bitRange>[13:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ClkOn</name>
              <description>Clock On/Off</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ClkAuto</name>
              <description>Automatic clock supply On/Off</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Pd</name>
              <description>Power Down signal select</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CoreOn</name>
              <description>CoreOn signal select</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Reset</name>
              <description>Reset Signal select</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Soc</name>
              <description>SOC output</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPADCC_SELAIN</name>
          <description>Select ADC input channel</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>SelAin</name>
              <description>Analog input channel select</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPADCC_DATA</name>
          <description>ADC Conversion Data Read register</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>G_D</name>
              <description>G_D</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPADCC_INTMASK</name>
          <description>GPADC interrupt mask</description>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>IntMask</name>
              <description>Interrupt mask</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPADCC_INTCLR</name>
          <description>GPADC Interrupt clear register</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>IntClr</name>
              <description>Clear Interrupt</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPADCC_STATE</name>
          <description>GPADC state register</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>G_EOC</name>
              <description>End of Conversion</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Int</name>
              <description>Interrupt</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPADCC_BUSYMASK</name>
          <description>GPADC Busy signal mask setting</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>BusyMask</name>
              <description>Busy Mask</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>

    <!-- ************************* PWM ***************************** -->
    <peripheral>
      <name>PWM</name>
      <description>Pulse Width Modulation</description>
      <baseAddress>0x4004A100</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x500</size>
        <usage>registers</usage>
      </addressBlock>

      <registers>
        <!-- ************************* CH0 ***************************** -->
        <register>
          <name>PWM_PCTRL_CH0</name>
          <description>PWM CH0 enable control</description>
          <addressOffset>0x00</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>relLow</name>
              <description>Keep the output when entering LowPowerMode</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IntMask</name>
              <description>PWM interrupt mask (R/W). 
0: Interrupt output enabled. 
1: Interrupt disabled (default)</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Pol</name>
              <description>PWM output polarity control (R/W). 
0: Polarity inversion OFF (default). 
1: Polarity inversion ON</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>unit_en</name>
              <description>1-s timer enable (R/W). 
0: Timer OFF (default). 
1: Timer ON Please set this off before unit_starvalue is to be changed.  
When this is off, rhythm settings has no effect.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ENABLE</name>
              <description>PWM channel enable (R/W). 
0: Stop (default). 
1: Start. 
Please set cycle and duty before this is set to start.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PWM_PATTERN_CH0</name>
          <description>PWM CH0 output mask set</description>
          <addressOffset>0x04</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>Rhythm_Pat</name>
              <description>PWM is output during the time this defines. 1 bit corresponds to 50 ms. 
0: Output mask ON (No PWM output). 
1: Output mask OFF (PWM output). 
This has no effect when 1-s timer is OFF.</description>
              <bitRange>[19:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PWM_CYCLE_CH0</name>
          <description>PWM CH0 cycle set</description>
          <addressOffset>0x08</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>Cycle</name>
              <description>Cycle count register determines the PWM output period. 
0 to 4095 (0x000 to 0xFFF)</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PWM_DUTY_CH0</name>
          <description>PWM CH0 duty set</description>
          <addressOffset>0x0C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>Duty</name>
              <description>Determines the duty ratio.
0 to 4095 (0x000 to 0xFFF)
duty ratio = (this value)/(cycle + 1)</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PWM_UNIT_CH0</name>
          <description>PWM CH0 rhythm counter period set</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>Unit_startvalue</name>
              <description>Counter value setting to count 50 ms. 
0x0665 for 32.768 kHz (default). 
0x9EB0F for 13 MHz. 
Before to change this value, please make sure that PCTRL[1] unit_en = 0, STATE[2] Timer_state = 1, Pwm_state = 1.</description>
              <bitRange>[19:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PWM_STATE_CH0</name>
          <description>PWM CH0 status</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>Timer_state</name>
              <description>1-s timer status. 
0: ON. 
1: Idle</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Pwm_state</name>
              <description>Cycle counter status. 
0: ON. 
1: Idle</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Int_state</name>
              <description>INT status. 
0: Not interrupted. 
1: Interrupted. 
This is cleared when INTClr bit 0 is set to 1.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PWM_INTCLR_CH0</name>
          <description>PWM CH0 interrupt clear</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>IntClr</name>
              <description>PWM interrupt clear register (initial 0, W). 
Writeing 1 to this register clears the interrupt status.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <!-- ************************* CH1 ***************************** -->
        <register>
          <name>PWM_PCTRL_CH1</name>
          <description>PWM CH1 enable control</description>
          <addressOffset>0x100</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>relLow</name>
              <description>Keep the output when entering LowPowerMode</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IntMask</name>
              <description>PWM interrupt mask (R/W). 
0: Interrupt output enabled. 
1: Interrupt disabled (default)</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Pol</name>
              <description>PWM output polarity control (R/W). 
0: Polarity inversion OFF (default). 
1: Polarity inversion ON</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>unit_en</name>
              <description>1-s timer enable (R/W). 
0: Timer OFF (default). 
1: Timer ON Please set this off before unit_starvalue is to be changed. 
When this is off, rhythm settings has no effect.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ENABLE</name>
              <description>PWM channel enable (R/W). 
0: Stop (default). 
1: Start. 
Please set cycle and duty before this is set to start.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PWM_PATTERN_CH1</name>
          <description>PWM CH1 output mask set</description>
          <addressOffset>0x104</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>Rhythm_Pat</name>
              <description>PWM is output during the time this defines. 1 bit corresponds to 50 ms. 
0: Output mask ON (No PWM output). 
1: Output mask OFF (PWM output). 
This has no effect when 1-s timer is OFF.</description>
              <bitRange>[19:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PWM_CYCLE_CH1</name>
          <description>PWM CH1 cycle set</description>
          <addressOffset>0x108</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>Cycle</name>
              <description>Cycle count register determines the PWM output period. 
0 to 4095 (0x000 to 0xFFF)</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PWM_DUTY_CH1</name>
          <description>PWM CH1 duty set</description>
          <addressOffset>0x10C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>Duty</name>
              <description>Determines the duty ratio. 
0 to 4095 (0x000 to 0xFFF). 
duty ratio = (this value)/(cycle + 1)</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PWM_UNIT_CH1</name>
          <description>PWM CH1 rhythm counter period set</description>
          <addressOffset>0x110</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>Unit_startvalue</name>
              <description>Counter value setting to count 50 ms. 
0x0665 for 32.768 kHz (default). 
0x9EB0F for 13 MHz. 
Before to change this value, please make sure that PCTRL[1] unit_en = 0, STATE[2] Timer_state = 1, Pwm_state = 1.</description>
              <bitRange>[19:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PWM_STATE_CH1</name>
          <description>PWM CH1 status</description>
          <addressOffset>0x114</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>Timer_state</name>
              <description>1-s timer status. 
0: ON. 
1: Idle</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Pwm_state</name>
              <description>Cycle counter status. 
0: ON. 
1: Idle</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Int_state</name>
              <description>INT status. 
0: Not interrupted. 
1: Interrupted. 
This is cleared when INTClr bit 0 is set to 1.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PWM_INTCLR_CH1</name>
          <description>PWM CH1 interrupt clear</description>
          <addressOffset>0x118</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>IntClr</name>
              <description>PWM interrupt clear register (initial 0, W). 
Writeing 1 to this register clears the interrupt status.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <!-- ************************* CH2 ***************************** -->
        <register>
          <name>PWM_PCTRL_CH2</name>
          <description>PWM CH2 enable control</description>
          <addressOffset>0x200</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>relLow</name>
              <description>Keep the output when entering LowPowerMode</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IntMask</name>
              <description>PWM interrupt mask (R/W). 
0: Interrupt output enabled. 
1: Interrupt disabled (default)</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Pol</name>
              <description>PWM output polarity control (R/W). 
0: Polarity inversion OFF (default). 
1: Polarity inversion ON</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>unit_en</name>
              <description>1-s timer enable (R/W). 
0: Timer OFF (default). 
1: Timer ON Please set this off before unit_starvalue is to be changed. 
When this is off, rhythm settings has no effect.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ENABLE</name>
              <description>PWM channel enable (R/W). 
0: Stop (default). 
1: Start. 
Please set cycle and duty before this is set to start.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PWM_PATTERN_CH2</name>
          <description>PWM CH2 output mask set</description>
          <addressOffset>0x204</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>Rhythm_Pat</name>
              <description>PWM is output during the time this defines. 1 bit corresponds to 50 ms. 
0: Output mask ON (No PWM output). 
1: Output mask OFF (PWM output). 
This has no effect when 1-s timer is OFF.</description>
              <bitRange>[19:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PWM_CYCLE_CH2</name>
          <description>PWM CH2 cycle set</description>
          <addressOffset>0x208</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>Cycle</name>
              <description>Cycle count register determines the PWM output period. 
0 to 4095 (0x000 to 0xFFF)</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PWM_DUTY_CH2</name>
          <description>PWM CH2 duty set</description>
          <addressOffset>0x20C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>Duty</name>
              <description>Determines the duty ratio. 
0 to 4095 (0x000 to 0xFFF). 
duty ratio = (this value)/(cycle + 1)</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PWM_UNIT_CH2</name>
          <description>PWM CH2 rhythm counter period set</description>
          <addressOffset>0x210</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>Unit_startvalue</name>
              <description>Counter value setting to count 50 ms. 
0x0665 for 32.768 kHz (default). 
0x9EB0F for 13 MHz. 
Before to change this value, please make sure that PCTRL[1] unit_en = 0, STATE[2] Timer_state = 1, Pwm_state = 1.</description>
              <bitRange>[19:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PWM_STATE_CH2</name>
          <description>PWM CH2 status</description>
          <addressOffset>0x214</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>Timer_state</name>
              <description>1-s timer status. 
0: ON. 
1: Idle</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Pwm_state</name>
              <description>Cycle counter status. 
0: ON. 
1: Idle</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Int_state</name>
              <description>INT status. 
0: Not interrupted. 
1: Interrupted. 
This is cleared when INTClr bit 0 is set to 1.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PWM_INTCLR_CH2</name>
          <description>PWM CH2 interrupt clear</description>
          <addressOffset>0x218</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>IntClr</name>
              <description>PWM interrupt clear register (initial 0, W). 
Writeing 1 to this register clears the interrupt status.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <!-- ************************* CH3 ***************************** -->
        <register>
          <name>PWM_PCTRL_CH3</name>
          <description>PWM CH3 enable control</description>
          <addressOffset>0x300</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>relLow</name>
              <description>Keep the output when entering LowPowerMode</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IntMask</name>
              <description>PWM interrupt mask (R/W). 
0: Interrupt output enabled. 
1: Interrupt disabled (default)</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Pol</name>
              <description>PWM output polarity control (R/W). 
0: Polarity inversion OFF (default). 
1: Polarity inversion ON</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>unit_en</name>
              <description>1-s timer enable (R/W). 
0: Timer OFF (default). 
1: Timer ON Please set this off before unit_starvalue is to be changed. 
When this is off, rhythm settings has no effect.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ENABLE</name>
              <description>PWM channel enable (R/W). 
0: Stop (default). 
1: Start. 
Please set cycle and duty before this is set to start.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PWM_PATTERN_CH3</name>
          <description>PWM CH3 output mask set</description>
          <addressOffset>0x304</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>Rhythm_Pat</name>
              <description>PWM is output during the time this defines. 1 bit corresponds to 50 ms. 
0: Output mask ON (No PWM output). 
1: Output mask OFF (PWM output). 
This has no effect when 1-s timer is OFF.</description>
              <bitRange>[19:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PWM_CYCLE_CH3</name>
          <description>PWM CH3 cycle set</description>
          <addressOffset>0x308</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>Cycle</name>
              <description>Cycle count register determines the PWM output period. 
0 to 4095 (0x000 to 0xFFF)</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PWM_DUTY_CH3</name>
          <description>PWM CH3 duty set</description>
          <addressOffset>0x30C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>Duty</name>
              <description>Determines the duty ratio. 
0 to 4095 (0x000 to 0xFFF). 
duty ratio = (this value)/(cycle + 1)</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PWM_UNIT_CH3</name>
          <description>PWM CH3 rhythm counter period set</description>
          <addressOffset>0x310</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>Unit_startvalue</name>
              <description>Counter value setting to count 50 ms. 
0x0665 for 32.768 kHz (default). 
0x9EB0F for 13 MHz. 
Before to change this value, please make sure that PCTRL[1] unit_en = 0, STATE[2] Timer_state = 1, Pwm_state = 1.</description>
              <bitRange>[19:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PWM_STATE_CH3</name>
          <description>PWM CH3 status</description>
          <addressOffset>0x314</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>Timer_state</name>
              <description>1-s timer status. 
0: ON. 
1: Idle</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Pwm_state</name>
              <description>Cycle counter status. 
0: ON. 
1: Idle</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Int_state</name>
              <description>INT status. 
0: Not interrupted. 
1: Interrupted. 
This is cleared when INTClr bit 0 is set to 1.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PWM_INTCLR_CH3</name>
          <description>PWM CH3 interrupt clear</description>
          <addressOffset>0x318</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>IntClr</name>
              <description>PWM interrupt clear register (initial 0, W). 
Writeing 1 to this register clears the interrupt status.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <!-- ************************* Common ***************************** -->
        <register>
          <name>PWM_EN_WRAP</name>
          <description>PWM wave phase control</description>
          <addressOffset>0x400</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>ch3Wpunit_en</name>
              <description>PWM3 unit_en</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch3Wpcyc_en</name>
              <description>PWM3 enable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch2Wpunit_en</name>
              <description>PWM2 unit_en</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch2Wpcyc_en</name>
              <description>PWM2 enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch1Wpunit_en</name>
              <description>PWM1 unit_en</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch1Wpcyc_en</name>
              <description>PWM1 enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch0Wpunit_en</name>
              <description>PWM0 unit_en</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch0Wpcyc_en</name>
              <description>PWM0 enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    
    <!-- ************************* ckgen ***************************** -->
    <peripheral>
      <name>CLOCK</name>
      <description>Clock Supply for SPI and PWM</description>
      <baseAddress>0x4004C000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x100</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>CG_PWM_CTRL</name>
          <description>PWM clock mode set</description>
          <addressOffset>0x04</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>PWM3ClkSel</name>
              <description>Select PWM3 clock. 
1: MAX 13 MHz (This division ratio can be changed  in CG_DIVNUM4). 
0: 32 kHz. 
Please set disable to PWM3SlpClkEn and PWM3ClkEn before changing this register.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PWM2ClkSel</name>
              <description>Select PWM2 clock. 
1: MAX 13 MHz (This division ratio can be changed  in CG_DIVNUM4). 
0: 32 kHz. 
Please set disable to PWM2SlpClkEn and PWM2ClkEn before changing this register.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PWM1ClkSel</name>
              <description>Select PWM1 clock. 
1: MAX 13 MHz (This division ratio can be changed  in CG_DIVNUM4). 
0: 32 kHz. 
Please set disable to PWM1SlpClkEn and PWM1ClkEn before changing this register.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PWM0ClkSel</name>
              <description>Select PWM0 clock. 
1: MAX 13 MHz (This division ratio can be changed  in CG_DIVNUM4). 
0: 32 kHz. 
Please set disable to PWM0SlpClkEn and PWM0ClkEn before changing this register.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CG_DIVNUM1</name>
          <description>Division ratio for I2C and SPI</description>
          <addressOffset>0x08</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>SPI_DIVNUM</name>
              <description>Division ratio of 32MHz clock to generate SPI1 clock.</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C_DIVNUM</name>
              <description>Division ratio of 32MHz clock to generate I2C1 clock.</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CG_DIVNUM2</name>
          <description>Division ratio for UART1 and UART2</description>
          <addressOffset>0x0C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>UART2_DIVNUM</name>
              <description>Division ratio of 32MHz clock to generate UART2 clock.</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UART1_DIVNUM</name>
              <description>Division ratio of 32MHz clock to generate UART1 clock.</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CG_DIVNUM3</name>
          <description>Division  ratio for PWM1 and PWM0 config</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>PWM1_DIVNUM</name>
              <description>Division ratio of 32MHz clock to generate PWM1 clock. 
PWM1 clock ON/OFF can be set on CG_CLK_CTRL2 register. 
This value can be changed regardless of the clock ON/OFF. 
However, the output clock may be unstable right after the change of this register. 
division ratio = (this value + 1) * 2. 
default value is 0x000 (Divided by 2)</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PWM0_DIVNUM</name>
              <description>Division ratio of 32MHz clock to generate PWM0 clock. 
PWM0 clock ON/OFF can be set on CG_CLK_CTRL2 register. 
This value can be changed regardless of the clock ON/OFF. 
However, the output clock may be unstable right after the change of this register. 
division ratio = (this value + 1) * 2. 
default value is 0x000 (Divided by 2)</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CG_DIVNUM4</name>
          <description>Division ratio for PWM3 and PWM2 config</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>PWM3_DIVNUM</name>
              <description>Division ratio of 32MHz clock to generate PWM3 clock. 
PWM3 clock ON/OFF can be set on CG_CLK_CTRL2 register. 
This value can be changed regardless of the clock ON/OFF. 
However, the output clock may be unstable right after the change of this register. 
division ratio = (this value + 1) * 2. 
default value is 0x000 (Divided by 2)</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PWM2_DIVNUM</name>
              <description>Division ratio of 32MHz clock to generate PWM2 clock. 
PWM2 clock ON/OFF can be set on CG_CLK_CTRL2 register. 
This value can be changed regardless of the clock ON/OFF. 
However, the output clock may be unstable right after the change of this register. 
division ratio = (this value + 1) * 2. 
default value is 0x000 (Divided by 2)</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CG_DIVNUM5</name>
          <description>Division ratio for GPADC config</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPADC_DIVNUM</name>
              <description>Division ratio of 32MHz clock to generate GPADC clock.
frequency divider = (value+1)*2</description>
              <bitRange>[8:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CG_CLK_CTRL</name>
          <description>SPI Clock control</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>PPLClkEn</name>
              <description>Enable PPL Clock</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ESGClkEn</name>
              <description>Enable ESG Clock</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OUIClkEn</name>
              <description>Enable OIU Clock</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOClkEn</name>
              <description>Enable GPIO Clock</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TimerClkEn</name>
              <description>Enable Timer Clock</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DMAClkEn</name>
              <description>ENable DMA Clock</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>QSPIClkEn</name>
              <description>Enable QSPI Clock</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RFBClkEn</name>
              <description>Enable RFB Clock Enable</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPIClkEn</name>
              <description>Enable SPI clock (R/W)
1: Enable clock
0: Disable clock (default)</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>I2CClkEn</name>
              <description>Enable I2C Clock</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FUSEClkEn</name>
              <description>Enable FUSE Clock</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MPHYDMACClkEn</name>
              <description>Enable MPHDMAC Clock</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LELLCClkEn</name>
              <description>Enable LELLC Clock</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Uart1ClkEn</name>
              <description>Enable UART1 Clock</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SyncClkEn</name>
              <description>Enable Sync Clock</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BitClkEn</name>
              <description>Enable Bit Clock</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CG_CLK_CTRL2</name>
          <description>PWM Clock Control</description>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>I2C2ClkEn</name>
              <description>Enable I2C2 Clock</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI2ClkEn</name>
              <description>Enable SPI2 Clock</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Uart2ClkEn</name>
              <description>Enable UART2 Clock</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPADCClkEn</name>
              <description>Enable GPADC Clock</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PWM3SlpClkEn</name>
              <description>Enable PWM ch 3 slow clock (R/W). 
1: Enable clock. 
0: Disable clock (default)</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PWM2SlpClkEn</name>
              <description>Enable PWM ch 2 slow clock (R/W). 
1: Enable clock. 
0: Disable clock (default)</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PWM1SlpClkEn</name>
              <description>Enable PWM ch 1 slow clock (R/W). 
1: Enable clock. 
0: Disable clock (default)</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PWM0SlpClkEn</name>
              <description>Enable PWM ch 0 slow clock (R/W). 
1: Enable clock. 
0: Disable clock (default)</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PWM3ClkEn</name>
              <description>Enable PWM ch 3 fast clock (R/W). 
1: Enable clock. 
0: Disable clock (default)</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PWM2ClkEn</name>
              <description>Enable PWM ch 2 fast clock (R/W). 
1: Enable clock. 
0: Disable clock (default)</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PWM1ClkEn</name>
              <description>Enable PWM ch 1 fast clock (R/W). 
1: Enable clock. 
0: Disable clock (default)</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PWM0ClkEn</name>
              <description>Enable PWM ch 0 fast clock (R/W). 
1: Enable clock. 
0: Disable clock (default)</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CG_CG_CTRL</name>
          <description>ckgn config register</description>
          <addressOffset>0x80</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>SoftReset</name>
              <description>Soft-Reset control
1: Soft-Reset
0: No change</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WdCountSTOP</name>
              <description>Start or stop WDT counter. 
1: Stop counter. 
0: Start counter. 
When set 1, WDT counter suspends. 
When set 0, WDT counter resumes. 
During the system state is low power mode, WDT does not count.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CG_WD_INIT</name>
          <description>Watchdog initial register</description>
          <addressOffset>0xA0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>WDINIT</name>
              <description>Set initial value of WDT counter. 
This value can be set from 0x1(30.5 micro seconds) to 0x1FFFFF.(64 seconds). 
Setting time is calculated as below: 
setting time = (this value) * 30.5 micro seconds. 
When you update this value, please wait for more than 2 clocks of SleepClk(32kHz clock) since the previous change. 
When the system wakes up from low power mode, WDT counter is set this value.</description>
              <bitRange>[20:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CG_WD_CURNT</name>
          <description>Watchdog current register</description>
          <addressOffset>0xA4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>WDTCURNT</name>
              <description>Watchdog current value. 
When the system wakes up from low power mode, this value becomes WDINIT value.</description>
              <bitRange>[20:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CG_DIVNUM6</name>
          <description>Division ratio for I2C2 and SPI2</description>
          <addressOffset>0xA8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>SPI2_DIVNUM</name>
              <description>Division ratio of 32MHz clock to generate SPI2 clock.</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C2_DIVNUM</name>
              <description>Division ratio of 32MHz clock to generate I2C2 clock.</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>

    <!-- ************************* TIMER ***************************** -->
    <peripheral>
      <name>TimerBCG</name>
      <description>Timer (BCTimer, GTimer)</description>
      <baseAddress>0x4004D000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x200</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <!-- ************************* BC TIMER ***************************** -->
        <register>
          <name>TIM_BCTIMER_CTRL</name>
          <description>Bit Clock Timer Control</description>
          <addressOffset>0x00</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>INTMC</name>
              <description>Timer C Interrupt mask. 
0: the interrupt is not masked. 
1: the interutpt is masked</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INTMB</name>
              <description>Timer B Interrupt mask. 
0: the interrupt is not masked. 
1: the interutpt is masked</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INTMA</name>
              <description>Timer A Interrupt mask. 
0: the interrupt is not masked. 
1: the interutpt is masked</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CEn</name>
              <description>Enable autoreload feature for timer C. 
0: Stop when Timer C gets 0. 
1: Reload the initial value when Timer C gets 0.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BEn</name>
              <description>Enable autoreload feature for timer B. 
0: Stop when Timer B gets 0. 
1: Reload the initial value when Timer B gets 0.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AEn</name>
              <description>Enable autoreload feature for timer A. 
0: Stop when Timer A gets 0. 
1: Reload the initial value when Timer A gets 0.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_BCTIMER_STAT</name>
          <description>Bit Clock Timer Status</description>
          <addressOffset>0x04</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>TimerCInt</name>
              <description>Interrupt from Timer C. 
0: No interrupt from Timer C. 
1: Interrupt from Timer C exist.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TimerBInt</name>
              <description>Interrupt from Timer B. 
0: No interrupt from Timer B. 
1: Interrupt from Timer B exist.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TimerAInt</name>
              <description>Interrupt from Timer A. 
0: No interrupt from Timer A. 
1: Interrupt from Timer A exist.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_BCTIMER_A</name>
          <description>Bit Clock Timer A control</description>
          <addressOffset>0x08</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>TimA</name>
              <description>Start Value Timer A. 
Set the initial value of Timer A.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_BCTIMER_B</name>
          <description>Bit Clock Timer B control</description>
          <addressOffset>0x0C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>TimB</name>
              <description>Start Value Timer B. 
Set the initial value of Timer B.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_BCTIMER_C</name>
          <description>Bit Clock Timer C control</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>TimC</name>
              <description>Start Value Timer C. 
Set the initial value of Timer C.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_BCTIMER_A_RD</name>
          <description>Bit Clock Timer A read</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>TimARd</name>
              <description>Current Value of Timer A</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_BCTIMER_B_RD</name>
          <description>Bit Clock Timer B read</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>TimBRd</name>
              <description>Current Value of Timer B</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_BCTIMER_C_RD</name>
          <description>Bit Clock Timer C read</description>
          <addressOffset>0x1C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>TimCRd</name>
              <description>Current Value of Timer C</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <!-- ************************* G TIMER ***************************** -->
        <register>
          <name>TIM_GTIMER_CTRL</name>
          <description>Timer Control</description>
          <addressOffset>0x100</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>PRESCALERVAL</name>
              <description>Settings for frequency divider of TimerSCLK to generate timer clock. 
0x000 : No divide. 
0x001 : 1/2. 
0x002 : 1/3. 
........ 
0xfff : 1/4096</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INTMA</name>
              <description>Timer A Interrupt mask. 
0: the interrupt is not masked. 
1: the interutpt is masked</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AEn</name>
              <description>Enable auto reload feature for Timer A</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_GTIMER_STAT</name>
          <description>Timer Status</description>
          <addressOffset>0x104</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>TimerAInt</name>
              <description>Interrutp bit from Timer A. 
0: No interrupt from Timer A. 
1: Interrupt from Timer A exist.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_GTIMER_A</name>
          <description>Timer Initial Value</description>
          <addressOffset>0x108</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>TimA</name>
              <description>Start Value of TimerA.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_GTIMER_A_RD</name>
          <description>Timer Value read</description>
          <addressOffset>0x114</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>TimerARd</name>
              <description>Current Value of Timer A.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>

    <!-- ************************* GPIO ***************************** -->
    <peripheral>
      <name>GPIO</name>
      <description>General Purpose Input/Output</description>
      <baseAddress>0x4004E000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x500</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <!-- ************************* GPIOMON ***************************** -->
        <register>
          <name>GPIO_MON0</name>
          <description>GPIO0 input monitor</description>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <fields>
            <field>
              <name>GPIOMon</name>
              <description>GPIO input monitor data. 
Monitors the input of GPIO. 
1: High input. 
0: Low input. 
Not dependent on the GppOutEn or hte GppMuxCfg.</description>
              <bitRange>[0:0]</bitRange>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_MON1</name>
          <description>GPIO1 input monitor</description>
          <addressOffset>0x04</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <fields>
            <field>
              <name>GPIOMon</name>
              <description>GPIO input monitor data. 
Monitors the input of GPIO. 
1: High input. 
0: Low input. 
Not dependent on the GppOutEn or hte GppMuxCfg.</description>
              <bitRange>[0:0]</bitRange>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_MON2</name>
          <description>GPIO2 input monitor</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <fields>
            <field>
              <name>GPIOMon</name>
              <description>GPIO input monitor data. 
Monitors the input of GPIO. 
1: High input. 
0: Low input. 
Not dependent on the GppOutEn or hte GppMuxCfg.</description>
              <bitRange>[0:0]</bitRange>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_MON3</name>
          <description>GPIO3 input monitor</description>
          <addressOffset>0xC</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <fields>
            <field>
              <name>GPIOMon</name>
              <description>GPIO input monitor data. 
Monitors the input of GPIO. 
1: High input. 
0: Low input. 
Not dependent on the GppOutEn or hte GppMuxCfg.</description>
              <bitRange>[0:0]</bitRange>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_MON4</name>
          <description>GPIO4 input monitor</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <fields>
            <field>
              <name>GPIOMon</name>
              <description>GPIO input monitor data. 
Monitors the input of GPIO. 
1: High input. 
0: Low input. 
Not dependent on the GppOutEn or hte GppMuxCfg.</description>
              <bitRange>[0:0]</bitRange>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_MON5</name>
          <description>GPIO5 input monitor</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <fields>
            <field>
              <name>GPIOMon</name>
              <description>GPIO input monitor data. 
Monitors the input of GPIO. 
1: High input. 
0: Low input. 
Not dependent on the GppOutEn or hte GppMuxCfg.</description>
              <bitRange>[0:0]</bitRange>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_MON6</name>
          <description>GPIO6 input monitor</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <fields>
            <field>
              <name>GPIOMon</name>
              <description>GPIO input monitor data. 
Monitors the input of GPIO. 
1: High input. 
0: Low input. 
Not dependent on the GppOutEn or hte GppMuxCfg.</description>
              <bitRange>[0:0]</bitRange>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_MON7</name>
          <description>GPIO7 input monitor</description>
          <addressOffset>0x1C</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <fields>
            <field>
              <name>GPIOMon</name>
              <description>GPIO input monitor data. 
Monitors the input of GPIO. 
1: High input. 
0: Low input. 
Not dependent on the GppOutEn or hte GppMuxCfg.</description>
              <bitRange>[0:0]</bitRange>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_MON8</name>
          <description>GPIO8 input monitor</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <fields>
            <field>
              <name>GPIOMon</name>
              <description>GPIO input monitor data. 
Monitors the input of GPIO. 
1: High input. 
0: Low input. 
Not dependent on the GppOutEn or hte GppMuxCfg.</description>
              <bitRange>[0:0]</bitRange>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_MON9</name>
          <description>GPIO9 input monitor</description>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <fields>
            <field>
              <name>GPIOMon</name>
              <description>GPIO input monitor data. 
Monitors the input of GPIO. 
1: High input. 
0: Low input. 
Not dependent on the GppOutEn or hte GppMuxCfg.</description>
              <bitRange>[0:0]</bitRange>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_MON10</name>
          <description>GPIO10 input monitor</description>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <fields>
            <field>
              <name>GPIOMon</name>
              <description>GPIO input monitor data. 
Monitors the input of GPIO. 
1: High input. 
0: Low input. 
Not dependent on the GppOutEn or hte GppMuxCfg.</description>
              <bitRange>[0:0]</bitRange>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_MON11</name>
          <description>GPIO11 input monitor</description>
          <addressOffset>0x2C</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <fields>
            <field>
              <name>GPIOMon</name>
              <description>GPIO input monitor data. 
Monitors the input of GPIO. 
1: High input. 
0: Low input. 
Not dependent on the GppOutEn or hte GppMuxCfg.</description>
              <bitRange>[0:0]</bitRange>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_MON12</name>
          <description>GPIO12 input monitor</description>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <fields>
            <field>
              <name>GPIOMon</name>
              <description>GPIO input monitor data. 
Monitors the input of GPIO. 
1: High input. 
0: Low input. 
Not dependent on the GppOutEn or hte GppMuxCfg.</description>
              <bitRange>[0:0]</bitRange>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_MON13</name>
          <description>GPIO13 input monitor</description>
          <addressOffset>0x34</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <fields>
            <field>
              <name>GPIOMon</name>
              <description>GPIO input monitor data. 
Monitors the input of GPIO. 
1: High input. 
0: Low input. 
Not dependent on the GppOutEn or hte GppMuxCfg.</description>
              <bitRange>[0:0]</bitRange>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_MON14</name>
          <description>GPIO14 input monitor</description>
          <addressOffset>0x38</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <fields>
            <field>
              <name>GPIOMon</name>
              <description>GPIO input monitor data. 
Monitors the input of GPIO. 
1: High input. 
0: Low input. 
Not dependent on the GppOutEn or hte GppMuxCfg.</description>
              <bitRange>[0:0]</bitRange>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_MON15</name>
          <description>GPIO15 input monitor</description>
          <addressOffset>0x3C</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <fields>
            <field>
              <name>GPIOMon</name>
              <description>GPIO input monitor data. 
Monitors the input of GPIO. 
1: High input. 
0: Low input. 
Not dependent on the GppOutEn or hte GppMuxCfg.</description>
              <bitRange>[0:0]</bitRange>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_MON16</name>
          <description>GPIO16 input monitor</description>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <fields>
            <field>
              <name>GPIOMon</name>
              <description>GPIO input monitor data. 
Monitors the input of GPIO. 
1: High input. 
0: Low input. 
Not dependent on the GppOutEn or hte GppMuxCfg.</description>
              <bitRange>[0:0]</bitRange>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_MON17</name>
          <description>GPIO17 input monitor</description>
          <addressOffset>0x44</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <fields>
            <field>
              <name>GPIOMon</name>
              <description>GPIO input monitor data. 
Monitors the input of GPIO. 
1: High input. 
0: Low input. 
Not dependent on the GppOutEn or hte GppMuxCfg.</description>
              <bitRange>[0:0]</bitRange>
            </field>
          </fields>
        </register>
        <!-- ************************* GPIO_OUT ***************************** -->
        <register>
          <name>GPIO_OUT0</name>
          <description>GPIO0 output data</description>
          <addressOffset>0x100</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIOOut</name>
              <description>GPIO output data Set the output level of the GPIOX.. 
1: High output. 
0: Low output. 
The value is output only when GPIOOutEnX = 1 and GPIOMuxCfgX = 0.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_OUT1</name>
          <description>GPIO1 output data</description>
          <addressOffset>0x104</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIOOut</name>
              <description>GPIO output data Set the output level of the GPIOX. 
1: High output. 
0: Low output. 
The value is output only when GPIOOutEnX = 1 and GPIOMuxCfgX = 0.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_OUT2</name>
          <description>GPIO2 output data</description>
          <addressOffset>0x108</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIOOut</name>
              <description>GPIO output data Set the output level of the GPIOX. 
1: High output. 
0: Low output. 
The value is output only when GPIOOutEnX = 1 and GPIOMuxCfgX = 0.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_OUT3</name>
          <description>GPIO3 output data</description>
          <addressOffset>0x10C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIOOut</name>
              <description>GPIO output data Set the output level of the GPIOX. 
1: High output. 
0: Low output. 
The value is output only when GPIOOutEnX = 1 and GPIOMuxCfgX = 0.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_OUT4</name>
          <description>GPIO4 output data</description>
          <addressOffset>0x110</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIOOut</name>
              <description>GPIO output data Set the output level of the GPIOX. 
1: High output. 
0: Low output. 
The value is output only when GPIOOutEnX = 1 and GPIOMuxCfgX = 0.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_OUT5</name>
          <description>GPIO5 output data</description>
          <addressOffset>0x114</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIOOut</name>
              <description>GPIO output data Set the output level of the GPIOX. 
1: High output. 
0: Low output. 
The value is output only when GPIOOutEnX = 1 and GPIOMuxCfgX = 0.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_OUT6</name>
          <description>GPIO6 output data</description>
          <addressOffset>0x118</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIOOut</name>
              <description>GPIO output data Set the output level of the GPIOX. 
1: High output. 
0: Low output. 
The value is output only when GPIOOutEnX = 1 and GPIOMuxCfgX = 0.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_OUT7</name>
          <description>GPIO7 output data</description>
          <addressOffset>0x11C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIOOut</name>
              <description>GPIO output data Set the output level of the GPIOX. 
1: High output. 
0: Low output. 
The value is output only when GPIOOutEnX = 1 and GPIOMuxCfgX = 0.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_OUT8</name>
          <description>GPIO8 output data</description>
          <addressOffset>0x120</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIOOut</name>
              <description>GPIO output data Set the output level of the GPIOX. 
1: High output. 
0: Low output. 
The value is output only when GPIOOutEnX = 1 and GPIOMuxCfgX = 0.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_OUT9</name>
          <description>GPIO9 output data</description>
          <addressOffset>0x124</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIOOut</name>
              <description>GPIO output data Set the output level of the GPIOX. 
1: High output. 
0: Low output. 
The value is output only when GPIOOutEnX = 1 and GPIOMuxCfgX = 0.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_OUT10</name>
          <description>GPIO10 output data</description>
          <addressOffset>0x128</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIOOut</name>
              <description>GPIO output data Set the output level of the GPIOX. 
1: High output. 
0: Low output. 
The value is output only when GPIOOutEnX = 1 and GPIOMuxCfgX = 0.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_OUT11</name>
          <description>GPIO11 output data</description>
          <addressOffset>0x12C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIOOut</name>
              <description>GPIO output data Set the output level of the GPIOX. 
1: High output. 
0: Low output. 
The value is output only when GPIOOutEnX = 1 and GPIOMuxCfgX = 0.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_OUT12</name>
          <description>GPIO12 output data</description>
          <addressOffset>0x130</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIOOut</name>
              <description>GPIO output data Set the output level of the GPIOX. 
1: High output. 
0: Low output. 
The value is output only when GPIOOutEnX = 1 and GPIOMuxCfgX = 0.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_OUT13</name>
          <description>GPIO13 output data</description>
          <addressOffset>0x134</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIOOut</name>
              <description>GPIO output data Set the output level of the GPIOX. 
1: High output. 
0: Low output. 
The value is output only when GPIOOutEnX = 1 and GPIOMuxCfgX = 0.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_OUT14</name>
          <description>GPIO14 output data</description>
          <addressOffset>0x138</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIOOut</name>
              <description>GPIO output data Set the output level of the GPIOX. 
1: High output. 
0: Low output. 
The value is output only when GPIOOutEnX = 1 and GPIOMuxCfgX = 0.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_OUT15</name>
          <description>GPIO15 output data</description>
          <addressOffset>0x13C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIOOut</name>
              <description>GPIO output data Set the output level of the GPIOX. 
1: High output. 
0: Low output. 
The value is output only when GPIOOutEnX = 1 and GPIOMuxCfgX = 0.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_OUT16</name>
          <description>GPIO16 output data</description>
          <addressOffset>0x140</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIOOut</name>
              <description>GPIO output data Set the output level of the GPIOX. 
1: High output. 
0: Low output. 
The value is output only when GPIOOutEnX = 1 and GPIOMuxCfgX = 0.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_OUT17</name>
          <description>GPIO17 output data</description>
          <addressOffset>0x144</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIOOut</name>
              <description>GPIO output data Set the output level of the GPIOX. 
1: High output. 
0: Low output. 
The value is output only when GPIOOutEnX = 1 and GPIOMuxCfgX = 0.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <!-- ************************* GPIO_OUT_EN ***************************** -->
        <register>
          <name>GPIO_OUT_EN0</name>
          <description>GPIO0 output enable</description>
          <addressOffset>0x200</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIOOutEn</name>
              <description>GPIO output enable. Enables GPIO output. 
1: output enable. 
0: output disable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_OUT_EN1</name>
          <description>GPIO1 output enable</description>
          <addressOffset>0x204</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIOOutEn</name>
              <description>GPIO output enable. Enables GPIO output. 
1: output enable. 
0: output disable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_OUT_EN2</name>
          <description>GPIO2 output enable</description>
          <addressOffset>0x208</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIOOutEn</name>
              <description>GPIO output enable. Enables GPIO output. 
1: output enable. 
0: output disable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_OUT_EN3</name>
          <description>GPIO3 output enable</description>
          <addressOffset>0x20C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIOOutEn</name>
              <description>GPIO output enable. Enables GPIO output. 
1: output enable. 
0: output disable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_OUT_EN4</name>
          <description>GPIO4 output enable</description>
          <addressOffset>0x210</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIOOutEn</name>
              <description>GPIO output enable. Enables GPIO output. 
1: output enable. 
0: output disable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_OUT_EN5</name>
          <description>GPIO5 output enable</description>
          <addressOffset>0x214</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIOOutEn</name>
              <description>GPIO output enable. Enables GPIO output. 
1: output enable. 
0: output disable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_OUT_EN6</name>
          <description>GPIO6 output enable</description>
          <addressOffset>0x218</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIOOutEn</name>
              <description>GPIO output enable. Enables GPIO output. 
1: output enable. 
0: output disable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_OUT_EN7</name>
          <description>GPIO7 output enable</description>
          <addressOffset>0x21C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIOOutEn</name>
              <description>GPIO output enable. Enables GPIO output. 
1: output enable. 
0: output disable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_OUT_EN8</name>
          <description>GPIO8 output enable</description>
          <addressOffset>0x220</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIOOutEn</name>
              <description>GPIO output enable. Enables GPIO output. 
1: output enable. 
0: output disable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_OUT_EN9</name>
          <description>GPIO9 output enable</description>
          <addressOffset>0x224</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIOOutEn</name>
              <description>GPIO output enable. Enables GPIO output. 
1: output enable. 
0: output disable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_OUT_EN10</name>
          <description>GPIO10 output enable</description>
          <addressOffset>0x228</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIOOutEn</name>
              <description>GPIO output enable. Enables GPIO output. 
1: output enable. 
0: output disable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_OUT_EN11</name>
          <description>GPIO11 output enable</description>
          <addressOffset>0x22C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIOOutEn</name>
              <description>GPIO output enable. Enables GPIO output. 
1: output enable. 
0: output disable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_OUT_EN12</name>
          <description>GPIO12 output enable</description>
          <addressOffset>0x230</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIOOutEn</name>
              <description>GPIO output enable. Enables GPIO output. 
1: output enable. 
0: output disable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_OUT_EN13</name>
          <description>GPIO13 output enable</description>
          <addressOffset>0x234</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIOOutEn</name>
              <description>GPIO output enable. Enables GPIO output. 
1: output enable. 
0: output disable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_OUT_EN14</name>
          <description>GPIO14 output enable</description>
          <addressOffset>0x238</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIOOutEn</name>
              <description>GPIO output enable. Enables GPIO output. 
1: output enable. 
0: output disable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_OUT_EN15</name>
          <description>GPIO15 output enable</description>
          <addressOffset>0x23C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIOOutEn</name>
              <description>GPIO output enable. Enables GPIO output. 
1: output enable. 
0: output disable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_OUT_EN16</name>
          <description>GPIO16 output enable</description>
          <addressOffset>0x240</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIOOutEn</name>
              <description>GPIO output enable. Enables GPIO output. 
1: output enable. 
0: output disable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_OUT_EN17</name>
          <description>GPIO17 output enable</description>
          <addressOffset>0x244</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIOOutEn</name>
              <description>GPIO output enable. Enables GPIO output. 
1: output enable. 
0: output disable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <!-- ************************* GPIO_CFG ***************************** -->
        <register>
          <name>GPIO_CFG0</name>
          <description>GPIO0 config</description>
          <addressOffset>0x300</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIODrvCtrl</name>
              <description>GPIO0 drive control. 
To set GPIO drive settings. 
00: 1 mA. 
01: 1.5 mA (default). 
10: 2 mA. 
11: 4 mA. 
Valid when the GPIO is set as output regardless of GPIOMuxCfg.</description>
              <bitRange>[6:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOPullUpOff</name>
              <description>GPIO pull-up resister off. 
Turn on/off the internal pull up resiter. 
1: Internal pull-up off. 
0: Internal pull-up on. 
When both GPIOPullDownOff = 0 and GPIOPullUpOff = 0 are to be set, 
the chip forces GPIOPullDownOff = 1 and GPIOPullUpOff = 0. 
Valid when the GPIO is set as input regardless of the GppMuxCfg.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOPullDownOff</name>
              <description>GPIO pull-down resister off. 
Turn on/off the internal pull down resiter. 
1: Internal pull-down off. 
0: Internal pull-down on. 
When both GPIOPullDownOff = 0 and GPIOPullUpOff = 0 are to be set, 
the chip forces GPIOPullDownOff = 1 and GPIOPullUpOff = 0. 
Valid when the GPIO is set as input regardless of the GppMuxCfg.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOIntCfg</name>
              <description>GPIO interrupt configuration (initial 00, R/W). 
Sets the polarity to use the GPIO as an external interrupt. 
000: prohibit the interrupt. 
001: detect rising edge. 
010: detect falling edge. 
011: detect both edges. 
100: detect high level. 
101: detect low level</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_CFG1</name>
          <description>GPIO1 config</description>
          <addressOffset>0x304</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIODrvCtrl</name>
              <description>GPIO1 drive control. 
To set GPIO drive settings. 
00: 1 mA. 
01: 1.5 mA (default). 
10: 2 mA. 
11: 4 mA. 
Valid when the GPIO is set as output regardless of GPIOMuxCfg.</description>
              <bitRange>[6:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOPullUpOff</name>
              <description>GPIO pull-up resister off. 
Turn on/off the internal pull up resiter. 
1: Internal pull-up off. 
0: Internal pull-up on. 
When both GPIOPullDownOff = 0 and GPIOPullUpOff = 0 are to be set,
the chip forces GPIOPullDownOff = 1 and GPIOPullUpOff = 0.
Valid when the GPIO is set as input regardless of the GppMuxCfg.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GppPullUpOff</name>
              <description>GPIO pull-down resister off. 
Turn on/off the internal pull down resiter. 
1: Internal pull-down off. 
0: Internal pull-down on. 
When both GPIOPullDownOff = 0 and GPIOPullUpOff = 0 are to be set,
the chip forces GPIOPullDownOff = 1 and GPIOPullUpOff = 0.
Valid when the GPIO is set as input regardless of the GppMuxCfg.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOIntCfg</name>
              <description>GPIO interrupt configuration (initial 00, R/W). 
Sets the polarity to use the GPIO as an external interrupt. 
000: prohibit the interrupt. 
001: detect rising edge. 
010: detect falling edge. 
011: detect both edges. 
100: detect high level. 
101: detect low level</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_CFG2</name>
          <description>GPIO2 config</description>
          <addressOffset>0x308</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIODrvCtrl</name>
              <description>GPIO2 drive control. 
To set GPIO drive settings. 
00: 1 mA. 
01: 1.5 mA (default). 
10: 2 mA. 
11: 4 mA. 
Valid when the GPIO is set as output regardless of GPIOMuxCfg.</description>
              <bitRange>[6:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOPullUpOff</name>
              <description>GPIO pull-up resister off. 
Turn on/off the internal pull up resiter. 
1: Internal pull-up off. 
0: Internal pull-up on. 
When both GPIOPullDownOff = 0 and GPIOPullUpOff = 0 are to be set, 
the chip forces GPIOPullDownOff = 1 and GPIOPullUpOff = 0. 
Valid when the GPIO is set as input regardless of the GppMuxCfg.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GppPullUpOff</name>
              <description>GPIO pull-down resister off. 
Turn on/off the internal pull down resiter. 
1: Internal pull-down off. 
0: Internal pull-down on. 
When both GPIOPullDownOff = 0 and GPIOPullUpOff = 0 are to be set, 
the chip forces GPIOPullDownOff = 1 and GPIOPullUpOff = 0. 
Valid when the GPIO is set as input regardless of the GppMuxCfg.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOIntCfg</name>
              <description>GPIO interrupt configuration (initial 00, R/W). 
Sets the polarity to use the GPIO as an external interrupt. 
000: prohibit the interrupt. 
001: detect rising edge. 
010: detect falling edge. 
011: detect both edges. 
100: detect high level. 
101: detect low level</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_CFG3</name>
          <description>GPIO3 config</description>
          <addressOffset>0x30C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIODrvCtrl</name>
              <description>GPIO3 drive control. 
To set GPIO drive settings. 
00: 1 mA. 
01: 1.5 mA (default). 
10: 2 mA. 
11: 4 mA. 
Valid when the GPIO is set as output regardless of GPIOMuxCfg.</description>
              <bitRange>[6:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOPullUpOff</name>
              <description>GPIO pull-up resister off. 
Turn on/off the internal pull up resiter. 
1: Internal pull-up off. 
0: Internal pull-up on. 
When both GPIOPullDownOff = 0 and GPIOPullUpOff = 0 are to be set,
the chip forces GPIOPullDownOff = 1 and GPIOPullUpOff = 0.
Valid when the GPIO is set as input regardless of the GppMuxCfg.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GppPullUpOff</name>
              <description>GPIO pull-down resister off. 
Turn on/off the internal pull down resiter. 
1: Internal pull-down off. 
0: Internal pull-down on. 
When both GPIOPullDownOff = 0 and GPIOPullUpOff = 0 are to be set, 
the chip forces GPIOPullDownOff = 1 and GPIOPullUpOff = 0. 
Valid when the GPIO is set as input regardless of the GppMuxCfg.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOIntCfg</name>
              <description>GPIO interrupt configuration (initial 00, R/W). 
Sets the polarity to use the GPIO as an external interrupt. 
000: prohibit the interrupt. 
001: detect rising edge. 
010: detect falling edge. 
011: detect both edges. 
100: detect high level. 
101: detect low level</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_CFG4</name>
          <description>GPIO4 config</description>
          <addressOffset>0x310</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIODrvCtrl</name>
              <description>GPIO4 drive control. 
To set GPIO drive settings. 
00: 1 mA. 
01: 1.5 mA (default). 
10: 2 mA. 
11: 4 mA. 
Valid when the GPIO is set as output regardless of GPIOMuxCfg.</description>
              <bitRange>[6:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOPullUpOff</name>
              <description>GPIO pull-up resister off. 
Turn on/off the internal pull up resiter. 
1: Internal pull-up off. 
0: Internal pull-up on. 
When both GPIOPullDownOff = 0 and GPIOPullUpOff = 0 are to be set, 
the chip forces GPIOPullDownOff = 1 and GPIOPullUpOff = 0. 
Valid when the GPIO is set as input regardless of the GppMuxCfg.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GppPullUpOff</name>
              <description>GPIO pull-down resister off. 
Turn on/off the internal pull down resiter. 
1: Internal pull-down off. 
0: Internal pull-down on. 
When both GPIOPullDownOff = 0 and GPIOPullUpOff = 0 are to be set, 
the chip forces GPIOPullDownOff = 1 and GPIOPullUpOff = 0. 
Valid when the GPIO is set as input regardless of the GppMuxCfg.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOIntCfg</name>
              <description>GPIO interrupt configuration (initial 00, R/W). 
Sets the polarity to use the GPIO as an external interrupt. 
000: prohibit the interrupt. 
001: detect rising edge. 
010: detect falling edge. 
011: detect both edges. 
100: detect high level. 
101: detect low level</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_CFG5</name>
          <description>GPIO5 config</description>
          <addressOffset>0x314</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIODrvCtrl</name>
              <description>GPIO5 drive control. 
To set GPIO drive settings. 
00: 1 mA. 
01: 1.5 mA (default). 
10: 2 mA. 
11: 4 mA. 
Valid when the GPIO is set as output regardless of GPIOMuxCfg.</description>
              <bitRange>[6:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOPullUpOff</name>
              <description>GPIO pull-up resister off. 
Turn on/off the internal pull up resiter. 
1: Internal pull-up off. 
0: Internal pull-up on. 
When both GPIOPullDownOff = 0 and GPIOPullUpOff = 0 are to be set, 
the chip forces GPIOPullDownOff = 1 and GPIOPullUpOff = 0. 
Valid when the GPIO is set as input regardless of the GppMuxCfg.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GppPullUpOff</name>
              <description>GPIO pull-down resister off. 
Turn on/off the internal pull down resiter. 
1: Internal pull-down off. 
0: Internal pull-down on. 
When both GPIOPullDownOff = 0 and GPIOPullUpOff = 0 are to be set,
the chip forces GPIOPullDownOff = 1 and GPIOPullUpOff = 0.
Valid when the GPIO is set as input regardless of the GppMuxCfg.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOIntCfg</name>
              <description>GPIO interrupt configuration (initial 00, R/W). 
Sets the polarity to use the GPIO as an external interrupt. 
000: prohibit the interrupt. 
001: detect rising edge. 
010: detect falling edge. 
011: detect both edges. 
100: detect high level. 
101: detect low level</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_CFG6</name>
          <description>GPIO6 config</description>
          <addressOffset>0x318</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIODrvCtrl</name>
              <description>GPIO6 drive control. 
To set GPIO drive settings. 
00: 1 mA. 
01: 1.5 mA (default). 
10: 2 mA. 
11: 4 mA. 
Valid when the GPIO is set as output regardless of GPIOMuxCfg.</description>
              <bitRange>[6:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOPullUpOff</name>
              <description>GPIO pull-up resister off. 
Turn on/off the internal pull up resiter. 
1: Internal pull-up off. 
0: Internal pull-up on. 
When both GPIOPullDownOff = 0 and GPIOPullUpOff = 0 are to be set,
the chip forces GPIOPullDownOff = 1 and GPIOPullUpOff = 0.
Valid when the GPIO is set as input regardless of the GppMuxCfg.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GppPullUpOff</name>
              <description>GPIO pull-down resister off. 
Turn on/off the internal pull down resiter. 
1: Internal pull-down off. 
0: Internal pull-down on. 
When both GPIOPullDownOff = 0 and GPIOPullUpOff = 0 are to be set,
the chip forces GPIOPullDownOff = 1 and GPIOPullUpOff = 0.
Valid when the GPIO is set as input regardless of the GppMuxCfg.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOIntCfg</name>
              <description>GPIO interrupt configuration (initial 00, R/W). 
Sets the polarity to use the GPIO as an external interrupt. 
000: prohibit the interrupt. 
001: detect rising edge. 
010: detect falling edge. 
011: detect both edges. 
100: detect high level. 
101: detect low level</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_CFG7</name>
          <description>GPIO7 config</description>
          <addressOffset>0x31C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIODrvCtrl</name>
              <description>GPIO7 drive control. 
To set GPIO drive settings. 
00: 1 mA. 
01: 1.5 mA (default). 
10: 2 mA. 
11: 4 mA. 
Valid when the GPIO is set as output regardless of GPIOMuxCfg.</description>
              <bitRange>[6:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOPullUpOff</name>
              <description>GPIO pull-up resister off. 
Turn on/off the internal pull up resiter. 
1: Internal pull-up off. 
0: Internal pull-up on. 
When both GPIOPullDownOff = 0 and GPIOPullUpOff = 0 are to be set,
the chip forces GPIOPullDownOff = 1 and GPIOPullUpOff = 0.
Valid when the GPIO is set as input regardless of the GppMuxCfg.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GppPullUpOff</name>
              <description>GPIO pull-down resister off. 
Turn on/off the internal pull down resiter. 
1: Internal pull-down off. 
0: Internal pull-down on. 
When both GPIOPullDownOff = 0 and GPIOPullUpOff = 0 are to be set, 
the chip forces GPIOPullDownOff = 1 and GPIOPullUpOff = 0. 
Valid when the GPIO is set as input regardless of the GppMuxCfg.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOIntCfg</name>
              <description>GPIO interrupt configuration (initial 00, R/W). 
Sets the polarity to use the GPIO as an external interrupt. 
000: prohibit the interrupt. 
001: detect rising edge. 
010: detect falling edge. 
011: detect both edges. 
100: detect high level. 
101: detect low level</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_CFG8</name>
          <description>GPIO8 config</description>
          <addressOffset>0x320</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIODrvCtrl</name>
              <description>GPIO8 drive control. 
To set GPIO drive settings. 
00: 1 mA. 
01: 1.5 mA (default). 
10: 2 mA. 
11: 4 mA. 
Valid when the GPIO is set as output regardless of GPIOMuxCfg.</description>
              <bitRange>[6:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOPullUpOff</name>
              <description>GPIO pull-up resister off. 
Turn on/off the internal pull up resiter. 
1: Internal pull-up off. 
0: Internal pull-up on. 
When both GPIOPullDownOff = 0 and GPIOPullUpOff = 0 are to be set, 
the chip forces GPIOPullDownOff = 1 and GPIOPullUpOff = 0. 
Valid when the GPIO is set as input regardless of the GppMuxCfg.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GppPullUpOff</name>
              <description>GPIO pull-down resister off. 
Turn on/off the internal pull down resiter. 
1: Internal pull-down off. 
0: Internal pull-down on. 
When both GPIOPullDownOff = 0 and GPIOPullUpOff = 0 are to be set,
the chip forces GPIOPullDownOff = 1 and GPIOPullUpOff = 0.
Valid when the GPIO is set as input regardless of the GppMuxCfg.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOIntCfg</name>
              <description>GPIO interrupt configuration (initial 00, R/W). 
Sets the polarity to use the GPIO as an external interrupt. 
000: prohibit the interrupt. 
001: detect rising edge. 
010: detect falling edge. 
011: detect both edges. 
100: detect high level. 
101: detect low level</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_CFG9</name>
          <description>GPIO9 config</description>
          <addressOffset>0x324</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIODrvCtrl</name>
              <description>GPIO9 drive control. 
To set GPIO drive settings. 
00: 1 mA. 
01: 1.5 mA (default). 
10: 2 mA. 
11: 4 mA. 
Valid when the GPIO is set as output regardless of GPIOMuxCfg.</description>
              <bitRange>[6:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOPullUpOff</name>
              <description>GPIO pull-up resister off. 
Turn on/off the internal pull up resiter. 
1: Internal pull-up off. 
0: Internal pull-up on. 
When both GPIOPullDownOff = 0 and GPIOPullUpOff = 0 are to be set, 
the chip forces GPIOPullDownOff = 1 and GPIOPullUpOff = 0. 
Valid when the GPIO is set as input regardless of the GppMuxCfg.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GppPullUpOff</name>
              <description>GPIO pull-down resister off. 
Turn on/off the internal pull down resiter. 
1: Internal pull-down off. 
0: Internal pull-down on. 
When both GPIOPullDownOff = 0 and GPIOPullUpOff = 0 are to be set, 
the chip forces GPIOPullDownOff = 1 and GPIOPullUpOff = 0. 
Valid when the GPIO is set as input regardless of the GppMuxCfg.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOIntCfg</name>
              <description>GPIO interrupt configuration (initial 00, R/W). 
Sets the polarity to use the GPIO as an external interrupt. 
000: prohibit the interrupt. 
001: detect rising edge. 
010: detect falling edge. 
011: detect both edges. 
100: detect high level. 
101: detect low level</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_CFG10</name>
          <description>GPIO10 config</description>
          <addressOffset>0x328</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIODrvCtrl</name>
              <description>GPIO10 drive control. 
To set GPIO drive settings. 
00: 1 mA. 
01: 1.5 mA (default). 
10: 2 mA. 
11: 4 mA. 
Valid when the GPIO is set as output regardless of GPIOMuxCfg.</description>
              <bitRange>[6:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOPullUpOff</name>
              <description>GPIO pull-up resister off. 
Turn on/off the internal pull up resiter. 
1: Internal pull-up off. 
0: Internal pull-up on. 
When both GPIOPullDownOff = 0 and GPIOPullUpOff = 0 are to be set, 
the chip forces GPIOPullDownOff = 1 and GPIOPullUpOff = 0. 
Valid when the GPIO is set as input regardless of the GppMuxCfg.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GppPullUpOff</name>
              <description>GPIO pull-down resister off. 
Turn on/off the internal pull down resiter. 
1: Internal pull-down off. 
0: Internal pull-down on. 
When both GPIOPullDownOff = 0 and GPIOPullUpOff = 0 are to be set,
the chip forces GPIOPullDownOff = 1 and GPIOPullUpOff = 0.
Valid when the GPIO is set as input regardless of the GppMuxCfg.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOIntCfg</name>
              <description>GPIO interrupt configuration (initial 00, R/W). 
Sets the polarity to use the GPIO as an external interrupt. 
000: prohibit the interrupt. 
001: detect rising edge. 
010: detect falling edge. 
011: detect both edges. 
100: detect high level. 
101: detect low level</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_CFG11</name>
          <description>GPIO11 config</description>
          <addressOffset>0x32C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIODrvCtrl</name>
              <description>GPIO11 drive control. 
To set GPIO drive settings. 
00: 1 mA. 
01: 1.5 mA (default). 
10: 2 mA. 
11: 4 mA. 
Valid when the GPIO is set as output regardless of GPIOMuxCfg.</description>
              <bitRange>[6:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOPullUpOff</name>
              <description>GPIO pull-up resister off. 
Turn on/off the internal pull up resiter. 
1: Internal pull-up off. 
0: Internal pull-up on. 
When both GPIOPullDownOff = 0 and GPIOPullUpOff = 0 are to be set, 
the chip forces GPIOPullDownOff = 1 and GPIOPullUpOff = 0. 
Valid when the GPIO is set as input regardless of the GppMuxCfg.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GppPullUpOff</name>
              <description>GPIO pull-down resister off. 
Turn on/off the internal pull down resiter. 
1: Internal pull-down off. 
0: Internal pull-down on. 
When both GPIOPullDownOff = 0 and GPIOPullUpOff = 0 are to be set, 
the chip forces GPIOPullDownOff = 1 and GPIOPullUpOff = 0. 
Valid when the GPIO is set as input regardless of the GppMuxCfg.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOIntCfg</name>
              <description>GPIO interrupt configuration (initial 00, R/W). 
Sets the polarity to use the GPIO as an external interrupt. 
000: prohibit the interrupt. 
001: detect rising edge. 
010: detect falling edge. 
011: detect both edges. 
100: detect high level. 
101: detect low level</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_CFG12</name>
          <description>GPIO12 config</description>
          <addressOffset>0x330</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIODrvCtrl</name>
              <description>GPIO12 drive control. 
To set GPIO drive settings. 
00: 1 mA. 
01: 1.5 mA (default). 
10: 2 mA. 
11: 4 mA. 
Valid when the GPIO is set as output regardless of GPIOMuxCfg.</description>
              <bitRange>[6:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOPullUpOff</name>
              <description>GPIO pull-up resister off. 
Turn on/off the internal pull up resiter. 
1: Internal pull-up off. 
0: Internal pull-up on. 
When both GPIOPullDownOff = 0 and GPIOPullUpOff = 0 are to be set, 
the chip forces GPIOPullDownOff = 1 and GPIOPullUpOff = 0. 
Valid when the GPIO is set as input regardless of the GppMuxCfg.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GppPullUpOff</name>
              <description>GPIO pull-down resister off. 
Turn on/off the internal pull down resiter. 
1: Internal pull-down off. 
0: Internal pull-down on. 
When both GPIOPullDownOff = 0 and GPIOPullUpOff = 0 are to be set, 
the chip forces GPIOPullDownOff = 1 and GPIOPullUpOff = 0. 
Valid when the GPIO is set as input regardless of the GppMuxCfg.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOIntCfg</name>
              <description>GPIO interrupt configuration (initial 00, R/W). 
Sets the polarity to use the GPIO as an external interrupt. 
000: prohibit the interrupt. 
001: detect rising edge. 
010: detect falling edge. 
011: detect both edges. 
100: detect high level. 
101: detect low level</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_CFG13</name>
          <description>GPIO13 config</description>
          <addressOffset>0x334</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIODrvCtrl</name>
              <description>GPIO13 drive control. 
To set GPIO drive settings. 
00: 1 mA. 
01: 1.5 mA (default). 
10: 2 mA. 
11: 4 mA. 
Valid when the GPIO is set as output regardless of GPIOMuxCfg.</description>
              <bitRange>[6:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOPullUpOff</name>
              <description>GPIO pull-up resister off. 
Turn on/off the internal pull up resiter. 
1: Internal pull-up off. 
0: Internal pull-up on. 
When both GPIOPullDownOff = 0 and GPIOPullUpOff = 0 are to be set, 
the chip forces GPIOPullDownOff = 1 and GPIOPullUpOff = 0. 
Valid when the GPIO is set as input regardless of the GppMuxCfg.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GppPullUpOff</name>
              <description>GPIO pull-down resister off. 
Turn on/off the internal pull down resiter. 
1: Internal pull-down off. 
0: Internal pull-down on. 
When both GPIOPullDownOff = 0 and GPIOPullUpOff = 0 are to be set, 
the chip forces GPIOPullDownOff = 1 and GPIOPullUpOff = 0. 
Valid when the GPIO is set as input regardless of the GppMuxCfg.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOIntCfg</name>
              <description>GPIO interrupt configuration (initial 00, R/W). 
Sets the polarity to use the GPIO as an external interrupt. 
000: prohibit the interrupt. 
001: detect rising edge. 
010: detect falling edge. 
011: detect both edges. 
100: detect high level. 
101: detect low level</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_CFG14</name>
          <description>GPIO14 config</description>
          <addressOffset>0x338</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIODrvCtrl</name>
              <description>GPIO14 drive control. 
To set GPIO drive settings. 
00: 1 mA. 
01: 1.5 mA (default). 
10: 2 mA. 
11: 4 mA. 
Valid when the GPIO is set as output regardless of GPIOMuxCfg.</description>
              <bitRange>[6:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOPullUpOff</name>
              <description>GPIO pull-up resister off. 
Turn on/off the internal pull up resiter. 
1: Internal pull-up off. 
0: Internal pull-up on. 
When both GPIOPullDownOff = 0 and GPIOPullUpOff = 0 are to be set, 
the chip forces GPIOPullDownOff = 1 and GPIOPullUpOff = 0. 
Valid when the GPIO is set as input regardless of the GppMuxCfg.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GppPullUpOff</name>
              <description>GPIO pull-down resister off. 
Turn on/off the internal pull down resiter. 
1: Internal pull-down off. 
0: Internal pull-down on. 
When both GPIOPullDownOff = 0 and GPIOPullUpOff = 0 are to be set, 
the chip forces GPIOPullDownOff = 1 and GPIOPullUpOff = 0. 
Valid when the GPIO is set as input regardless of the GppMuxCfg.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOIntCfg</name>
              <description>GPIO interrupt configuration (initial 00, R/W). 
Sets the polarity to use the GPIO as an external interrupt. 
000: prohibit the interrupt. 
001: detect rising edge. 
010: detect falling edge. 
011: detect both edges. 
100: detect high level. 
101: detect low level</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_CFG15</name>
          <description>GPIO15 config</description>
          <addressOffset>0x33C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIODrvCtrl</name>
              <description>GPIO15 drive control. 
To set GPIO drive settings. 
00: 1 mA. 
01: 1.5 mA (default). 
10: 2 mA. 
11: 4 mA. 
Valid when the GPIO is set as output regardless of GPIOMuxCfg.</description>
              <bitRange>[6:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOPullUpOff</name>
              <description>GPIO pull-up resister off. 
Turn on/off the internal pull up resiter. 
1: Internal pull-up off. 
0: Internal pull-up on. 
When both GPIOPullDownOff = 0 and GPIOPullUpOff = 0 are to be set, 
the chip forces GPIOPullDownOff = 1 and GPIOPullUpOff = 0. 
Valid when the GPIO is set as input regardless of the GppMuxCfg.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GppPullUpOff</name>
              <description>GPIO pull-down resister off. 
Turn on/off the internal pull down resiter. 
1: Internal pull-down off. 
0: Internal pull-down on. 
When both GPIOPullDownOff = 0 and GPIOPullUpOff = 0 are to be set, 
the chip forces GPIOPullDownOff = 1 and GPIOPullUpOff = 0. 
Valid when the GPIO is set as input regardless of the GppMuxCfg.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOIntCfg</name>
              <description>GPIO interrupt configuration (initial 00, R/W). 
Sets the polarity to use the GPIO as an external interrupt. 
000: prohibit the interrupt. 
001: detect rising edge. 
010: detect falling edge. 
011: detect both edges. 
100: detect high level. 
101: detect low level</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_CFG16</name>
          <description>GPIO16 config</description>
          <addressOffset>0x340</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIODrvCtrl</name>
              <description>GPIO16 drive control. 
To set GPIO drive settings. 
00: 1 mA. 
01: 1.5 mA (default). 
10: 2 mA. 
11: 4 mA. 
Valid when the GPIO is set as output regardless of GPIOMuxCfg.</description>
              <bitRange>[6:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOPullUpOff</name>
              <description>GPIO pull-up resister off. 
Turn on/off the internal pull up resiter. 
1: Internal pull-up off. 
0: Internal pull-up on. 
When both GPIOPullDownOff = 0 and GPIOPullUpOff = 0 are to be set, 
the chip forces GPIOPullDownOff = 1 and GPIOPullUpOff = 0. 
Valid when the GPIO is set as input regardless of the GppMuxCfg.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GppPullUpOff</name>
              <description>GPIO pull-down resister off. 
Turn on/off the internal pull down resiter. 
1: Internal pull-down off. 
0: Internal pull-down on. 
When both GPIOPullDownOff = 0 and GPIOPullUpOff = 0 are to be set, 
the chip forces GPIOPullDownOff = 1 and GPIOPullUpOff = 0. 
Valid when the GPIO is set as input regardless of the GppMuxCfg.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOIntCfg</name>
              <description>GPIO interrupt configuration (initial 00, R/W). 
Sets the polarity to use the GPIO as an external interrupt. 
000: prohibit the interrupt. 
001: detect rising edge. 
010: detect falling edge. 
011: detect both edges. 
100: detect high level. 
101: detect low level</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_CFG17</name>
          <description>GPIO17 config</description>
          <addressOffset>0x344</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIODrvCtrl</name>
              <description>GPIO17 drive control. 
To set GPIO drive settings. 
00: 1 mA. 
01: 1.5 mA (default). 
10: 2 mA. 
11: 4 mA. 
Valid when the GPIO is set as output regardless of GPIOMuxCfg.</description>
              <bitRange>[6:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOPullUpOff</name>
              <description>GPIO pull-up resister off. 
Turn on/off the internal pull up resiter. 
1: Internal pull-up off. 
0: Internal pull-up on. 
When both GPIOPullDownOff = 0 and GPIOPullUpOff = 0 are to be set, 
the chip forces GPIOPullDownOff = 1 and GPIOPullUpOff = 0. 
Valid when the GPIO is set as input regardless of the GppMuxCfg.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GppPullUpOff</name>
              <description>GPIO pull-down resister off. 
Turn on/off the internal pull down resiter. 
1: Internal pull-down off. 
0: Internal pull-down on. 
When both GPIOPullDownOff = 0 and GPIOPullUpOff = 0 are to be set, 
the chip forces GPIOPullDownOff = 1 and GPIOPullUpOff = 0. 
Valid when the GPIO is set as input regardless of the GppMuxCfg.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOIntCfg</name>
              <description>GPIO interrupt configuration (initial 00, R/W). 
Sets the polarity to use the GPIO as an external interrupt. 
000: prohibit the interrupt. 
001: detect rising edge. 
010: detect falling edge. 
011: detect both edges. 
100: detect high level. 
101: detect low level</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <!-- ************************* GPIO_MUXCFG ***************************** -->
        <register>
          <name>GPIO_MUXCFG_L</name>
          <description>GPIO multiplexer config L</description>
          <addressOffset>0x400</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIO17MuxL</name>
              <description>Bit 0 of GPIO multiplexer configuration.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO16MuxL</name>
              <description>Bit 0 of GPIO multiplexer configuration.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO15MuxL</name>
              <description>Bit 0 of GPIO multiplexer configuration.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO14MuxL</name>
              <description>Bit 0 of GPIO multiplexer configuration.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO13MuxL</name>
              <description>Bit 0 of GPIO multiplexer configuration.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO12MuxL</name>
              <description>Bit 0 of GPIO multiplexer configuration.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO11MuxL</name>
              <description>Bit 0 of GPIO multiplexer configuration.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO10MuxL</name>
              <description>Bit 0 of GPIO multiplexer configuration.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPI9OMuxL</name>
              <description>Bit 0 of GPIO multiplexer configuration.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO8MuxL</name>
              <description>Bit 0 of GPIO multiplexer configuration.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO7MuxL</name>
              <description>Bit 0 of GPIO multiplexer configuration.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO6MuxL</name>
              <description>Bit 0 of GPIO multiplexer configuration.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO5MuxL</name>
              <description>Bit 0 of GPIO multiplexer configuration.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO4MuxL</name>
              <description>Bit 0 of GPIO multiplexer configuration.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO3MuxL</name>
              <description>Bit 0 of GPIO multiplexer configuration.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO2MuxL</name>
              <description>Bit 0 of GPIO multiplexer configuration.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO1MuxL</name>
              <description>Bit 0 of GPIO multiplexer configuration.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO0MuxL</name>
              <description>Bit 0 of GPIO multiplexer configuration.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_MUXCFG_M</name>
          <description>GPIO multiplexer config M</description>
          <addressOffset>0x404</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIO17MuxM</name>
              <description>Bit 1 of GPIO multiplexer configuration.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO16MuxM</name>
              <description>Bit 1 of GPIO multiplexer configuration.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO15MuxM</name>
              <description>Bit 1 of GPIO multiplexer configuration.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO14MuxM</name>
              <description>Bit 1 of GPIO multiplexer configuration.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO13MuxM</name>
              <description>Bit 1 of GPIO multiplexer configuration.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO12MuxM</name>
              <description>Bit 1 of GPIO multiplexer configuration.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO11MuxM</name>
              <description>Bit 1 of GPIO multiplexer configuration.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO10MuxM</name>
              <description>Bit 1 of GPIO multiplexer configuration.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPI9OMuxM</name>
              <description>Bit 1 of GPIO multiplexer configuration.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO8MuxM</name>
              <description>Bit 1 of GPIO multiplexer configuration.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO7MuxM</name>
              <description>Bit 1 of GPIO multiplexer configuration.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO6MuxM</name>
              <description>Bit 1 of GPIO multiplexer configuration.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO5MuxM</name>
              <description>Bit 1 of GPIO multiplexer configuration.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO4MuxM</name>
              <description>Bit 1 of GPIO multiplexer configuration.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO3MuxM</name>
              <description>Bit 1 of GPIO multiplexer configuration.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO2MuxM</name>
              <description>Bit 1 of GPIO multiplexer configuration.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO1MuxM</name>
              <description>Bit 1 of GPIO multiplexer configuration.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO0MuxM</name>
              <description>Bit 1 of GPIO multiplexer configuration.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_MUXCFG_H</name>
          <description>GPIO multiplexer config H</description>
          <addressOffset>0x408</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIO17MuxH</name>
              <description>Bit 2 of GPIO multiplexer configuration.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO16MuxH</name>
              <description>Bit 2 of GPIO multiplexer configuration.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO15MuxH</name>
              <description>Bit 2 of GPIO multiplexer configuration.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO14MuxH</name>
              <description>Bit 2 of GPIO multiplexer configuration.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO13MuxH</name>
              <description>Bit 2 of GPIO multiplexer configuration.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO12MuxH</name>
              <description>Bit 2 of GPIO multiplexer configuration.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO11MuxH</name>
              <description>Bit 2 of GPIO multiplexer configuration.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO10MuxH</name>
              <description>Bit 2 of GPIO multiplexer configuration.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPI9OMuxH</name>
              <description>Bit 2 of GPIO multiplexer configuration.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO8MuxH</name>
              <description>Bit 2 of GPIO multiplexer configuration.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO7MuxH</name>
              <description>Bit 2 of GPIO multiplexer configuration.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO6MuxH</name>
              <description>Bit 2 of GPIO multiplexer configuration.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO5MuxH</name>
              <description>Bit 2 of GPIO multiplexer configuration.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO4MuxH</name>
              <description>Bit 2 of GPIO multiplexer configuration.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO3MuxH</name>
              <description>Bit 2 of GPIO multiplexer configuration.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO2MuxH</name>
              <description>Bit 2 of GPIO multiplexer configuration.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO1MuxH</name>
              <description>Bit 2 of GPIO multiplexer configuration.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO0MuxH</name>
              <description>Bit 2 of GPIO multiplexer configuration.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <!-- ************************* GPIO_INT ***************************** -->
        <register>
          <name>GPIO_INT</name>
          <description>GPIO interrupt read</description>
          <addressOffset>0x480</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <fields>
            <field>
              <name>GPIOINT17</name>
              <description>Read interrupt on the GPIO. 
1: Interrupted. 
0: Not interrupted</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>GPIOINT16</name>
              <description>Read interrupt on the GPIO. 
1: Interrupted. 
0: Not interrupted</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>GPIOINT15</name>
              <description>Read interrupt on the GPIO. 
1: Interrupted. 
0: Not interrupted</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>GPIOINT14</name>
              <description>Read interrupt on the GPIO. 
1: Interrupted. 
0: Not interrupted</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>GPIOINT13</name>
              <description>Read interrupt on the GPIO. 
1: Interrupted. 
0: Not interrupted</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>GPIOINT12</name>
              <description>Read interrupt on the GPIO. 
1: Interrupted. 
0: Not interrupted</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>GPIOINT11</name>
              <description>Read interrupt on the GPIO. 
1: Interrupted. 
0: Not interrupted</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>GPIOINT10</name>
              <description>Read interrupt on the GPIO. 
1: Interrupted. 
0: Not interrupted</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>GPIOINT9</name>
              <description>Read interrupt on the GPIO. 
1: Interrupted. 
0: Not interrupted</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>GPIOINT8</name>
              <description>Read interrupt on the GPIO. 
1: Interrupted. 
0: Not interrupted</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>GPIOINT7</name>
              <description>Read interrupt on the GPIO. 
1: Interrupted. 
0: Not interrupted</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>GPIOINT6</name>
              <description>Read interrupt on the GPIO. 
1: Interrupted. 
0: Not interrupted</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>GPIOINT5</name>
              <description>Read interrupt on the GPIO. 
1: Interrupted. 
0: Not interrupted</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>GPIOINT4</name>
              <description>Read interrupt on the GPIO. 
1: Interrupted. 
0: Not interrupted</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>GPIOINT3</name>
              <description>Read interrupt on the GPIO. 
1: Interrupted. 
0: Not interrupted</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>GPIOINT2</name>
              <description>Read interrupt on the GPIO. 
1: Interrupted. 
0: Not interrupted</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>GPIOINT1</name>
              <description>Read interrupt on the GPIO. 
1: Interrupted. 
0: Not interrupted</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>GPIOINT0</name>
              <description>Read interrupt on the GPIO. 
1: Interrupted. 
0: Not interrupted</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <!-- ************************* GPIO_EDGECAPCLR ***************************** -->
        <register>
          <name>GPIO_EDGECAPCLR</name>
          <description>GPIO edge interrupt capture clear</description>
          <addressOffset>0x488</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIO17EdgeCapClr</name>
              <description>Clear edge interrput capture on the GPIO. 
1: Clear. 
0: Not clear</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO16EdgeCapClr</name>
              <description>Clear edge interrput capture on the GPIO. 
1: Clear. 
0: Not clear</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO15EdgeCapClr</name>
              <description>Clear edge interrput capture on the GPIO. 
1: Clear. 
0: Not clear</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO14EdgeCapClr</name>
              <description>Clear edge interrput capture on the GPIO. 
1: Clear. 
0: Not clear</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO13EdgeCapClr</name>
              <description>Clear edge interrput capture on the GPIO. 
1: Clear. 
0: Not clear</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO12EdgeCapClr</name>
              <description>Clear edge interrput capture on the GPIO. 
1: Clear. 
0: Not clear</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO11EdgeCapClr</name>
              <description>Clear edge interrput capture on the GPIO. 
1: Clear. 
0: Not clear</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO10EdgeCapClr</name>
              <description>Clear edge interrput capture on the GPIO. 
1: Clear. 
0: Not clear</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO9EdgeCapClr</name>
              <description>Clear edge interrput capture on the GPIO. 
1: Clear. 
0: Not clear</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO8EdgeCapClr</name>
              <description>Clear edge interrput capture on the GPIO. 
1: Clear. 
0: Not clear</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO7EdgeCapClr</name>
              <description>Clear edge interrput capture on the GPIO. 
1: Clear. 
0: Not clear</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO6EdgeCapClr</name>
              <description>Clear edge interrput capture on the GPIO. 
1: Clear. 
0: Not clear</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO5EdgeCapClr</name>
              <description>Clear edge interrput capture on the GPIO. 
1: Clear. 
0: Not clear</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO4EdgeCapClr</name>
              <description>Clear edge interrput capture on the GPIO. 
1: Clear. 
0: Not clear</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO3EdgeCapClr</name>
              <description>Clear edge interrput capture on the GPIO. 
1: Clear. 
0: Not clear</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO2EdgeCapClr</name>
              <description>Clear edge interrput capture on the GPIO. 
1: Clear. 
0: Not clear</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO1EdgeCapClr</name>
              <description>Clear edge interrput capture on the GPIO. 
1: Clear. 
0: Not clear</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO0EdgeCapClr</name>
              <description>Clear edge interrput capture on the GPIO. 
1: Clear. 
0: Not clear</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_OBSMUXCFG</name>
          <description>GPIO Observation function selection register</description>
          <addressOffset>0x490</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>ObsMuxCfg</name>
              <description>Always set 3.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_MON_WRAP</name>
          <description>GPIO Input Monitor Wrap Register</description>
          <addressOffset>0x4C0</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <fields>
            <field>
              <name>GPIO17Mon</name>
              <description>GPIO17 input monitor data. 
Monitors the input of GPIO17. 
1: High input. 
0: Low input</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>GPIO16Mon</name>
              <description>GPIO16 input monitor data. 
Monitors the input of GPIO16. 
1: High input. 
0: Low input</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>GPIO15Mon</name>
              <description>GPIO15 input monitor data. 
Monitors the input of GPIO15. 
1: High input. 
0: Low input</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>GPIO14Mon</name>
              <description>GPIO14 input monitor data. 
Monitors the input of GPIO14. 
1: High input. 
0: Low input</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>GPIO13Mon</name>
              <description>GPIO13 input monitor data. 
Monitors the input of GPIO13. 
1: High input. 
0: Low input</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>GPIO12Mon</name>
              <description>GPIO12 input monitor data. 
Monitors the input of GPIO12. 
1: High input. 
0: Low input</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>GPIO11Mon</name>
              <description>GPIO11 input monitor data. 
Monitors the input of GPIO11. 
1: High input. 
0: Low input</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>GPIO10Mon</name>
              <description>GPIO10 input monitor data. 
Monitors the input of GPIO10. 
1: High input. 
0: Low input</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>GPIO9Mon</name>
              <description>GPIO9 input monitor data. 
Monitors the input of GPIO9. 
1: High input. 
0: Low input</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>GPIO8Mon</name>
              <description>GPIO8 input monitor data. 
Monitors the input of GPIO8. 
1: High input. 
0: Low input</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>GPIO7Mon</name>
              <description>GPIO7 input monitor data. 
Monitors the input of GPIO7. 
1: High input. 
0: Low input</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>GPIO6Mon</name>
              <description>GPIO6 input monitor data. 
Monitors the input of GPIO6. 
1: High input. 
0: Low input</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>GPIO5Mon</name>
              <description>GPIO5 input monitor data. 
Monitors the input of GPIO5. 
1: High input. 
0: Low input</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>GPIO4Mon</name>
              <description>GPIO4 input monitor data. 
Monitors the input of GPIO4. 
1: High input. 
0: Low input</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>GPIO3Mon</name>
              <description>GPIO3 input monitor data. 
Monitors the input of GPIO3. 
1: High input. 
0: Low input</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>GPIO2Mon</name>
              <description>GPIO2 input monitor data. 
Monitors the input of GPIO2. 
1: High input. 
0: Low input</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>GPIO1Mon</name>
              <description>GPIO1 input monitor data. 
Monitors the input of GPIO1. 
1: High input. 
0: Low input</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>GPIO0Mon</name>
              <description>GPIO0 input monitor data. 
Monitors the input of GPIO0. 
1: High input. 
0: Low input</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_OUT_WRAP</name>
          <description>GPIO Output data Wrap Register</description>
          <addressOffset>0x4C4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIO17Out</name>
              <description>GPIO17 output data. 
Set the output level of GPIO17. 
1: High output. 
0: Low output</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO16Out</name>
              <description>GPIO16 output data. 
Set the output level of GPIO16. 
1: High output. 
0: Low output</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO15Out</name>
              <description>GPIO15 output data. 
Set the output level of GPIO15. 
1: High output. 
0: Low output</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO14Out</name>
              <description>GPIO14 output data. 
Set the output level of GPIO14. 
1: High output. 
0: Low output</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO13Out</name>
              <description>GPIO13 output data. 
Set the output level of GPIO13. 
1: High output. 
0: Low output</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO12Out</name>
              <description>GPIO12 output data. 
Set the output level of GPIO12. 
1: High output. 
0: Low output</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO11Out</name>
              <description>GPIO11 output data. 
Set the output level of GPIO11. 
1: High output. 
0: Low output</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO10Out</name>
              <description>GPIO10 output data. 
Set the output level of GPIO10. 
1: High output. 
0: Low output</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO9Out</name>
              <description>GPIO9 output data. 
Set the output level of GPIO9. 
1: High output. 
0: Low output</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO8Out</name>
              <description>GPIO8 output data. 
Set the output level of GPIO8. 
1: High output. 
0: Low output</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO7Out</name>
              <description>GPIO7 output data. 
Set the output level of GPIO7. 
1: High output. 
0: Low output</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO6Out</name>
              <description>GPIO6 output data. 
Set the output level of GPIO6. 
1: High output. 
0: Low output</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO5Out</name>
              <description>GPIO5 output data. 
Set the output level of GPIO5. 
1: High output. 
0: Low output</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO4Out</name>
              <description>GPIO4 output data. 
Set the output level of GPIO4. 
1: High output. 
0: Low output</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO3Out</name>
              <description>GPIO3 output data. 
Set the output level of GPIO3. 
1: High output. 
0: Low output</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO2Out</name>
              <description>GPIO2 output data. 
Set the output level of GPIO2. 
1: High output. 
0: Low output</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO1Out</name>
              <description>GPIO1 output data. 
Set the output level of GPIO1. 
1: High output. 
0: Low output</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO0Out</name>
              <description>GPIO0 output data. 
Set the output level of GPIO0. 
1: High output. 
0: Low output</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_OUT_EN_WRAP</name>
          <description>GPIO Output Enable Wrap Register</description>
          <addressOffset>0x4C8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIOOutEn17</name>
              <description>GPIO17 output enable. 
Enables GPIO17 output. 
1: Output enable. 
0: Output disable</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOOutEn16</name>
              <description>GPIO16 output enable. 
Enables GPIO16 output. 
1: Output enable. 
0: Output disable</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOOutEn15</name>
              <description>GPIO15 output enable. 
Enables GPIO15 output. 
1: Output enable. 
0: Output disable</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOOutEn14</name>
              <description>GPIO14 output enable. 
Enables GPIO14 output. 
1: Output enable. 
0: Output disable</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOOutEn13</name>
              <description>GPIO13 output enable. 
Enables GPIO13 output. 
1: Output enable. 
0: Output disable</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOOutEn12</name>
              <description>GPIO12 output enable. 
Enables GPIO12 output. 
1: Output enable. 
0: Output disable</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOOutEn11</name>
              <description>GPIO11 output enable. 
Enables GPIO11 output. 
1: Output enable. 
0: Output disable</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOOutEn10</name>
              <description>GPIO10 output enable. 
Enables GPIO10 output. 
1: Output enable. 
0: Output disable</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOOutEn9</name>
              <description>GPIO9 output enable. 
Enables GPIO9 output. 
1: Output enable. 
0: Output disable</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOOutEn8</name>
              <description>GPIO8 output enable. 
Enables GPIO8 output. 
1: Output enable. 
0: Output disable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOOutEn7</name>
              <description>GPIO7 output enable. 
Enables GPIO7 output. 
1: Output enable. 
0: Output disable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOOutEn6</name>
              <description>GPIO6 output enable. 
Enables GPIO6 output. 
1: Output enable. 
0: Output disable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOOutEn5</name>
              <description>GPIO5 output enable. 
Enables GPIO5 output. 
1: Output enable. 
0: Output disable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOOutEn4</name>
              <description>GPIO4 output enable. 
Enables GPIO4 output. 
1: Output enable. 
0: Output disable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOOutEn3</name>
              <description>GPIO3 output enable. 
Enables GPIO3 output. 
1: Output enable. 
0: Output disable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOOutEn2</name>
              <description>GPIO2 output enable. 
Enables GPIO2 output. 
1: Output enable. 
0: Output disable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOOutEn1</name>
              <description>GPIO1 output enable. 
Enables GPIO1 output. 
1: Output enable. 
0: Output disable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOOutEn0</name>
              <description>GPIO0 output enable. 
Enables GPIO0 output. 
1: Output enable. 
0: Output disable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>

    <!-- ************************* PMU ***************************** -->
    <peripheral>
      <name>PMU</name>
      <description>Power Management Unit</description>
      <baseAddress>0x40055000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x200</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>PMU_RTCWAKEUPCFG</name>
          <description>RTC wakeup config register</description>
          <addressOffset>0x5C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>RTCWAKEUPEN</name>
              <description>RTC wakeup config. 
1: Enable wakeup by RTC. 
0: Disable wakeup by RTC</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PMU_IOSTANDBYX</name>
          <description>GPIO input standby</description>
          <addressOffset>0x78</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIO17InputStandbyRelease</name>
              <description>Input standby release on GPIO17. 
1: Release standby. 
0: Standby</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO16InputStandbyRelease</name>
              <description>Input standby release on GPIO16. 
1: Release standby. 
0: Standby</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO15InputStandbyRelease</name>
              <description>Input standby release on GPIO15. 
1: Release standby. 
0: Standby</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO14InputStandbyRelease</name>
              <description>Input standby release on GPIO14. 
1: Release standby. 
0: Standby</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO13InputStandbyRelease</name>
              <description>Input standby release on GPIO13. 
1: Release standby. 
0: Standby</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO12InputStandbyRelease</name>
              <description>Input standby release on GPIO12. 
1: Release standby. 
0: Standby</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO11InputStandbyRelease</name>
              <description>Input standby release on GPIO11. 
1: Release standby. 
0: Standby</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO10InputStandbyRelease</name>
              <description>Input standby release on GPIO10. 
1: Release standby. 
0: Standby</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO9InputStandbyRelease</name>
              <description>Input standby release on GPIO9. 
1: Release standby. 
0: Standby</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO8InputStandbyRelease</name>
              <description>Input standby release on GPIO8. 
1: Release standby. 
0: Standby</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO7InputStandbyRelease</name>
              <description>Input standby release on GPIO7. 
1: Release standby. 
0: Standby</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO6InputStandbyRelease</name>
              <description>Input standby release on GPIO6. 
1: Release standby. 
0: Standby</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO5InputStandbyRelease</name>
              <description>Input standby release on GPIO5. 
1: Release standby. 
0: Standby</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO4InputStandbyRelease</name>
              <description>Input standby release on GPIO4. 
1: Release standby. 
0: Standby</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO3InputStandbyRelease</name>
              <description>Input standby release on GPIO3. 
1: Release standby. 
0: Standby</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO2InputStandbyRelease</name>
              <description>Input standby release on GPIO2. 
1: Release standby. 
0: Standby</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO1InputStandbyRelease</name>
              <description>Input standby release on GPIO1. 
1: Release standby. 
0: Standby</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO0InputStandbyRelease</name>
              <description>Input standby release on GPIO0. 
1: Release standby. 
0: Standby</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PMU_RTC_TIME</name>
          <description>RTC time register</description>
          <addressOffset>0xB0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>RTCDAYSET</name>
              <description>RTC time config of day.
(Binary Coded Decimal). 
Min=1.
Max=31</description>
              <bitRange>[29:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RTCHOURSET</name>
              <description>RTC time config of hour.
(Binary Coded Decimal). 
Min: 0. 
Max: 23</description>
              <bitRange>[21:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RTCMINUTESET</name>
              <description>RTC time config of minute.
(Binary Coded Decimal). 
Min: 0. 
Max: 59</description>
              <bitRange>[14:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RTCSECONDSET</name>
              <description>RTC time config of second.
(Binary Coded Decimal). 
Min: 0. 
Max: 59</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PMU_RTC_DAY</name>
          <description>RTC date register</description>
          <addressOffset>0xB4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>RTCYEAR</name>
              <description>RTC date config of year. (Binary Coded Decimal)</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RTCMONTH</name>
              <description>RTC date config of month. (Binary Coded Decimal)</description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RTCWEEK</name>
              <description>RTC date config of week. (Binary Coded Decimal)</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PMU_RTC_PAGER</name>
          <description>RTC control config register</description>
          <addressOffset>0xB8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>INTENA</name>
              <description>Set interrupt config. 
0: Disable. 
1: Enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ENATMR</name>
              <description>Set clock config. 
0: Disable. 
1: Enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ENAALM</name>
              <description>Set alarm config. 
0: Disable. 
1: Enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PAGE</name>
              <description>Set Page config. 
0: Choose Page0. 
1: Choose Page1</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PMU_RTC_RESTR</name>
          <description>RTC reset register</description>
          <addressOffset>0xBC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>Reserved0</name>
              <description>Always set 0b0000_0000_1100_0001_0000_0000_11</description>
              <bitRange>[31:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSTTMR</name>
              <description>Reset clock. 
0: Not reset. 
1: Reset. 
If you wan to reset a clock, please set 1 to this value and wait to become 0.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSTALM</name>
              <description>Reset alarm. 
0: Not reset. 
1: Reset. 
If you wan to reset an alarm, please set 1 to this value and wait to become 0.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Reserved1</name>
              <description>Do not change the values.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PMU_RTC_TIME2</name>
          <description>RTC time register2</description>
          <addressOffset>0xC4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>RTCDAYSET</name>
              <description>RTC time config of day. (Binary Coded Decimal). 
Min: 1. 
Max: 31</description>
              <bitRange>[29:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RTCHOURSET</name>
              <description>RTC time config of hour. (Binary Coded Decimal). 
Min: 0. 
Max: 23</description>
              <bitRange>[21:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RTCMINUTESET</name>
              <description>RTC time config of minute.
(Binary Coded Decimal). 
Min: 0. 
Max: 59</description>
              <bitRange>[14:8]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PMU_RTC_ADJUST1S</name>
          <description>RTC Adjust 1 Sec register</description>
          <addressOffset>0xCC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>SCUT</name>
              <description>1Hz Short Cut</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Reserved1</name>
              <description>Reserved (Set 0 to all the bits)</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PMU_RTC_INTCLR</name>
          <description>RTC interrupt clear register</description>
          <addressOffset>0xD0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>RTCINTclr</name>
              <description>Clear RTC interrupt. 
1: Clear. 
0: Don't care</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PMU_RTC_INTEN</name>
          <description>RTC interrupt enable register</description>
          <addressOffset>0xD4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>RTCINTEN</name>
              <description>Enable RTC interrupt. 
1: Enable interrupt request. 
0: Disable interrupt request</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PMU_RTC_CNTCFG</name>
          <description>RTC count cnofig register</description>
          <addressOffset>0xD8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>RTCNTCFG</name>
              <description>Set RTC config. 
1: Enable RTC config. 
0: Disable RTC config</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PMU_XOSC_TRIMIN</name>
          <description>XOSC trimming register</description>
          <addressOffset>0x118</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>Reserved0</name>
              <description>Do not change this value</description>
              <bitRange>[31:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XO_FREQ_TUNE</name>
              <description>Frequency tune value (eFuse)</description>
              <bitRange>[10:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Reserved1</name>
              <description>Do not change this value</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PMU_OSC32K_TRIMIN</name>
          <description>OSC32K trimming register</description>
          <addressOffset>0x11C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>FREQTUNE_OSC32K</name>
              <description>Freqency tune value. (eFuse)</description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Reserved0</name>
              <description>Do not change this value</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PMU_SLEEPCLK_STATUS</name>
          <description>Sleep clock status</description>
          <addressOffset>0x160</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>SLPSLKTOGLE</name>
              <description>Status toggling 1/2 of Sleep clock</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PMU_SLEEPCLK_HL_STATUS</name>
          <description>HL Status of Sleep Clock</description>
          <addressOffset>0x164</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>SLPSLKHLSTATUS</name>
              <description>Sleep Clock Status</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    
    <!-- ************************* BluetoothCounter ***************************** -->
    <peripheral>
      <name>BluetoothCounter</name>
      <description>Bluetooth Counter</description>
      <baseAddress>0x40040240</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x100</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>LLC_LLCNT_HOLD_EN</name>
          <description>Hold Bluetooth counter</description>
          <addressOffset>0x0C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>LLCntHold</name>
              <description>When 0 (or arbitrary value) is set this register, the following registers will hold the values: 
LLC_BC_LATCH_MA:Master Bit Counter. 
LLC_SC_LATCH_MA:Master Slot Counter. 
Before accessing LLC_BC_LATCH_MA or LLC_SC_LATCH_MA, please set 0 (or arbitrary value) to this register.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LLC_BC_LATCH_MA</name>
          <description>Holding Master Bit Counter</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <fields>
            <field>
              <name>BCntMa_Hold</name>
              <description>Master bit counter value.</description>
              <bitRange>[9:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LLC_SC_LATCH_MA</name>
          <description>Holding Master Slot Counter</description>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>SCntMa_Hold</name>
              <description>Master slot counter value. 
This counts up every 1 slot (625 micro seconds). 
Before reading this value, please set 0 (or arbitrary value) to LLCntHold.</description>
              <bitRange>[26:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
  </peripherals>
</device>
