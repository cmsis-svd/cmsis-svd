<?xml version="1.0" encoding="utf-8"?>
<!-- File naming: <vendor>_<part/series name>.svd -->
<!--
  Copyright (C) 2012 ARM Limited. All rights reserved.

  Purpose: System Viewer Description (SVD) Example (Schema Version 1.1)
           This is a description of a none-existent and incomplete device
		   for demonstration purposes only.
 -->
<device schemaVersion="1.2" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="CMSIS-SVD.xsd">
  <vendor>SAMSUNG System LSI</vendor>
  <!-- device vendor name -->
  <vendorID>SAMSUNG</vendorID>
  <!-- device vendor short name -->
  <name>ExynosT100</name>
  <!-- name of part-->
  <series>ARMCM4F</series>
  <!-- device series the device belongs to -->
  <version>0.1</version>
  <!-- version of this description, adding CMSIS-SVD 1.1 tags -->
  <description>ExynosT100</description>
  <licenseText>
    <!-- this license text will appear in header file. \n force line breaks -->
    ARM Limited (ARM) is supplying this software for use with Cortex-M\n
    processor based microcontroller, but can be equally used for other\n
    suitable  processor architectures. This file can be freely distributed.\n
    Modifications to this file shall be clearly marked.\n
    \n
    THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED\n
    OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF\n
    MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.\n
    ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR\n
    CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  </licenseText>
  <cpu>
    <!-- details about the cpu embedded in the device -->
    <name>CM4</name>
    <revision>r1p0</revision>
    <endian>little</endian>
    <mpuPresent>true</mpuPresent>
    <fpuPresent>true</fpuPresent>
    <nvicPrioBits>3</nvicPrioBits>
    <vendorSystickConfig>false</vendorSystickConfig>
  </cpu>
  <addressUnitBits>8</addressUnitBits>
  <!-- byte addressable memory -->
  <width>32</width>
  <!-- bus width is 32 bits -->
  <size>32</size>
  <access>read-write</access>
  <resetValue>0x00000000</resetValue>
  <resetMask>0xFFFFFFFF</resetMask>
  <peripherals>
    <!--NORREG-->
    <peripheral>
      <name>NORREG</name>
      <version>1.0</version>
      <description>NOR Control</description>
      <baseAddress>0x40001000</baseAddress>
      <size>32</size>
      <access>read-write</access>
      <addressBlock>
        <offset>0</offset>
        <size>0x100</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>NOR_COMPLETE</name>
        <description>When Erase and Write Operation of NOR Flash was completed</description>
        <value>14</value>
      </interrupt>
      <registers>
        <register>
          <name>FRWCON0</name>
          <description>Flash Memory Control Register</description>
          <addressOffset>0x000</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0x0000001F</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>Resered bits</description>
              <bitRange>[31:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ERSMD</name>
              <description>Erase mode selection
00 = Page erase mode (256 bytes)
01 = Sector erase mode (4 Kbytes)
10 = Mat erase mode (Mat erase) 
11 = Forbidden
</description>
              <bitRange>[4:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HVEN</name>
              <description>Program activation bit
0 = No operation
1 = High voltage generation</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WRMD</name>
              <description>Erase/write selection bits
00 = No operation
01 = Erase
10 = Write
11 = Forbidden</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PROTCON</name>
          <description>Code Protection Control Register</description>
          <addressOffset>0x010</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD3</name>
              <description>Reserved
NOTE: Do not change this area.
</description>
              <bitRange>[31:16]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>CPLock</name>
              <description>2'b10: can set CP (Code Protection) Set bit
2'b01: Locking CP Set bit (permanent lock)
1) Set these bits 
2) Erase (OPT BASE+04)
3) Set these bits
4) Program (OPT BASE+04)
NOTE: Since CP and CP lock shares the same page, two values should be updated together.[15:12]
</description>
              <bitRange>[15:14]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>CP1Set</name>
              <description>2'b10:CPA(Code Protection Area) is erasable
2'b01: CPA is read only
1) Set these bits 
2) Erase (OPT BASE)
3) Set these bits
4) Program (OPT BASE)
NOTE: Since CP and CP lock shares the same page, two values should be updated together.[15:12]</description>
              <bitRange>[13:12]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>RSVD2</name>
              <description>Reserved
NOTE: Do not change this area.</description>
              <bitRange>[11:8]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>CMLock</name>
              <description>2'b10: can change SWD
2'b01: Locking change SWD (permanent lock)
1) Set these bits 
2) Erase (OPT BASE+0x0C)
3) Set these bits
4) Program (OPT BASE+0x0C)
NOTE: Since SWD, CM Lock, RSVD0, RSVD1 are written on the same page, they should be updated together.[7:0]</description>
              <bitRange>[7:6]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>RSVD1</name>
              <description>Reserved
NOTE: This area values should be updated together.[7:0] on the same page.</description>
              <bitRange>[5:4]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>SWD</name>
              <description>2'b10: SWD(single wire debug) Enable
2'b01: SWD Disable
1) Set these bits 
2) Erase (OPT BASE+04)
3) Set these bits
4) Program (OPT BASE+04)
NOTE: Since SWD, CMLock , RSVD0, RSVD1 are written on the same page, they should be updated together.[7:0]</description>
              <bitRange>[3:2]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>RSVD0</name>
              <description>Reserved
NOTE: This area values should be updated together.[7:0] on the same page
</description>
              <bitRange>[1:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PROTMON</name>
          <description>Code Protection Status Register</description>
          <addressOffset>0x014</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x030F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD4</name>
              <description>Reserved bits</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CPLockMon</name>
              <description>PROTCON CP Lock write enable bit
0 = PROTCON CP Lock is read only (irreversible setting)
1 = PROTCON CP Lock is writable</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CPSetMon</name>
              <description>CPA erase enable bit
0 = CPA is read only
1 = CPA is erasable</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD3</name>
              <description>Reserved bits</description>
              <bitRange>[9:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD2</name>
              <description>Reserved bits</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CMLockMon</name>
              <description>0 = You cannot change SWD option permanently
1 = You can change SWD option
NOTE: 0 = user cannot change RSVD0 ~ CMLock Option in PROTCON(Lock)</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD1</name>
              <description>Reserved bits</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SWDMon</name>
              <description>0 = SWD Disable
1 = SWD Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD0</name>
              <description>Reserved bits</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DCYCRDCON</name>
          <description>Double Cycle Read Control Register</description>
          <addressOffset>0x020</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000004</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>Reserved bits</description>
              <bitRange>[31:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Bank1_DWAIT</name>
              <description>NOR flash bank1 data read wait cycle 
0000 ~ 1111: 0~15 wait
others: Forbidden
NOTE 
1) Cache mode supports only more than 2 wait. (Even if code wait is set to 0 or 1 wait, flash access cycle time always takes 3 cycles for cache miss.) </description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Bank0_DWAIT</name>
              <description>NOR flash bank0 data read wait cycle 
0000 ~ 1111: 0 ~ 15 wait
others: Forbidden
NOTE 
1) Cache mode supports only more than 2 wait. (Even if code wait is set to 0 or 1 wait, Flash access cycle time always takes 3 cycles for cache miss.) 
</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Bank1_CWAIT</name>
              <description>NOR flash bank1 code read wait cycle 
0000 ~ 1111: 0~15 wait
others: Forbidden
NOTE 
1) Cache mode supports only more than 2 wait. (Even if code wait is set to 0 or 1 wait, flash access cycle time always takes 3 cycles for cache miss.)
2) Cache off mode support only 0 ~ 1 wait operation
</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Bank0_CWAIT</name>
              <description>NOR flash bank0 code read wait cycle 
0000 ~ 1111: 0 ~ 15 wait
others: Forbidden
NOTE 
1) Cache mode supports only more than 2 wait. (Even if code wait is set to 0 or 1 wait, flash access cycle time always takes 3 cycles for cache miss.)
2) Cache off mode support only 0~1 wait operation.
</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CAC_FLUSH</name>
              <description>NOR flash cache flush bit
0 = Remain cache
1 = Cache flush</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CAC_Miss_En</name>
              <description>NOR flash cache miss enable bit 
0 = Cache miss disable 
1 = Cache miss enable
</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CAC_EN</name>
              <description>NOR flash cache enable bit 
0 = Cache disable 
1 = Cache enable
</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TwoXPREFEN</name>
              <description>NOR flash 2X Prefetch control bit 
0 = Prefetch disable 
1 = Prefetch enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <!--DMAC-->
    <peripheral>
      <name>DMAC</name>
      <version>1.0</version>
      <description>Direct Memory Access Controller Common</description>
      <baseAddress>0x40002000</baseAddress>
      <size>32</size>
      <access>read-write</access>
      <addressBlock>
        <offset>0</offset>
        <size>0x1F4</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>DMA0</name>
        <description>This interrupt occurs upon the completion of DMA operation or error</description>
        <value>18</value>
      </interrupt>
      <interrupt>
        <name>DMA1</name>
        <description>This interrupt occurs upon the completion of DMA operation or error</description>
        <value>19</value>
      </interrupt>
      <interrupt>
        <name>DMA2</name>
        <description>This interrupt occurs upon the completion of DMA operation or error</description>
        <value>20</value>
      </interrupt>
      <interrupt>
        <name>DMA3</name>
        <description>This interrupt occurs upon the completion of DMA operation or error</description>
        <value>21</value>
      </interrupt>
      <interrupt>
        <name>DMA4</name>
        <description>This interrupt occurs upon the completion of DMA operation or error</description>
        <value>22</value>
      </interrupt>
      <interrupt>
        <name>DMA5</name>
        <description>This interrupt occurs upon the completion of DMA operation or error</description>
        <value>23</value>
      </interrupt>
      <interrupt>
        <name>DMA6</name>
        <description>This interrupt occurs upon the completion of DMA operation or error</description>
        <value>24</value>
      </interrupt>
      <interrupt>
        <name>DMA7</name>
        <description>This interrupt occurs upon the completion of DMA operation or error</description>
        <value>25</value>
      </interrupt>
      <registers>
        <register>
          <name>ISR</name>
          <description>DMA Interrupt Status Register</description>
          <addressOffset>0x000</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>Reserved bits. Read undefined</description>
              <bitRange>[31:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>Status</name>
              <description>Status of the DMA interrupts for each channels after masking. 
              (eg. Bit0 indicates the status of channel 0)</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCISR</name>
          <description>DMA Interrupt Terminal Count Status Register</description>
          <addressOffset>0x004</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>Reserved bits. Read undefined</description>
              <bitRange>[31:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>Status</name>
              <description>Interrupt terminal count request status.
              (eg. Bit0 indicates the status of channel 0)
              </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCICR</name>
          <description>DMA Interrupt Terminal Count Clear Register</description>
          <addressOffset>0x008</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>Reserved bits. Write as zero</description>
              <bitRange>[31:8]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>Clear</name>
              <description>Terminal count request clear.
              For each bits, (eg. Bit0 indicates channel 0) 
              0 = no effect
              1 = clear
              </description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EISR</name>
          <description>DMA Interrupt Error Status Register</description>
          <addressOffset>0x00C</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>Reserved bits. Read undefined</description>
              <bitRange>[31:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>IntErrorStatus</name>
              <description>Interrupt error status. (eg. Bit0 indicates channel 0)</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EICR</name>
          <description>DMA Interrupt Error Clear Register</description>
          <addressOffset>0x010</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>Reserved bits. Write as zero.</description>
              <bitRange>[31:8]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>Clear</name>
              <description>Interrupt error clear
              For each bits, (eg. Bit0 indicates channel 0) 
              0 = no effect
              1 = clear
              </description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCRISR</name>
          <description>DMA Raw Interrupt Terminal Count Status Register</description>
          <addressOffset>0x014</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>Reserved bits. Read undefined</description>
              <bitRange>[31:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>Status</name>
              <description>Status of the terminal count interrupt prior to masking (eg. Bit0 indicates channel 0)</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ERISR</name>
          <description>DMA Raw Error Interrupt Status Register</description>
          <addressOffset>0x018</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>Reserved bits. Read undefined</description>
              <bitRange>[31:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>Status</name>
              <description>Status of the error interrupt prior to masking. (eg. Bit0 indicates channel 0)</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ECR</name>
          <description>DMA Enabled Channel Register</description>
          <addressOffset>0x01C</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>Reserved bits. Read undefined</description>
              <bitRange>[31:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>Enable</name>
              <description>Channel enable status (eg. Bit0 indicates channel 0)</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SWBRR</name>
          <description>DMA Software Burst Request Register</description>
          <addressOffset>0x020</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>Reserved bits. Read undefined. Write as zero</description>
              <bitRange>[31:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>Request</name>
              <description>
              Software burst request (a DMA request for each source by writing a 1 to the corresponding register bit)
              </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SWSRR</name>
          <description>DMA Software Single Request Register</description>
          <addressOffset>0x024</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>Reserved bits. Read undefined. Write as zero.</description>
              <bitRange>[31:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>Request</name>
              <description>Software single request</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CFR</name>
          <description>DMA Configuration Register</description>
          <addressOffset>0x030</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[31:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>M2Endian</name>
              <description>
              AHB Master 2 endianness configuration:
              0 = little-endian mode
              1 = big-endian mode.
              This bit should be 0.
              </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>M1Endian</name>
              <description>
              AHB Master 1 endianness configuration:
              0 = little-endian mode
              1 = big-endian mode.
              This bit should be 0.
              </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DMACEn</name>
              <description>DMAC enable:
              0 = disabled
              1 = enabled.
              This bit is reset to 0. Disabling the DMAC reduces power consumption.
              </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SYR</name>
          <description>DMA Synchronization Register</description>
          <addressOffset>0x034</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>Reserved bits. Read undefined. Write as zero.</description>
              <bitRange>[31:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>Sync</name>
              <description>
              DMA synchronization logic for DMA request signals enabled or disabled.
              A LOW bit indicates that the synchronization logic for the request signals is enabled. A HIGH bit indicates that the synchronization logic is disabled.
              bit set 0 = enable the synchronization logic 
              bit set 1 = disable the synchronization logic
              </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <cluster>
          <name>CH0</name>
          <description>CH0 Register</description>
          <addressOffset>0x0000100</addressOffset>
          <register>
            <name>CHnSAR</name>
            <description>DMA Channel n Source Address Registers </description>
            <addressOffset>0x000</addressOffset>
            <size>32</size>
            <access>read-write</access>
            <resetValue>0x00000000</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>Addr</name>
                <description>           DMA source address</description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>CHnDAR</name>
            <description>DMA Channel n Destination Address Registers</description>
            <addressOffset>0x004</addressOffset>
            <size>32</size>
            <access>read-write</access>
            <resetValue>0x00000000</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>Addr</name>
                <description>DMA destination address</description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>CHnLLIR</name>
            <description>DMA Channel n Linked List Item Registers</description>
            <addressOffset>0x008</addressOffset>
            <size>32</size>
            <access>read-write</access>
            <resetValue>0x00000000</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>LLIAddr</name>
                <description>Linked list item. Bits [31:2] of the address for the next LLI ([1:0] are 0).</description>
                <bitRange>[31:2]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>RSVD</name>
                <description>Reserved bits. Read undefined. Write as zero</description>
                <bitRange>[1:1]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>LLIM</name>
                <description>AHB master select for loading the next LLILM = 0 = AHB Master 1 LM = 1 = AHB Master 2. </description>
                <bitRange>[0:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>CHnCTR</name>
            <description>DMA Channel n Control Registers</description>
            <addressOffset>0x00C</addressOffset>
            <size>32</size>
            <access>read-write</access>
            <resetValue>0x00000000</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>TCIntEn</name>
                <description>Terminal count interrupt enable bit. It controls whether the current LLI is expected to trigger the terminal count interrupt </description>
                <bitRange>[31:31]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>AccInfo</name>
                <description>Protection and access information
              [30] indicate whether or not the access can be cached
              0 = non-cacheable
              1 = cacheable
              [29] indicate whether or not the access can be buffered 
              0 = non-bufferable
              1=bufferable
              [28] indicate whether the access is in User, or Privileged mode 
              0 = user mode
              1 = privileged mode
              </description>
                <bitRange>[30:28]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>DstInc</name>
                <description>Destination increment. 
              When set, the destination address is incremented after each transfer.
              </description>
                <bitRange>[27:27]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>SrcInc</name>
                <description>Source increment. When set, the source address is incremented after each transfer.
              </description>
                <bitRange>[26:26]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>DstMaster</name>
                <description>
              Destination AHB master select: 
              0 = AHB master 1 selected for the destination transfer
              1 = AHB master 2 selected for the destination transfer.
              </description>
                <bitRange>[25:25]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>SrcMaster</name>
                <description>Source AHB master select:
              0 = AHB master 1 selected for the source transfer
              1 = AHB master 2 selected for the source transfer.
              </description>
                <bitRange>[24:24]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>DstTranWidth</name>
                <description>Destination transfer width. The source and destination widths can be different from each other. The hardware automatically packs and unpacks the data when required.
              3'b000: Byte (8-bit)
              3'b001: Half word (16-bit)
              3'b010: Word (32-bit)
              Others: Reserved
              </description>
                <bitRange>[23:21]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>SrcTranWidth</name>
                <description>Source transfer width.
              The source and destination widths can be different from each other. The hardware automatically packs and unpacks the data when required.
              3'b000: Byte (8-bit)
              3'b001: Half word (16-bit)
              3'b010: Word (32-bit)
              Others: Reserved
              </description>
                <bitRange>[20:18]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>DstBurstSz</name>
                <description>Destination burst size.
              Indicates the number of transfers that make up a destination burst transfer request. 
              You must set this value to the burst size of the destination peripheral, or if the destination is memory, to the memory boundary size. 
              The burst size is the amount of data that is transferred when the burst request signal goes active in the destination peripheral. 
              3'b000: 1
              3'b001: 4
              3'b010: 8
              3'b011: 16
              3'b100: 32
              3'b101: 64
              3'b110: 128
              3'b111: 256
              </description>
                <bitRange>[17:15]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>SrcBurstSz</name>
                <description>Source burst size.
              Indicates the number of transfers that make up a source burst. 
              You must set this value to the burst size of the source peripheral, or if the source is memory, to the memory boundary size. 
              The burst size is the amount of data that is transferred when the burst request signal goes active in the source peripheral.
              3'b000: 1
              3'b001: 4
              3'b010: 8
              3'b011: 16
              3'b100: 32
              3'b101: 64
              3'b110: 128
              3'b111: 256
              </description>
                <bitRange>[14:12]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TransSz</name>
                <description>RW	Transfer size. 
              A write to this field sets the size of the transfer when the DMAC is the flow controller.
              This value counts down from the original value to zero, and so its value indicates the number of transfers left to complete. A read from this field provides the number of transfers still to be completed on the destination bus. Reading the register when the channel is active does not give useful information because by the time the software has processed the value read, the channel might have progressed. Only use it when a channel is enabled, and then disabled.
              The ARM PrimeCell DMA Controller (PL080) Design Manual provides more information about the use of this field.
              Program the transfer size value to zero if the DMAC is not the flow controller. If you program the TransferSize to a non-zero value, the DMAC might attempt to use this value instead of ignoring the TransferSize.
              </description>
                <bitRange>[11:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>CHnCFR</name>
            <description>DMA Channel n Configuration Registers</description>
            <addressOffset>0x010</addressOffset>
            <size>32</size>
            <access>read-write</access>
            <resetValue>0x00000000</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>RSVD</name>
                <description>Reserved bits. Read undefined. Write as zero.</description>
                <bitRange>[31:19]</bitRange>
                <access>read-only</access>
              </field>
              <field>
                <name>Halt</name>
                <description>Halt:
              0 = enable DMA requests
              1 = ignore extra source DMA requests.
              The contents of the channels FIFO are drained.
              You can use this value with the Active and Channel Enable bits to cleanly disable a DMA channel.
              </description>
                <bitRange>[18:18]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>Active</name>
                <description>Active:
              0 = there is no data in the FIFO of the channel
              1 = the FIFO of the channel has data.
              You can use this value with the Halt and Channel Enable bits to cleanly disable a DMA channel.
              </description>
                <bitRange>[17:17]</bitRange>
                <access>read-only</access>
              </field>
              <field>
                <name>Lock</name>
                <description>
              Lock.
              When set, this bit enables locked transfers.
              </description>
                <bitRange>[16:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TCIntMsk</name>
                <description>
              Terminal count interrupt mask. 
              When cleared, this bit masks out the terminal count interrupt of the relevant channel.
              </description>
                <bitRange>[15:15]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>IntErrMsk</name>
                <description>
              Interrupt error mask. 
              When cleared, this bit masks out the error interrupt of the relevant channel.
              </description>
                <bitRange>[14:14]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>FlowCtr</name>
                <description>
              Flow control and transfer type. 
              3'b000: memory-to-memory by DMA
              3'b001: memory-to-peripheral by DMA
              3'b010: peripheral-to-memory by DMA
              3'b011: source periphera to destination peripheral by DMA
              3'b100: source peripheral to destination peripheral by destination peripheral
              3'b101: memory-to-peripheral by peripheral
              3'b110: peripheral-to-memory by peripheral
              3'b100: source peripheralto destination peripheral by source peripheral
              </description>
                <bitRange>[13:11]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>RSVD1</name>
                <description>Reserved bits. Read undefined. Write as zero.</description>
                <bitRange>[10:10]</bitRange>
                <access>read-only</access>
              </field>
              <field>
                <name>DstPeri</name>
                <description>
              Destination peripheral. This value selects the DMA destination request peripheral. 
              This field is ignored if the destination of the transfer is to memory.
              </description>
                <bitRange>[9:6]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>RSVD0</name>
                <description>Reserved bits. Read undefined. Write as zero.</description>
                <bitRange>[5:5]</bitRange>
                <access>read-only</access>
              </field>
              <field>
                <name>SrcPeri</name>
                <description>Source peripheral. This value selects the DMA source request peripheral. This field is ignored if the source of the transfer is from</description>
                <bitRange>[4:1]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>ChEnable</name>
                <description>Channel enable. Reading this bit indicates whether a channel is currently enabled or disabled:
              0 = channel disabled
              1 = channel enabled.
              </description>
                <bitRange>[0:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
        </cluster>
        <cluster>
          <name>CH1</name>
          <description>CH1 Register</description>
          <addressOffset>0x00000120</addressOffset>
          <register>
            <name>CHnSAR</name>
            <description>DMA Channel n Source Address Registers </description>
            <addressOffset>0x000</addressOffset>
            <size>32</size>
            <access>read-write</access>
            <resetValue>0x00000000</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>Addr</name>
                <description>           DMA source address</description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>CHnDAR</name>
            <description>DMA Channel n Destination Address Registers</description>
            <addressOffset>0x004</addressOffset>
            <size>32</size>
            <access>read-write</access>
            <resetValue>0x00000000</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>Addr</name>
                <description>DMA destination address</description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>CHnLLIR</name>
            <description>DMA Channel n Linked List Item Registers</description>
            <addressOffset>0x008</addressOffset>
            <size>32</size>
            <access>read-write</access>
            <resetValue>0x00000000</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>LLIAddr</name>
                <description>Linked list item. Bits [31:2] of the address for the next LLI ([1:0] are 0).</description>
                <bitRange>[31:2]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>RSVD</name>
                <description>Reserved bits. Read undefined. Write as zero</description>
                <bitRange>[1:1]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>LLIM</name>
                <description>AHB master select for loading the next LLILM = 0 = AHB Master 1 LM = 1 = AHB Master 2. </description>
                <bitRange>[0:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>CHnCTR</name>
            <description>DMA Channel n Control Registers</description>
            <addressOffset>0x00C</addressOffset>
            <size>32</size>
            <access>read-write</access>
            <resetValue>0x00000000</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>TCIntEn</name>
                <description>Terminal count interrupt enable bit. It controls whether the current LLI is expected to trigger the terminal count interrupt </description>
                <bitRange>[31:31]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>AccInfo</name>
                <description>Protection and access information
              [30] indicate whether or not the access can be cached
              0 = non-cacheable
              1 = cacheable
              [29] indicate whether or not the access can be buffered 
              0 = non-bufferable
              1=bufferable
              [28] indicate whether the access is in User, or Privileged mode 
              0 = user mode
              1 = privileged mode
              </description>
                <bitRange>[30:28]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>DstInc</name>
                <description>Destination increment. 
              When set, the destination address is incremented after each transfer.
              </description>
                <bitRange>[27:27]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>SrcInc</name>
                <description>Source increment. When set, the source address is incremented after each transfer.
              </description>
                <bitRange>[26:26]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>DstMaster</name>
                <description>
              Destination AHB master select: 
              0 = AHB master 1 selected for the destination transfer
              1 = AHB master 2 selected for the destination transfer.
              </description>
                <bitRange>[25:25]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>SrcMaster</name>
                <description>Source AHB master select:
              0 = AHB master 1 selected for the source transfer
              1 = AHB master 2 selected for the source transfer.
              </description>
                <bitRange>[24:24]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>DstTranWidth</name>
                <description>Destination transfer width. The source and destination widths can be different from each other. The hardware automatically packs and unpacks the data when required.
              3'b000: Byte (8-bit)
              3'b001: Half word (16-bit)
              3'b010: Word (32-bit)
              Others: Reserved
              </description>
                <bitRange>[23:21]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>SrcTranWidth</name>
                <description>Source transfer width.
              The source and destination widths can be different from each other. The hardware automatically packs and unpacks the data when required.
              3'b000: Byte (8-bit)
              3'b001: Half word (16-bit)
              3'b010: Word (32-bit)
              Others: Reserved
              </description>
                <bitRange>[20:18]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>DstBurstSz</name>
                <description>Destination burst size.
              Indicates the number of transfers that make up a destination burst transfer request. 
              You must set this value to the burst size of the destination peripheral, or if the destination is memory, to the memory boundary size. 
              The burst size is the amount of data that is transferred when the burst request signal goes active in the destination peripheral. 
              3'b000: 1
              3'b001: 4
              3'b010: 8
              3'b011: 16
              3'b100: 32
              3'b101: 64
              3'b110: 128
              3'b111: 256
              </description>
                <bitRange>[17:15]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>SrcBurstSz</name>
                <description>Source burst size.
              Indicates the number of transfers that make up a source burst. 
              You must set this value to the burst size of the source peripheral, or if the source is memory, to the memory boundary size. 
              The burst size is the amount of data that is transferred when the burst request signal goes active in the source peripheral.
              3'b000: 1
              3'b001: 4
              3'b010: 8
              3'b011: 16
              3'b100: 32
              3'b101: 64
              3'b110: 128
              3'b111: 256
              </description>
                <bitRange>[14:12]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TransSz</name>
                <description>RW	Transfer size. 
              A write to this field sets the size of the transfer when the DMAC is the flow controller.
              This value counts down from the original value to zero, and so its value indicates the number of transfers left to complete. A read from this field provides the number of transfers still to be completed on the destination bus. Reading the register when the channel is active does not give useful information because by the time the software has processed the value read, the channel might have progressed. Only use it when a channel is enabled, and then disabled.
              The ARM PrimeCell DMA Controller (PL080) Design Manual provides more information about the use of this field.
              Program the transfer size value to zero if the DMAC is not the flow controller. If you program the TransferSize to a non-zero value, the DMAC might attempt to use this value instead of ignoring the TransferSize.
              </description>
                <bitRange>[11:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>CHnCFR</name>
            <description>DMA Channel n Configuration Registers</description>
            <addressOffset>0x010</addressOffset>
            <size>32</size>
            <access>read-write</access>
            <resetValue>0x00000000</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>RSVD2</name>
                <description>Reserved bits. Read undefined. Write as zero.</description>
                <bitRange>[31:19]</bitRange>
                <access>read-only</access>
              </field>
              <field>
                <name>Halt</name>
                <description>Halt:
              0 = enable DMA requests
              1 = ignore extra source DMA requests.
              The contents of the channels FIFO are drained.
              You can use this value with the Active and Channel Enable bits to cleanly disable a DMA channel.
              </description>
                <bitRange>[18:18]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>Active</name>
                <description>Active:
              0 = there is no data in the FIFO of the channel
              1 = the FIFO of the channel has data.
              You can use this value with the Halt and Channel Enable bits to cleanly disable a DMA channel.
              </description>
                <bitRange>[17:17]</bitRange>
                <access>read-only</access>
              </field>
              <field>
                <name>Lock</name>
                <description>
              Lock.
              When set, this bit enables locked transfers.
              </description>
                <bitRange>[16:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TCIntMsk</name>
                <description>
              Terminal count interrupt mask. 
              When cleared, this bit masks out the terminal count interrupt of the relevant channel.
              </description>
                <bitRange>[15:15]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>IntErrMsk</name>
                <description>
              Interrupt error mask. 
              When cleared, this bit masks out the error interrupt of the relevant channel.
              </description>
                <bitRange>[14:14]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>FlowCtr</name>
                <description>
              Flow control and transfer type. 
              3'b000: memory-to-memory by DMA
              3'b001: memory-to-peripheral by DMA
              3'b010: peripheral-to-memory by DMA
              3'b011: source peripheral to destination peripheral by DMA
              3'b100: source peripheral to destination peripheral by destination peripheral
              3'b101: memory-to-peripheral by peripheral
              3'b110: peripheral-to-memory by peripheral
              3'b100: source peripheral to destination peripheral by source peripheral
              </description>
                <bitRange>[13:11]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>RSVD1</name>
                <description>Reserved bits. Read undefined. Write as zero.</description>
                <bitRange>[10:10]</bitRange>
                <access>read-only</access>
              </field>
              <field>
                <name>DstPeri</name>
                <description>
              Destination peripheral. This value selects the DMA destination request peripheral. 
              This field is ignored if the destination of the transfer is to memory.
              </description>
                <bitRange>[9:6]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>RSVD0</name>
                <description>Reserved bits. Read undefined. Write as zero.</description>
                <bitRange>[5:5]</bitRange>
                <access>read-only</access>
              </field>
              <field>
                <name>SrcPeri</name>
                <description>Source peripheral. This value selects the DMA source request peripheral. This field is ignored if the source of the transfer is from</description>
                <bitRange>[4:1]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>ChEnable</name>
                <description>Channel enable. Reading this bit indicates whether a channel is currently enabled or disabled:
              0 = channel disabled
              1 = channel enabled.
              </description>
                <bitRange>[0:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
        </cluster>
        <cluster>
          <name>CH2</name>
          <description>CH2 Register</description>
          <addressOffset>0x00000140</addressOffset>
          <register>
            <name>CHnSAR</name>
            <description>DMA Channel n Source Address Registers </description>
            <addressOffset>0x000</addressOffset>
            <size>32</size>
            <access>read-write</access>
            <resetValue>0x00000000</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>Addr</name>
                <description>           DMA source address</description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>CHnDAR</name>
            <description>DMA Channel n Destination Address Registers</description>
            <addressOffset>0x004</addressOffset>
            <size>32</size>
            <access>read-write</access>
            <resetValue>0x00000000</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>Addr</name>
                <description>DMA destination address</description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>CHnLLIR</name>
            <description>DMA Channel n Linked List Item Registers</description>
            <addressOffset>0x008</addressOffset>
            <size>32</size>
            <access>read-write</access>
            <resetValue>0x00000000</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>LLIAddr</name>
                <description>Linked list item. Bits [31:2] of the address for the next LLI ([1:0] are 0).</description>
                <bitRange>[31:2]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>RSVD</name>
                <description>Reserved bits. Read undefined. Write as zero</description>
                <bitRange>[1:1]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>LLIM</name>
                <description>AHB master select for loading the next LLILM = 0 = AHB Master 1 LM = 1 = AHB Master 2. </description>
                <bitRange>[0:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>CHnCTR</name>
            <description>DMA Channel n Control Registers</description>
            <addressOffset>0x00C</addressOffset>
            <size>32</size>
            <access>read-write</access>
            <resetValue>0x00000000</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>TCIntEn</name>
                <description>Terminal count interrupt enable bit. It controls whether the current LLI is expected to trigger the terminal count interrupt </description>
                <bitRange>[31:31]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>AccInfo</name>
                <description>Protection and access information
              [30] indicate whether or not the access can be cached
              0 = non-cacheable
              1 = cacheable
              [29] indicate whether or not the access can be buffered 
              0 = non-bufferable
              1=bufferable
              [28] indicate whether the access is in User, or Privileged mode 
              0 = user mode
              1 = privileged mode
              </description>
                <bitRange>[30:28]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>DstInc</name>
                <description>Destination increment. 
              When set, the destination address is incremented after each transfer.
              </description>
                <bitRange>[27:27]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>SrcInc</name>
                <description>Source increment. When set, the source address is incremented after each transfer.
              </description>
                <bitRange>[26:26]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>DstMaster</name>
                <description>
              Destination AHB master select: 
              0 = AHB master 1 selected for the destination transfer
              1 = AHB master 2 selected for the destination transfer.
              </description>
                <bitRange>[25:25]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>SrcMaster</name>
                <description>Source AHB master select:
              0 = AHB master 1 selected for the source transfer
              1 = AHB master 2 selected for the source transfer.
              </description>
                <bitRange>[24:24]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>DstTranWidth</name>
                <description>Destination transfer width. The source and destination widths can be different from each other. The hardware automatically packs and unpacks the data when required.
              3'b000: Byte (8-bit)
              3'b001: Half word (16-bit)
              3'b010: Word (32-bit)
              Others: Reserved
              </description>
                <bitRange>[23:21]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>SrcTranWidth</name>
                <description>Source transfer width.
              The source and destination widths can be different from each other. The hardware automatically packs and unpacks the data when required.
              3'b000: Byte (8-bit)
              3'b001: Half word (16-bit)
              3'b010: Word (32-bit)
              Others: Reserved
              </description>
                <bitRange>[20:18]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>DstBurstSz</name>
                <description>Destination burst size.
              Indicates the number of transfers that make up a destination burst transfer request. 
              You must set this value to the burst size of the destination peripheral, or if the destination is memory, to the memory boundary size. 
              The burst size is the amount of data that is transferred when the burst request signal goes active in the destination peripheral. 
              3'b000: 1
              3'b001: 4
              3'b010: 8
              3'b011: 16
              3'b100: 32
              3'b101: 64
              3'b110: 128
              3'b111: 256
              </description>
                <bitRange>[17:15]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>SrcBurstSz</name>
                <description>Source burst size.
              Indicates the number of transfers that make up a source burst. 
              You must set this value to the burst size of the source peripheral, or if the source is memory, to the memory boundary size. 
              The burst size is the amount of data that is transferred when the burst request signal goes active in the source peripheral.
              3'b000: 1
              3'b001: 4
              3'b010: 8
              3'b011: 16
              3'b100: 32
              3'b101: 64
              3'b110: 128
              3'b111: 256
              </description>
                <bitRange>[14:12]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TransSz</name>
                <description>RW	Transfer size. 
              A write to this field sets the size of the transfer when the DMAC is the flow controller.
              This value counts down from the original value to zero, and so its value indicates the number of transfers left to complete. A read from this field provides the number of transfers still to be completed on the destination bus. Reading the register when the channel is active does not give useful information because by the time the software has processed the value read, the channel might have progressed. Only use it when a channel is enabled, and then disabled.
              The ARM PrimeCell DMA Controller (PL080) Design Manual provides more information about the use of this field.
              Program the transfer size value to zero if the DMAC is not the flow controller. If you program the TransferSize to a non-zero value, the DMAC might attempt to use this value instead of ignoring the TransferSize.
              </description>
                <bitRange>[11:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>CHnCFR</name>
            <description>DMA Channel n Configuration Registers</description>
            <addressOffset>0x010</addressOffset>
            <size>32</size>
            <access>read-write</access>
            <resetValue>0x00000000</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>RSVD2</name>
                <description>Reserved bits. Read undefined. Write as zero.</description>
                <bitRange>[31:19]</bitRange>
                <access>read-only</access>
              </field>
              <field>
                <name>Halt</name>
                <description>Halt:
              0 = enable DMA requests
              1 = ignore extra source DMA requests.
              The contents of the channels FIFO are drained.
              You can use this value with the Active and Channel Enable bits to cleanly disable a DMA channel.
              </description>
                <bitRange>[18:18]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>Active</name>
                <description>Active:
              0 = there is no data in the FIFO of the channel
              1 = the FIFO of the channel has data.
              You can use this value with the Halt and Channel Enable bits to cleanly disable a DMA channel.
              </description>
                <bitRange>[17:17]</bitRange>
                <access>read-only</access>
              </field>
              <field>
                <name>Lock</name>
                <description>
              Lock.
              When set, this bit enables locked transfers.
              </description>
                <bitRange>[16:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TCIntMsk</name>
                <description>
              Terminal count interrupt mask. 
              When cleared, this bit masks out the terminal count interrupt of the relevant channel.
              </description>
                <bitRange>[15:15]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>IntErrMsk</name>
                <description>
              Interrupt error mask. 
              When cleared, this bit masks out the error interrupt of the relevant channel.
              </description>
                <bitRange>[14:14]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>FlowCtr</name>
                <description>
              Flow control and transfer type. 
              3'b000: memory-to-memory by DMA
              3'b001: memory-to-peripheral by DMA
              3'b010: peripheral-to-memory by DMA
              3'b011: source peripheral to destination peripheral by DMA
              3'b100: source peripheral to destination peripheral by destination peripheral
              3'b101: memory-to-peripheral by peripheral
              3'b110: peripheral-to-memory by peripheral
              3'b100: source peripheral to destination peripheral by source peripheral
              </description>
                <bitRange>[13:11]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>RSVD1</name>
                <description>Reserved bits. Read undefined. Write as zero.</description>
                <bitRange>[10:10]</bitRange>
                <access>read-only</access>
              </field>
              <field>
                <name>DstPeri</name>
                <description>
              Destination peripheral. This value selects the DMA destination request peripheral. 
              This field is ignored if the destination of the transfer is to memory.
              </description>
                <bitRange>[9:6]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>RSVD0</name>
                <description>Reserved bits. Read undefined. Write as zero.</description>
                <bitRange>[5:5]</bitRange>
                <access>read-only</access>
              </field>
              <field>
                <name>SrcPeri</name>
                <description>Source peripheral. This value selects the DMA source request peripheral. This field is ignored if the source of the transfer is from</description>
                <bitRange>[4:1]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>ChEnable</name>
                <description>Channel enable. Reading this bit indicates whether a channel is currently enabled or disabled:
              0 = channel disabled
              1 = channel enabled.
              </description>
                <bitRange>[0:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
        </cluster>
        <cluster>
          <name>CH3</name>
          <description>CH3 Register</description>
          <addressOffset>0x00000160</addressOffset>
          <register>
            <name>CHnSAR</name>
            <description>DMA Channel n Source Address Registers </description>
            <addressOffset>0x000</addressOffset>
            <size>32</size>
            <access>read-write</access>
            <resetValue>0x00000000</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>Addr</name>
                <description>           DMA source address</description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>CHnDAR</name>
            <description>DMA Channel n Destination Address Registers</description>
            <addressOffset>0x004</addressOffset>
            <size>32</size>
            <access>read-write</access>
            <resetValue>0x00000000</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>Addr</name>
                <description>DMA destination address</description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>CHnLLIR</name>
            <description>DMA Channel n Linked List Item Registers</description>
            <addressOffset>0x008</addressOffset>
            <size>32</size>
            <access>read-write</access>
            <resetValue>0x00000000</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>LLIAddr</name>
                <description>Linked list item. Bits [31:2] of the address for the next LLI ([1:0] are 0).</description>
                <bitRange>[31:2]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>RSVD</name>
                <description>Reserved bits. Read undefined. Write as zero</description>
                <bitRange>[1:1]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>LLIM</name>
                <description>AHB master select for loading the next LLILM = 0 = AHB Master 1 LM = 1 = AHB Master 2. </description>
                <bitRange>[0:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>CHnCTR</name>
            <description>DMA Channel n Control Registers</description>
            <addressOffset>0x00C</addressOffset>
            <size>32</size>
            <access>read-write</access>
            <resetValue>0x00000000</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>TCIntEn</name>
                <description>Terminal count interrupt enable bit. It controls whether the current LLI is expected to trigger the terminal count interrupt </description>
                <bitRange>[31:31]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>AccInfo</name>
                <description>Protection and access information
              [30] indicate whether or not the access can be cached
              0 = non-cacheable
              1 = cacheable
              [29] indicate whether or not the access can be buffered 
              0 = non-bufferable
              1=bufferable
              [28] indicate whether the access is in User, or Privileged mode 
              0 = user mode
              1 = privileged mode
              </description>
                <bitRange>[30:28]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>DstInc</name>
                <description>Destination increment. 
              When set, the destination address is incremented after each transfer.
              </description>
                <bitRange>[27:27]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>SrcInc</name>
                <description>Source increment. When set, the source address is incremented after each transfer.
              </description>
                <bitRange>[26:26]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>DstMaster</name>
                <description>
              Destination AHB master select: 
              0 = AHB master 1 selected for the destination transfer
              1 = AHB master 2 selected for the destination transfer.
              </description>
                <bitRange>[25:25]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>SrcMaster</name>
                <description>Source AHB master select:
              0 = AHB master 1 selected for the source transfer
              1 = AHB master 2 selected for the source transfer.
              </description>
                <bitRange>[24:24]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>DstTranWidth</name>
                <description>Destination transfer width. The source and destination widths can be different from each other. The hardware automatically packs and unpacks the data when required.
              3'b000: Byte (8-bit)
              3'b001: Half word (16-bit)
              3'b010: Word (32-bit)
              Others: Reserved
              </description>
                <bitRange>[23:21]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>SrcTranWidth</name>
                <description>Source transfer width.
              The source and destination widths can be different from each other. The hardware automatically packs and unpacks the data when required.
              3'b000: Byte (8-bit)
              3'b001: Half word (16-bit)
              3'b010: Word (32-bit)
              Others: Reserved
              </description>
                <bitRange>[20:18]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>DstBurstSz</name>
                <description>Destination burst size.
              Indicates the number of transfers that make up a destination burst transfer request. 
              You must set this value to the burst size of the destination peripheral, or if the destination is memory, to the memory boundary size. 
              The burst size is the amount of data that is transferred when the burst request signal goes active in the destination peripheral. 
              3'b000: 1
              3'b001: 4
              3'b010: 8
              3'b011: 16
              3'b100: 32
              3'b101: 64
              3'b110: 128
              3'b111: 256
              </description>
                <bitRange>[17:15]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>SrcBurstSz</name>
                <description>Source burst size.
              Indicates the number of transfers that make up a source burst. 
              You must set this value to the burst size of the source peripheral, or if the source is memory, to the memory boundary size. 
              The burst size is the amount of data that is transferred when the burst request signal goes active in the source peripheral.
              3'b000: 1
              3'b001: 4
              3'b010: 8
              3'b011: 16
              3'b100: 32
              3'b101: 64
              3'b110: 128
              3'b111: 256
              </description>
                <bitRange>[14:12]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TransSz</name>
                <description>RW	Transfer size. 
              A write to this field sets the size of the transfer when the DMAC is the flow controller.
              This value counts down from the original value to zero, and so its value indicates the number of transfers left to complete. A read from this field provides the number of transfers still to be completed on the destination bus. Reading the register when the channel is active does not give useful information because by the time the software has processed the value read, the channel might have progressed. Only use it when a channel is enabled, and then disabled.
              The ARM PrimeCell DMA Controller (PL080) Design Manual provides more information about the use of this field.
              Program the transfer size value to zero if the DMAC is not the flow controller. If you program the TransferSize to a non-zero value, the DMAC might attempt to use this value instead of ignoring the TransferSize.
              </description>
                <bitRange>[11:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>CHnCFR</name>
            <description>DMA Channel n Configuration Registers</description>
            <addressOffset>0x010</addressOffset>
            <size>32</size>
            <access>read-write</access>
            <resetValue>0x00000000</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>RSVD2</name>
                <description>Reserved bits. Read undefined. Write as zero.</description>
                <bitRange>[31:19]</bitRange>
                <access>read-only</access>
              </field>
              <field>
                <name>Halt</name>
                <description>Halt:
              0 = enable DMA requests
              1 = ignore extra source DMA requests.
              The contents of the channels FIFO are drained.
              You can use this value with the Active and Channel Enable bits to cleanly disable a DMA channel.
              </description>
                <bitRange>[18:18]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>Active</name>
                <description>Active:
              0 = there is no data in the FIFO of the channel
              1 = the FIFO of the channel has data.
              You can use this value with the Halt and Channel Enable bits to cleanly disable a DMA channel.
              </description>
                <bitRange>[17:17]</bitRange>
                <access>read-only</access>
              </field>
              <field>
                <name>Lock</name>
                <description>
              Lock.
              When set, this bit enables locked transfers.
              </description>
                <bitRange>[16:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TCIntMsk</name>
                <description>
              Terminal count interrupt mask. 
              When cleared, this bit masks out the terminal count interrupt of the relevant channel.
              </description>
                <bitRange>[15:15]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>IntErrMsk</name>
                <description>
              Interrupt error mask. 
              When cleared, this bit masks out the error interrupt of the relevant channel.
              </description>
                <bitRange>[14:14]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>FlowCtr</name>
                <description>
              Flow control and transfer type. 
              3'b000: memory-to-memory by DMA
              3'b001: memory-to-peripheral by DMA
              3'b010: peripheral-to-memory by DMA
              3'b011: source peripheral to destination peripheral by DMA
              3'b100: source peripheral to destination peripheral by destination peripheral
              3'b101: memory-to-peripheral by peripheral
              3'b110: peripheral-to-memory by peripheral
              3'b100: source peripheral to destination peripheral by source peripheral
              </description>
                <bitRange>[13:11]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>RSVD1</name>
                <description>Reserved bits. Read undefined. Write as zero.</description>
                <bitRange>[10:10]</bitRange>
                <access>read-only</access>
              </field>
              <field>
                <name>DstPeri</name>
                <description>
              Destination peripheral. This value selects the DMA destination request peripheral. 
              This field is ignored if the destination of the transfer is to memory.
              </description>
                <bitRange>[9:6]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>RSVD0</name>
                <description>Reserved bits. Read undefined. Write as zero.</description>
                <bitRange>[5:5]</bitRange>
                <access>read-only</access>
              </field>
              <field>
                <name>SrcPeri</name>
                <description>Source peripheral. This value selects the DMA source request peripheral. This field is ignored if the source of the transfer is from</description>
                <bitRange>[4:1]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>ChEnable</name>
                <description>Channel enable. Reading this bit indicates whether a channel is currently enabled or disabled:
              0 = channel disabled
              1 = channel enabled.
              </description>
                <bitRange>[0:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
        </cluster>
        <cluster>
          <name>CH4</name>
          <description>CH4 Register</description>
          <addressOffset>0x00000180</addressOffset>
          <register>
            <name>CHnSAR</name>
            <description>DMA Channel n Source Address Registers </description>
            <addressOffset>0x000</addressOffset>
            <size>32</size>
            <access>read-write</access>
            <resetValue>0x00000000</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>Addr</name>
                <description>           DMA source address</description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>CHnDAR</name>
            <description>DMA Channel n Destination Address Registers</description>
            <addressOffset>0x004</addressOffset>
            <size>32</size>
            <access>read-write</access>
            <resetValue>0x00000000</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>Addr</name>
                <description>DMA destination address</description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>CHnLLIR</name>
            <description>DMA Channel n Linked List Item Registers</description>
            <addressOffset>0x008</addressOffset>
            <size>32</size>
            <access>read-write</access>
            <resetValue>0x00000000</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>LLIAddr</name>
                <description>Linked list item. Bits [31:2] of the address for the next LLI ([1:0] are 0).</description>
                <bitRange>[31:2]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>RSVD</name>
                <description>Reserved bits. Read undefined. Write as zero</description>
                <bitRange>[1:1]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>LLIM</name>
                <description>AHB master select for loading the next LLILM = 0 = AHB Master 1 LM = 1 = AHB Master 2. </description>
                <bitRange>[0:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>CHnCTR</name>
            <description>DMA Channel n Control Registers</description>
            <addressOffset>0x00C</addressOffset>
            <size>32</size>
            <access>read-write</access>
            <resetValue>0x00000000</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>TCIntEn</name>
                <description>Terminal count interrupt enable bit. It controls whether the current LLI is expected to trigger the terminal count interrupt </description>
                <bitRange>[31:31]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>AccInfo</name>
                <description>Protection and access information
              [30] indicate whether or not the access can be cached
              0 = non-cacheable
              1 = cacheable
              [29] indicate whether or not the access can be buffered 
              0 = non-bufferable
              1=bufferable
              [28] indicate whether the access is in User, or Privileged mode 
              0 = user mode
              1 = privileged mode
              </description>
                <bitRange>[30:28]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>DstInc</name>
                <description>Destination increment. 
              When set, the destination address is incremented after each transfer.
              </description>
                <bitRange>[27:27]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>SrcInc</name>
                <description>Source increment. When set, the source address is incremented after each transfer.
              </description>
                <bitRange>[26:26]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>DstMaster</name>
                <description>
              Destination AHB master select: 
              0 = AHB master 1 selected for the destination transfer
              1 = AHB master 2 selected for the destination transfer.
              </description>
                <bitRange>[25:25]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>SrcMaster</name>
                <description>Source AHB master select:
              0 = AHB master 1 selected for the source transfer
              1 = AHB master 2 selected for the source transfer.
              </description>
                <bitRange>[24:24]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>DstTranWidth</name>
                <description>Destination transfer width. The source and destination widths can be different from each other. The hardware automatically packs and unpacks the data when required.
              3'b000: Byte (8-bit)
              3'b001: Half word (16-bit)
              3'b010: Word (32-bit)
              Others: Reserved
              </description>
                <bitRange>[23:21]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>SrcTranWidth</name>
                <description>Source transfer width.
              The source and destination widths can be different from each other. The hardware automatically packs and unpacks the data when required.
              3'b000: Byte (8-bit)
              3'b001: Half word (16-bit)
              3'b010: Word (32-bit)
              Others: Reserved
              </description>
                <bitRange>[20:18]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>DstBurstSz</name>
                <description>Destination burst size.
              Indicates the number of transfers that make up a destination burst transfer request. 
              You must set this value to the burst size of the destination peripheral, or if the destination is memory, to the memory boundary size. 
              The burst size is the amount of data that is transferred when the burst request signal goes active in the destination peripheral. 
              3'b000: 1
              3'b001: 4
              3'b010: 8
              3'b011: 16
              3'b100: 32
              3'b101: 64
              3'b110: 128
              3'b111: 256
              </description>
                <bitRange>[17:15]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>SrcBurstSz</name>
                <description>Source burst size.
              Indicates the number of transfers that make up a source burst. 
              You must set this value to the burst size of the source peripheral, or if the source is memory, to the memory boundary size. 
              The burst size is the amount of data that is transferred when the burst request signal goes active in the source peripheral.
              3'b000: 1
              3'b001: 4
              3'b010: 8
              3'b011: 16
              3'b100: 32
              3'b101: 64
              3'b110: 128
              3'b111: 256
              </description>
                <bitRange>[14:12]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TransSz</name>
                <description>RW	Transfer size. 
              A write to this field sets the size of the transfer when the DMAC is the flow controller.
              This value counts down from the original value to zero, and so its value indicates the number of transfers left to complete. A read from this field provides the number of transfers still to be completed on the destination bus. Reading the register when the channel is active does not give useful information because by the time the software has processed the value read, the channel might have progressed. Only use it when a channel is enabled, and then disabled.
              The ARM PrimeCell DMA Controller (PL080) Design Manual provides more information about the use of this field.
              Program the transfer size value to zero if the DMAC is not the flow controller. If you program the TransferSize to a non-zero value, the DMAC might attempt to use this value instead of ignoring the TransferSize.
              </description>
                <bitRange>[11:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>CHnCFR</name>
            <description>DMA Channel n Configuration Registers</description>
            <addressOffset>0x010</addressOffset>
            <size>32</size>
            <access>read-write</access>
            <resetValue>0x00000000</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>RSVD2</name>
                <description>Reserved bits. Read undefined. Write as zero.</description>
                <bitRange>[31:19]</bitRange>
                <access>read-only</access>
              </field>
              <field>
                <name>Halt</name>
                <description>Halt:
              0 = enable DMA requests
              1 = ignore extra source DMA requests.
              The contents of the channels FIFO are drained.
              You can use this value with the Active and Channel Enable bits to cleanly disable a DMA channel.
              </description>
                <bitRange>[18:18]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>Active</name>
                <description>Active:
              0 = there is no data in the FIFO of the channel
              1 = the FIFO of the channel has data.
              You can use this value with the Halt and Channel Enable bits to cleanly disable a DMA channel.
              </description>
                <bitRange>[17:17]</bitRange>
                <access>read-only</access>
              </field>
              <field>
                <name>Lock</name>
                <description>
              Lock.
              When set, this bit enables locked transfers.
              </description>
                <bitRange>[16:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TCIntMsk</name>
                <description>
              Terminal count interrupt mask. 
              When cleared, this bit masks out the terminal count interrupt of the relevant channel.
              </description>
                <bitRange>[15:15]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>IntErrMsk</name>
                <description>
              Interrupt error mask. 
              When cleared, this bit masks out the error interrupt of the relevant channel.
              </description>
                <bitRange>[14:14]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>FlowCtr</name>
                <description>
              Flow control and transfer type. 
              3'b000: memory-to-memory by DMA
              3'b001: memory-to-peripheral by DMA
              3'b010: peripheral-to-memory by DMA
              3'b011: source peripheral to destination peripheral by DMA
              3'b100: source peripheral to destination peripheral by destination peripheral
              3'b101: memory-to-peripheral by peripheral
              3'b110: peripheral-to-memory by peripheral
              3'b100: source peripheral to destination peripheral by source peripheral
              </description>
                <bitRange>[13:11]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>RSVD1</name>
                <description>Reserved bits. Read undefined. Write as zero.</description>
                <bitRange>[10:10]</bitRange>
                <access>read-only</access>
              </field>
              <field>
                <name>DstPeri</name>
                <description>
              Destination peripheral. This value selects the DMA destination request peripheral. 
              This field is ignored if the destination of the transfer is to memory.
              </description>
                <bitRange>[9:6]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>RSVD0</name>
                <description>Reserved bits. Read undefined. Write as zero.</description>
                <bitRange>[5:5]</bitRange>
                <access>read-only</access>
              </field>
              <field>
                <name>SrcPeri</name>
                <description>Source peripheral. This value selects the DMA source request peripheral. This field is ignored if the source of the transfer is from</description>
                <bitRange>[4:1]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>ChEnable</name>
                <description>Channel enable. Reading this bit indicates whether a channel is currently enabled or disabled:
              0 = channel disabled
              1 = channel enabled.
              </description>
                <bitRange>[0:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
        </cluster>
        <cluster>
          <name>CH5</name>
          <description>CH5 Register</description>
          <addressOffset>0x000001A0</addressOffset>
          <register>
            <name>CHnSAR</name>
            <description>DMA Channel n Source Address Registers </description>
            <addressOffset>0x000</addressOffset>
            <size>32</size>
            <access>read-write</access>
            <resetValue>0x00000000</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>Addr</name>
                <description>           DMA source address</description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>CHnDAR</name>
            <description>DMA Channel n Destination Address Registers</description>
            <addressOffset>0x004</addressOffset>
            <size>32</size>
            <access>read-write</access>
            <resetValue>0x00000000</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>Addr</name>
                <description>DMA destination address</description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>CHnLLIR</name>
            <description>DMA Channel n Linked List Item Registers</description>
            <addressOffset>0x008</addressOffset>
            <size>32</size>
            <access>read-write</access>
            <resetValue>0x00000000</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>LLIAddr</name>
                <description>Linked list item. Bits [31:2] of the address for the next LLI ([1:0] are 0).</description>
                <bitRange>[31:2]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>RSVD</name>
                <description>Reserved bits. Read undefined. Write as zero</description>
                <bitRange>[1:1]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>LLIM</name>
                <description>AHB master select for loading the next LLILM = 0 = AHB Master 1 LM = 1 = AHB Master 2. </description>
                <bitRange>[0:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>CHnCTR</name>
            <description>DMA Channel n Control Registers</description>
            <addressOffset>0x00C</addressOffset>
            <size>32</size>
            <access>read-write</access>
            <resetValue>0x00000000</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>TCIntEn</name>
                <description>Terminal count interrupt enable bit. It controls whether the current LLI is expected to trigger the terminal count interrupt </description>
                <bitRange>[31:31]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>AccInfo</name>
                <description>Protection and access information
              [30] indicate whether or not the access can be cached
              0 = non-cacheable
              1 = cacheable
              [29] indicate whether or not the access can be buffered 
              0 = non-bufferable
              1=bufferable
              [28] indicate whether the access is in User, or Privileged mode 
              0 = user mode
              1 = privileged mode
              </description>
                <bitRange>[30:28]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>DstInc</name>
                <description>Destination increment. 
              When set, the destination address is incremented after each transfer.
              </description>
                <bitRange>[27:27]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>SrcInc</name>
                <description>Source increment. When set, the source address is incremented after each transfer.
              </description>
                <bitRange>[26:26]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>DstMaster</name>
                <description>
              Destination AHB master select: 
              0 = AHB master 1 selected for the destination transfer
              1 = AHB master 2 selected for the destination transfer.
              </description>
                <bitRange>[25:25]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>SrcMaster</name>
                <description>Source AHB master select:
              0 = AHB master 1 selected for the source transfer
              1 = AHB master 2 selected for the source transfer.
              </description>
                <bitRange>[24:24]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>DstTranWidth</name>
                <description>Destination transfer width. The source and destination widths can be different from each other. The hardware automatically packs and unpacks the data when required.
              3'b000: Byte (8-bit)
              3'b001: Half word (16-bit)
              3'b010: Word (32-bit)
              Others: Reserved
              </description>
                <bitRange>[23:21]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>SrcTranWidth</name>
                <description>Source transfer width.
              The source and destination widths can be different from each other. The hardware automatically packs and unpacks the data when required.
              3'b000: Byte (8-bit)
              3'b001: Half word (16-bit)
              3'b010: Word (32-bit)
              Others: Reserved
              </description>
                <bitRange>[20:18]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>DstBurstSz</name>
                <description>Destination burst size.
              Indicates the number of transfers that make up a destination burst transfer request. 
              You must set this value to the burst size of the destination peripheral, or if the destination is memory, to the memory boundary size. 
              The burst size is the amount of data that is transferred when the burst request signal goes active in the destination peripheral. 
              3'b000: 1
              3'b001: 4
              3'b010: 8
              3'b011: 16
              3'b100: 32
              3'b101: 64
              3'b110: 128
              3'b111: 256
              </description>
                <bitRange>[17:15]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>SrcBurstSz</name>
                <description>Source burst size.
              Indicates the number of transfers that make up a source burst. 
              You must set this value to the burst size of the source peripheral, or if the source is memory, to the memory boundary size. 
              The burst size is the amount of data that is transferred when the burst request signal goes active in the source peripheral.
              3'b000: 1
              3'b001: 4
              3'b010: 8
              3'b011: 16
              3'b100: 32
              3'b101: 64
              3'b110: 128
              3'b111: 256
              </description>
                <bitRange>[14:12]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TransSz</name>
                <description>RW	Transfer size. 
              A write to this field sets the size of the transfer when the DMAC is the flow controller.
              This value counts down from the original value to zero, and so its value indicates the number of transfers left to complete. A read from this field provides the number of transfers still to be completed on the destination bus. Reading the register when the channel is active does not give useful information because by the time the software has processed the value read, the channel might have progressed. Only use it when a channel is enabled, and then disabled.
              The ARM PrimeCell DMA Controller (PL080) Design Manual provides more information about the use of this field.
              Program the transfer size value to zero if the DMAC is not the flow controller. If you program the TransferSize to a non-zero value, the DMAC might attempt to use this value instead of ignoring the TransferSize.
              </description>
                <bitRange>[11:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>CHnCFR</name>
            <description>DMA Channel n Configuration Registers</description>
            <addressOffset>0x010</addressOffset>
            <size>32</size>
            <access>read-write</access>
            <resetValue>0x00000000</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>RSVD2</name>
                <description>Reserved bits. Read undefined. Write as zero.</description>
                <bitRange>[31:19]</bitRange>
                <access>read-only</access>
              </field>
              <field>
                <name>Halt</name>
                <description>Halt:
              0 = enable DMA requests
              1 = ignore extra source DMA requests.
              The contents of the channels FIFO are drained.
              You can use this value with the Active and Channel Enable bits to cleanly disable a DMA channel.
              </description>
                <bitRange>[18:18]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>Active</name>
                <description>Active:
              0 = there is no data in the FIFO of the channel
              1 = the FIFO of the channel has data.
              You can use this value with the Halt and Channel Enable bits to cleanly disable a DMA channel.
              </description>
                <bitRange>[17:17]</bitRange>
                <access>read-only</access>
              </field>
              <field>
                <name>Lock</name>
                <description>
              Lock.
              When set, this bit enables locked transfers.
              </description>
                <bitRange>[16:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TCIntMsk</name>
                <description>
              Terminal count interrupt mask. 
              When cleared, this bit masks out the terminal count interrupt of the relevant channel.
              </description>
                <bitRange>[15:15]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>IntErrMsk</name>
                <description>
              Interrupt error mask. 
              When cleared, this bit masks out the error interrupt of the relevant channel.
              </description>
                <bitRange>[14:14]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>FlowCtr</name>
                <description>
              Flow control and transfer type. 
              3'b000: memory-to-memory by DMA
              3'b001: memory-to-peripheral by DMA
              3'b010: peripheral-to-memory by DMA
              3'b011: source peripheral to destination peripheral by DMA
              3'b100: source peripheral to destination peripheral by destination peripheral
              3'b101: memory-to-peripheral by peripheral
              3'b110: peripheral-to-memory by peripheral
              3'b100: source peripheral to destination peripheral by source peripheral
              </description>
                <bitRange>[13:11]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>RSVD1</name>
                <description>Reserved bits. Read undefined. Write as zero.</description>
                <bitRange>[10:10]</bitRange>
                <access>read-only</access>
              </field>
              <field>
                <name>DstPeri</name>
                <description>
              Destination peripheral. This value selects the DMA destination request peripheral. 
              This field is ignored if the destination of the transfer is to memory.
              </description>
                <bitRange>[9:6]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>RSVD0</name>
                <description>Reserved bits. Read undefined. Write as zero.</description>
                <bitRange>[5:5]</bitRange>
                <access>read-only</access>
              </field>
              <field>
                <name>SrcPeri</name>
                <description>Source peripheral. This value selects the DMA source request peripheral. This field is ignored if the source of the transfer is from</description>
                <bitRange>[4:1]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>ChEnable</name>
                <description>Channel enable. Reading this bit indicates whether a channel is currently enabled or disabled:
              0 = channel disabled
              1 = channel enabled.
              </description>
                <bitRange>[0:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
        </cluster>
        <cluster>
          <name>CH6</name>
          <description>CH6 Register</description>
          <addressOffset>0x000001C0</addressOffset>
          <register>
            <name>CHnSAR</name>
            <description>DMA Channel n Source Address Registers </description>
            <addressOffset>0x000</addressOffset>
            <size>32</size>
            <access>read-write</access>
            <resetValue>0x00000000</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>Addr</name>
                <description>           DMA source address</description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>CHnDAR</name>
            <description>DMA Channel n Destination Address Registers</description>
            <addressOffset>0x004</addressOffset>
            <size>32</size>
            <access>read-write</access>
            <resetValue>0x00000000</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>Addr</name>
                <description>DMA destination address</description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>CHnLLIR</name>
            <description>DMA Channel n Linked List Item Registers</description>
            <addressOffset>0x008</addressOffset>
            <size>32</size>
            <access>read-write</access>
            <resetValue>0x00000000</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>LLIAddr</name>
                <description>Linked list item. Bits [31:2] of the address for the next LLI ([1:0] are 0).</description>
                <bitRange>[31:2]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>RSVD</name>
                <description>Reserved bits. Read undefined. Write as zero</description>
                <bitRange>[1:1]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>LLIM</name>
                <description>AHB master select for loading the next LLILM = 0 = AHB Master 1 LM = 1 = AHB Master 2. </description>
                <bitRange>[0:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>CHnCTR</name>
            <description>DMA Channel n Control Registers</description>
            <addressOffset>0x00C</addressOffset>
            <size>32</size>
            <access>read-write</access>
            <resetValue>0x00000000</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>TCIntEn</name>
                <description>Terminal count interrupt enable bit. It controls whether the current LLI is expected to trigger the terminal count interrupt </description>
                <bitRange>[31:31]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>AccInfo</name>
                <description>Protection and access information
              [30] indicate whether or not the access can be cached
              0 = non-cacheable
              1 = cacheable
              [29] indicate whether or not the access can be buffered 
              0 = non-bufferable
              1=bufferable
              [28] indicate whether the access is in User, or Privileged mode 
              0 = user mode
              1 = privileged mode
              </description>
                <bitRange>[30:28]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>DstInc</name>
                <description>Destination increment. 
              When set, the destination address is incremented after each transfer.
              </description>
                <bitRange>[27:27]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>SrcInc</name>
                <description>Source increment. When set, the source address is incremented after each transfer.
              </description>
                <bitRange>[26:26]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>DstMaster</name>
                <description>
              Destination AHB master select: 
              0 = AHB master 1 selected for the destination transfer
              1 = AHB master 2 selected for the destination transfer.
              </description>
                <bitRange>[25:25]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>SrcMaster</name>
                <description>Source AHB master select:
              0 = AHB master 1 selected for the source transfer
              1 = AHB master 2 selected for the source transfer.
              </description>
                <bitRange>[24:24]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>DstTranWidth</name>
                <description>Destination transfer width. The source and destination widths can be different from each other. The hardware automatically packs and unpacks the data when required.
              3'b000: Byte (8-bit)
              3'b001: Half word (16-bit)
              3'b010: Word (32-bit)
              Others: Reserved
              </description>
                <bitRange>[23:21]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>SrcTranWidth</name>
                <description>Source transfer width.
              The source and destination widths can be different from each other. The hardware automatically packs and unpacks the data when required.
              3'b000: Byte (8-bit)
              3'b001: Half word (16-bit)
              3'b010: Word (32-bit)
              Others: Reserved
              </description>
                <bitRange>[20:18]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>DstBurstSz</name>
                <description>Destination burst size.
              Indicates the number of transfers that make up a destination burst transfer request. 
              You must set this value to the burst size of the destination peripheral, or if the destination is memory, to the memory boundary size. 
              The burst size is the amount of data that is transferred when the burst request signal goes active in the destination peripheral. 
              3'b000: 1
              3'b001: 4
              3'b010: 8
              3'b011: 16
              3'b100: 32
              3'b101: 64
              3'b110: 128
              3'b111: 256
              </description>
                <bitRange>[17:15]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>SrcBurstSz</name>
                <description>Source burst size.
              Indicates the number of transfers that make up a source burst. 
              You must set this value to the burst size of the source peripheral, or if the source is memory, to the memory boundary size. 
              The burst size is the amount of data that is transferred when the burst request signal goes active in the source peripheral.
              3'b000: 1
              3'b001: 4
              3'b010: 8
              3'b011: 16
              3'b100: 32
              3'b101: 64
              3'b110: 128
              3'b111: 256
              </description>
                <bitRange>[14:12]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TransSz</name>
                <description>RW	Transfer size. 
              A write to this field sets the size of the transfer when the DMAC is the flow controller.
              This value counts down from the original value to zero, and so its value indicates the number of transfers left to complete. A read from this field provides the number of transfers still to be completed on the destination bus. Reading the register when the channel is active does not give useful information because by the time the software has processed the value read, the channel might have progressed. Only use it when a channel is enabled, and then disabled.
              The ARM PrimeCell DMA Controller (PL080) Design Manual provides more information about the use of this field.
              Program the transfer size value to zero if the DMAC is not the flow controller. If you program the TransferSize to a non-zero value, the DMAC might attempt to use this value instead of ignoring the TransferSize.
              </description>
                <bitRange>[11:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>CHnCFR</name>
            <description>DMA Channel n Configuration Registers</description>
            <addressOffset>0x010</addressOffset>
            <size>32</size>
            <access>read-write</access>
            <resetValue>0x00000000</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>RSVD2</name>
                <description>Reserved bits. Read undefined. Write as zero.</description>
                <bitRange>[31:19]</bitRange>
                <access>read-only</access>
              </field>
              <field>
                <name>Halt</name>
                <description>Halt:
              0 = enable DMA requests
              1 = ignore extra source DMA requests.
              The contents of the channels FIFO are drained.
              You can use this value with the Active and Channel Enable bits to cleanly disable a DMA channel.
              </description>
                <bitRange>[18:18]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>Active</name>
                <description>Active:
              0 = there is no data in the FIFO of the channel
              1 = the FIFO of the channel has data.
              You can use this value with the Halt and Channel Enable bits to cleanly disable a DMA channel.
              </description>
                <bitRange>[17:17]</bitRange>
                <access>read-only</access>
              </field>
              <field>
                <name>Lock</name>
                <description>
              Lock.
              When set, this bit enables locked transfers.
              </description>
                <bitRange>[16:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TCIntMsk</name>
                <description>
              Terminal count interrupt mask. 
              When cleared, this bit masks out the terminal count interrupt of the relevant channel.
              </description>
                <bitRange>[15:15]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>IntErrMsk</name>
                <description>
              Interrupt error mask. 
              When cleared, this bit masks out the error interrupt of the relevant channel.
              </description>
                <bitRange>[14:14]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>FlowCtr</name>
                <description>
              Flow control and transfer type. 
              3'b000: memory-to-memory by DMA
              3'b001: memory-to-peripheral by DMA
              3'b010: peripheral-to-memory by DMA
              3'b011: source peripheral to destination peripheral by DMA
              3'b100: source peripheral to destination peripheral by destination peripheral
              3'b101: memory-to-peripheral by peripheral
              3'b110: peripheral-to-memory by peripheral
              3'b100: source peripheral to destination peripheral by source peripheral
              </description>
                <bitRange>[13:11]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>RSVD1</name>
                <description>Reserved bits. Read undefined. Write as zero.</description>
                <bitRange>[10:10]</bitRange>
                <access>read-only</access>
              </field>
              <field>
                <name>DstPeri</name>
                <description>
              Destination peripheral. This value selects the DMA destination request peripheral. 
              This field is ignored if the destination of the transfer is to memory.
              </description>
                <bitRange>[9:6]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>RSVD0</name>
                <description>Reserved bits. Read undefined. Write as zero.</description>
                <bitRange>[5:5]</bitRange>
                <access>read-only</access>
              </field>
              <field>
                <name>SrcPeri</name>
                <description>Source peripheral. This value selects the DMA source request peripheral. This field is ignored if the source of the transfer is from</description>
                <bitRange>[4:1]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>ChEnable</name>
                <description>Channel enable. Reading this bit indicates whether a channel is currently enabled or disabled:
              0 = channel disabled
              1 = channel enabled.
              </description>
                <bitRange>[0:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
        </cluster>
        <cluster>
          <name>CH7</name>
          <description>CH7 Register</description>
          <addressOffset>0x00001E0</addressOffset>
          <register>
            <name>CHnSAR</name>
            <description>DMA Channel n Source Address Registers </description>
            <addressOffset>0x000</addressOffset>
            <size>32</size>
            <access>read-write</access>
            <resetValue>0x00000000</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>Addr</name>
                <description>           DMA source address</description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>CHnDAR</name>
            <description>DMA Channel n Destination Address Registers</description>
            <addressOffset>0x004</addressOffset>
            <size>32</size>
            <access>read-write</access>
            <resetValue>0x00000000</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>Addr</name>
                <description>DMA destination address</description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>CHnLLIR</name>
            <description>DMA Channel n Linked List Item Registers</description>
            <addressOffset>0x008</addressOffset>
            <size>32</size>
            <access>read-write</access>
            <resetValue>0x00000000</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>LLIAddr</name>
                <description>Linked list item. Bits [31:2] of the address for the next LLI ([1:0] are 0).</description>
                <bitRange>[31:2]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>RSVD</name>
                <description>Reserved bits. Read undefined. Write as zero</description>
                <bitRange>[1:1]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>LLIM</name>
                <description>AHB master select for loading the next LLILM = 0 = AHB Master 1 LM = 1 = AHB Master 2. </description>
                <bitRange>[0:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>CHnCTR</name>
            <description>DMA Channel n Control Registers</description>
            <addressOffset>0x00C</addressOffset>
            <size>32</size>
            <access>read-write</access>
            <resetValue>0x00000000</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>TCIntEn</name>
                <description>Terminal count interrupt enable bit. It controls whether the current LLI is expected to trigger the terminal count interrupt </description>
                <bitRange>[31:31]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>AccInfo</name>
                <description>Protection and access information
              [30] indicate whether or not the access can be cached
              0 = non-cacheable
              1 = cacheable
              [29] indicate whether or not the access can be buffered 
              0 = non-bufferable
              1=bufferable
              [28] indicate whether the access is in User, or Privileged mode 
              0 = user mode
              1 = privileged mode
              </description>
                <bitRange>[30:28]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>DstInc</name>
                <description>Destination increment. 
              When set, the destination address is incremented after each transfer.
              </description>
                <bitRange>[27:27]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>SrcInc</name>
                <description>Source increment. When set, the source address is incremented after each transfer.
              </description>
                <bitRange>[26:26]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>DstMaster</name>
                <description>
              Destination AHB master select: 
              0 = AHB master 1 selected for the destination transfer
              1 = AHB master 2 selected for the destination transfer.
              </description>
                <bitRange>[25:25]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>SrcMaster</name>
                <description>Source AHB master select:
              0 = AHB master 1 selected for the source transfer
              1 = AHB master 2 selected for the source transfer.
              </description>
                <bitRange>[24:24]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>DstTranWidth</name>
                <description>Destination transfer width. The source and destination widths can be different from each other. The hardware automatically packs and unpacks the data when required.
              3'b000: Byte (8-bit)
              3'b001: Half word (16-bit)
              3'b010: Word (32-bit)
              Others: Reserved
              </description>
                <bitRange>[23:21]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>SrcTranWidth</name>
                <description>Source transfer width.
              The source and destination widths can be different from each other. The hardware automatically packs and unpacks the data when required.
              3'b000: Byte (8-bit)
              3'b001: Half word (16-bit)
              3'b010: Word (32-bit)
              Others: Reserved
              </description>
                <bitRange>[20:18]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>DstBurstSz</name>
                <description>Destination burst size.
              Indicates the number of transfers that make up a destination burst transfer request. 
              You must set this value to the burst size of the destination peripheral, or if the destination is memory, to the memory boundary size. 
              The burst size is the amount of data that is transferred when the burst request signal goes active in the destination peripheral. 
              3'b000: 1
              3'b001: 4
              3'b010: 8
              3'b011: 16
              3'b100: 32
              3'b101: 64
              3'b110: 128
              3'b111: 256
              </description>
                <bitRange>[17:15]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>SrcBurstSz</name>
                <description>Source burst size.
              Indicates the number of transfers that make up a source burst. 
              You must set this value to the burst size of the source peripheral, or if the source is memory, to the memory boundary size. 
              The burst size is the amount of data that is transferred when the burst request signal goes active in the source peripheral.
              3'b000: 1
              3'b001: 4
              3'b010: 8
              3'b011: 16
              3'b100: 32
              3'b101: 64
              3'b110: 128
              3'b111: 256
              </description>
                <bitRange>[14:12]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TransSz</name>
                <description>RW	Transfer size. 
              A write to this field sets the size of the transfer when the DMAC is the flow controller.
              This value counts down from the original value to zero, and so its value indicates the number of transfers left to complete. A read from this field provides the number of transfers still to be completed on the destination bus. Reading the register when the channel is active does not give useful information because by the time the software has processed the value read, the channel might have progressed. Only use it when a channel is enabled, and then disabled.
              The ARM PrimeCell DMA Controller (PL080) Design Manual provides more information about the use of this field.
              Program the transfer size value to zero if the DMAC is not the flow controller. If you program the TransferSize to a non-zero value, the DMAC might attempt to use this value instead of ignoring the TransferSize.
              </description>
                <bitRange>[11:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>CHnCFR</name>
            <description>DMA Channel n Configuration Registers</description>
            <addressOffset>0x010</addressOffset>
            <size>32</size>
            <access>read-write</access>
            <resetValue>0x00000000</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>RSVD2</name>
                <description>Reserved bits. Read undefined. Write as zero.</description>
                <bitRange>[31:19]</bitRange>
                <access>read-only</access>
              </field>
              <field>
                <name>Halt</name>
                <description>Halt:
              0 = enable DMA requests
              1 = ignore extra source DMA requests.
              The contents of the channels FIFO are drained.
              You can use this value with the Active and Channel Enable bits to cleanly disable a DMA channel.
              </description>
                <bitRange>[18:18]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>Active</name>
                <description>Active:
              0 = there is no data in the FIFO of the channel
              1 = the FIFO of the channel has data.
              You can use this value with the Halt and Channel Enable bits to cleanly disable a DMA channel.
              </description>
                <bitRange>[17:17]</bitRange>
                <access>read-only</access>
              </field>
              <field>
                <name>Lock</name>
                <description>
              Lock.
              When set, this bit enables locked transfers.
              </description>
                <bitRange>[16:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TCIntMsk</name>
                <description>
              Terminal count interrupt mask. 
              When cleared, this bit masks out the terminal count interrupt of the relevant channel.
              </description>
                <bitRange>[15:15]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>IntErrMsk</name>
                <description>
              Interrupt error mask. 
              When cleared, this bit masks out the error interrupt of the relevant channel.
              </description>
                <bitRange>[14:14]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>FlowCtr</name>
                <description>
              Flow control and transfer type. 
              3'b000: memory-to-memory by DMA
              3'b001: memory-to-peripheral by DMA
              3'b010: peripheral-to-memory by DMA
              3'b011: source peripheral to destination peripheral by DMA
              3'b100: source peripheral to destination peripheral by destination peripheral
              3'b101: memory-to-peripheral by peripheral
              3'b110: peripheral-to-memory by peripheral
              3'b100: source peripheral to destination peripheral by source peripheral
              </description>
                <bitRange>[13:11]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>RSVD1</name>
                <description>Reserved bits. Read undefined. Write as zero.</description>
                <bitRange>[10:10]</bitRange>
                <access>read-only</access>
              </field>
              <field>
                <name>DstPeri</name>
                <description>
              Destination peripheral. This value selects the DMA destination request peripheral. 
              This field is ignored if the destination of the transfer is to memory.
              </description>
                <bitRange>[9:6]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>RSVD0</name>
                <description>Reserved bits. Read undefined. Write as zero.</description>
                <bitRange>[5:5]</bitRange>
                <access>read-only</access>
              </field>
              <field>
                <name>SrcPeri</name>
                <description>Source peripheral. This value selects the DMA source request peripheral. This field is ignored if the source of the transfer is from</description>
                <bitRange>[4:1]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>ChEnable</name>
                <description>Channel enable. Reading this bit indicates whether a channel is currently enabled or disabled:
              0 = channel disabled
              1 = channel enabled.
              </description>
                <bitRange>[0:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
        </cluster>
      </registers>
    </peripheral>
    <!--DMAC_peri-->
    <peripheral>
      <name>DMAC_Peri</name>
      <version>1.0</version>
      <description>Direct Memory Access Controller Common</description>
      <baseAddress>0x400A0F10</baseAddress>
      <size>32</size>
      <access>read-write</access>
      <addressBlock>
        <offset>0</offset>
        <size>0x10</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>CFR1</name>
          <description>DMA Peri-ID(0~7) configuration Register</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x06880688</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD1</name>
              <description>Reserved bits. Read undefined</description>
              <bitRange>[31:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PeriID07UART4</name>
              <description>Select one peripheral among UART interface group as Peri-ID 7 :
0 = UART0 TX_FIFO
1 = UART0 RX_FIFO
2 = UART1 TX_FIFO
3 = UART1 RX_FIFO (default)
4 = UART2 TX_FIFO
5 = UART2 RX_FIFO</description>
              <bitRange>[27:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PeriID06UART3</name>
              <description>Select one peripheral among UART interface group as Peri-ID 6
(default) 2 = UART1 TX_FIFO</description>
              <bitRange>[24:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PeriID05UART2</name>
              <description>Select one peripheral among UART interface group as Peri-ID 5
(default) 1 = UART0 RX_FIFO</description>
              <bitRange>[21:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PeriID04UART1</name>
              <description>Select one peripheral among UART interface group as Peri-ID 4
(default) 0 = UART0 TX_FIFO</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD0</name>
              <description>Reserved bits. Read undefined  </description>
              <bitRange>[15:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PeriID03SPI4</name>
              <description>Select one peripheral among SPI interface group as Peri-ID 3 : 
0 = SPI Slave TX_FIFO
1 = SPI Slave RX_FIFO
2 = SPI Master TX_FIFO
3 = SPI Master RX_FIFO (default)
4 = SPI Both TX_FIFO
5 = SPI Both RX_FIFO</description>
              <bitRange>[11:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PeriID02SPI3</name>
              <description>Select one peripheral among SPI interface group as Peri-ID 2
(default) 2 = SPI Master TX_FIFO             </description>
              <bitRange>[8:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PeriID01SPI2</name>
              <description>Select one peripheral among SPI interface group as Peri-ID 1
(default) 1 = SPI Slave RX_FIFO</description>
              <bitRange>[5:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PeriID00SPI1</name>
              <description>Select one peripheral among SPI interface group as Peri-ID 0
(default) 0 = SPI Slave TX_FIFO</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CFR2</name>
          <description>DMA Peri-ID(0~7) configuration Register</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x06880688</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD1</name>
              <description>Reserved bits. Read undefined</description>
              <bitRange>[31:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PeriID15ETC2</name>
              <description>Select one peripheral among GTimer &amp; ADC interface group as Peri-ID 15 :
0 = General Timer 0
1 = General Timer 1
2 = General Timer 2
3 = ADC (default)
</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PeriID14ETC1</name>
              <description>Select one peripheral among GTimer &amp; ADC interface group as Peri-ID 14 (default) 1 = general timer 1</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD0</name>
              <description>Reserved bits. Read undefined</description>
              <bitRange>[23:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PeriID13I2C6</name>
              <description>Select one peripheral among I2C interface group as Peri-ID 13 : 
0 = I2C Slave TX_FIFO
1 = I2C Slave RX_FIFO
2 = I2C Master 0 TX_FIFO
3 = I2C Master 0 RX_FIFO
4 = I2C Master 1 TX_FIFO
5 = I2C Master 1 RX_FIFO (default)
6 = I2C Both TX_FIFO
7 = I2C Both RX_FIFO</description>
              <bitRange>[17:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PeriID12I2C5</name>
              <description>Select one peripheral among I2C interface group as Peri-ID 12
(default) 4 = I2C Master 1 TX_FIFO
</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PeriID11I2C4</name>
              <description>Select one peripheral among I2C interface group as Peri-ID 11
(default) 3 = I2C Master 0 RX_FIFO
</description>
              <bitRange>[11:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PeriID10I2C3</name>
              <description>Select one peripheral among I2C interface group as Peri-ID 10
(default) 2 = I2C Master 0 TX_FIFO
</description>
              <bitRange>[8:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PeriID09I2C2</name>
              <description>Select one peripheral among I2C interface group as Peri-ID 9
(default) 1 = I2C Slave RX_FIFO
</description>
              <bitRange>[5:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PeriID08I2C1</name>
              <description>Select one peripheral among I2C interface group as Peri-ID 8
(default) 0 = I2C Slave TX_FIFO
</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <!--CRC -->
    <peripheral>
      <name>CRC</name>
      <version>1.0</version>
      <description>CRC Calculators</description>
      <baseAddress>0x40010000</baseAddress>
      <size>32</size>
      <access>read-write</access>
      <addressBlock>
        <offset>0</offset>
        <size>0x60</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <!--CRC Calculation Control Register-->
        <register>
          <name>CTR</name>
          <description>CRC Calculation Control Register</description>
          <addressOffset>0x00</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0x000000FF</resetMask>
          <fields>
            <field>
              <name>ReverseDR</name>
              <description>Reverse CRC Result before Final XOR</description>
              <bitRange>[7:7]</bitRange>
            </field>
            <field>
              <name>ReverseData</name>
              <description>Reverse Data Byte</description>
              <bitRange>[6:6]</bitRange>
            </field>
            <field>
              <name>FinalXOR</name>
              <description>CRC final XOR value control
0 = Final XOR value is 0x0000_0000
1 = Final XOR value is 0xFFFF_FFFF (CRC32) or 0xFFFF (CRC16)
</description>
              <bitRange>[5:5]</bitRange>
            </field>
            <field>
              <name>IDSize</name>
              <description>These bits are used to select the size of input data</description>
              <bitRange>[4:3]</bitRange>
            </field>
            <field>
              <name>PrtySel</name>
              <description>Parity Mode Control</description>
              <bitRange>[2:2]</bitRange>
            </field>
            <field>
              <name>OPModeSel</name>
              <description>This bit is used to select CRC</description>
              <bitRange>[1:0]</bitRange>
            </field>
          </fields>
        </register>
        <register>
          <name>IDR</name>
          <description>Offset: 0x0004 Input data register </description>
          <addressOffset>0x04</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <!--Value: These bits are input data to calculate the CRC bits-->
            <field>
              <name>Value</name>
              <description>These bits are input data to calculate the CRC bits</description>
              <bitRange>[31:0]</bitRange>
            </field>
          </fields>
        </register>
        <!--DR: data register -->
        <register>
          <name>DR</name>
          <description>Offset: 0x0008 data register </description>
          <addressOffset>0x08</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <!--Value: These bits are output data buffer for calculate CRC before post processing.-->
            <field>
              <name>Value</name>
              <description>These bits are output data buffer for calculate CRC before post processing.</description>
              <bitRange>[31:0]</bitRange>
            </field>
          </fields>
        </register>
        <!--ODR: Output data register-->
        <register>
          <name>ODR</name>
          <description>Offset: 0x000C Output data register</description>
          <addressOffset>0x0C</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <!--Value: CRC bits that is calculated by hardware-->
            <field>
              <name>Value</name>
              <description>CRC bits that is calculated by hardware</description>
              <bitRange>[31:0]</bitRange>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <!--USIB-->
    <peripheral>
      <name>USIB</name>
      <version>1.0</version>
      <description>USIB</description>
      <headerStructName>USIB</headerStructName>
      <baseAddress>0x40020000</baseAddress>
      <size>32</size>
      <access>read-write</access>
      <addressBlock>
        <offset>0</offset>
        <size>0x80</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>USIB</name>
        <description>There are sub-interrupts on SPI Slave interface block</description>
        <value>32</value>
      </interrupt>
      <registers>
        <register>
          <name>USI_CTL</name>
          <description>USI Control Register</description>
          <addressOffset>0x0000</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000003</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SwRstIntStat</name>
              <description>Indicates software reset signal
This bit clears the Rx/Tx FIFO data and USI_STATUS registers and bits. 
0 = Inactive 
1 = Active 
NOTE: This bit cannot clear automatically when set by writing a 1. So you should release this bit by writing a 0</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SW_RST</name>
              <description>Indicates software reset signal
This bit clears USI_STATUS. 
0 = Inactive S/W reset 
1 = Active S/W reset
NOTE: This bit cannot clear automatically when set by writing a 1. So you should release this bit by writing a 0</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD3</name>
              <description>Reserved</description>
              <bitRange>[29:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_HWORD_SWAP</name>
              <description>Turn on or turn off half-word swap operation on Tx channel
0 = Off
1 = On</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_BYTE_SWAP</name>
              <description>Turn on or turn off byte swap operation on Tx channel
0 = Off
1 = On</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_BIT_SWAP</name>
              <description>Turn on or turn off bit swap operation on Tx channel
0 = Off
1 = On</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_HWORD_SWAP</name>
              <description>Turn on or turn off half-word swap operation on Rx channel
0 = Off
1 = On</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_BYTE_SWAP</name>
              <description>Turn on or turn off byte swap operation on Rx channel
0 = Off
1 = On
</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_BIT_SWAP</name>
              <description>Turn on or turn off bit swap operation on Rx channel
0 = Off
1 = On
</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD2</name>
              <description>Reserved</description>
              <bitRange>[15:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BUS_WIDTH</name>
              <description>00 = Byte
01 = Half-word
10 = Word
11 = Reserved
</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CH_WIDTH</name>
              <description>00 = Byte
01 = Half-word
10 = Word
11 = Reserved
NOTE: This bit should be set to 00 for I2C and UART functions.
</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD1</name>
              <description>Reserved</description>
              <bitRange>[9:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TXCH_ON</name>
              <description>Specifies the Tx channel enable signal
0 = Disable
1 = Enable
NOTE: TXCHON must be set after all configuration is completed, that is, configuration cannot be set after Tx channels start working.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXCH_ON</name>
              <description>Specifies the Rx channel enable signal
0 = Disable
1 = Enable
NOTE: RXCHON must be set after all configuration is completed, that is, configuration cannot be set after Rx channels start working.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_MODE</name>
              <description>Determines the function used to read data from transmit buffer register
0 = Interrupt
1 = DMA</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_MODE</name>
              <description>Determines the function used to write data into receive buffer register
0 = Interrupt 
1 = DMA</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MS_MODE</name>
              <description>Determines whether USI is master or slave
0 = Slave
1 = Master</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD0</name>
              <description>Reserved</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FUNC_MODE</name>
              <description>Specifies the function mode bits
00 = SPI function
01 = I2C function
10 = UART function
11 = Reserved</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USI_FIFO_CTL</name>
          <description>USI FIFO Control Register</description>
          <addressOffset>0x0004</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00200203</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD2</name>
              <description>No Description</description>
              <bitRange>[31:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TXFIFO_TRIG_LEVEL</name>
              <description>Specifies the trigger level to generate TXFIFO_ALMOST_EMPTY interrupt
If the byte number in Tx FIFO is less than the trigger level, the TXFIFO_ALMOST_EMPTY interrupt is generated.
NOTE: The trigger level is used for interrupt.
The maximum value is 272.
</description>
              <bitRange>[25:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD1</name>
              <description>No Description</description>
              <bitRange>[15:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFIFO_TRIG_LEVEL</name>
              <description>Specifies the trigger level to generate RXFIFO_ALMOST_FULL interrupt
If the byte number in Rx FIFO is more than the trigger level, the RXFIFO_ALMOST_FULL interrupt is generated.
NOTE: The trigger level is used for interrupt.
The maximum value is 272.
</description>
              <bitRange>[13:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFIFO_RESET</name>
              <description>Specifies Tx FIFO reset for FIFO flush
This is not released automatically. 
0 = No effect 
1 = Reset
</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXFIFO_RESET</name>
              <description>Specifies Rx FIFO reset for FIFO flush 
This is not released automatically. 
0 = No effect 
1 = Reset
</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFIFO_EN</name>
              <description>Specifies the Tx FIFO enable signal
0 = Disable (FIFO-depth = 1 byte) 
1 = Enable (FIFO-depth = 64 bytes)
</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXFIFO_EN</name>
              <description>Specifies the Rx FIFO enable signal
0 = Disable (FIFO-depth = 1 byte)
1 = Enable (FIFO-depth = 64 bytes)
</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USI_CLK_CTL</name>
          <description>USI Clock Control Register</description>
          <addressOffset>0x000C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000002</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>UARTTX_BIT_GAP</name>
              <description>UART Tx sampling type selection
For 16 sampling, set this field as 0x0
For 8 sampling, set this field as 0x8
</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD2</name>
              <description>No Description</description>
              <bitRange>[27:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BRDIV</name>
              <description>Specifies the baud rate division value</description>
              <bitRange>[19:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>USICLK_SEL</name>
              <description>USI clock source selection
0 = HCLKsys
1 = USICLK
NOTE:	If USICLK_SEL_EN = 0, then this value is ignored.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>USICLK_SEL_EN</name>
              <description>USI clock source selection enable
0 = USICLK (for UART mode) or HCLKsys (for SPI and I2C modes)
1 = Determined by USICLK_SEL bit (HCLK sys or USICLK) 
</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD1</name>
              <description>No Description</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLKEN</name>
              <description>No Description</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USI_CLK_SLOT</name>
          <description>USI Clock Slot Register for Non-Integer Divider</description>
          <addressOffset>0x0010</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[31:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CLK_SLOT</name>
              <description>Selects the slot where clock generator divides clock source
To see Table 14 2 and Table 14 3
NOTE:	In case of 8 sampling, USI_CLK_SLOT uses 8-LSB only</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_CTL</name>
          <description>Special Control Register for SPI Function</description>
          <addressOffset>0x0014</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x0000001C</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SPI_TX_DONE</name>
              <description>Indicates transfer done in shift register in master mode 
0 = Tx FIFO or shift register is not empty 
1 = Tx FIFO and shift register are empty
</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>Reserved</description>
              <bitRange>[30:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PACKET_COUNT</name>
              <description>Specifies the packet count number </description>
              <bitRange>[26:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_PACKET_CNT_EN</name>
              <description>Enables signal for packet counting in master mode 
0 = Disable 
1 = Enable
</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_NCS_TIME_CNT</name>
              <description>Specifies the nSS inactive time period
NSSOUT inactive time = nCS_time_count * SPICLKout
</description>
              <bitRange>[9:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_AUTO_N_MANUAL</name>
              <description>Specifies the auto nSS control or manual nSS control
1 = Auto 
0 = Manual 
</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_NSSOUT</name>
              <description>Slave selection signal (manual)
0 = Active
1 = Inactive
</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_CPHA</name>
              <description>Selects one of the two fundamentally different transfer formats
0 = Format A
1 = Format B
</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_CPOL</name>
              <description>Determines an active high or active low clock
0 = Active high
1 = Active low</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_CTL</name>
          <description>UART Control Register</description>
          <addressOffset>0x0018</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FLT_CYCLE</name>
              <description>RXD/CTS signal filter cycle selection</description>
              <bitRange>[31:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FLT_EN</name>
              <description>RXD/CTS signal filter enable</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD2</name>
              <description>No Description</description>
              <bitRange>[27:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RtsTrigLvl</name>
              <description>When AFCEN bit is set, these bits determine when to inactive nRTS signal. RxFFLvl &lt; RtsTrigLvl 
NOTE: These bits are used only for UART AFC mode.
</description>
              <bitRange>[22:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AFCEn</name>
              <description>Enable signal for auto flow control
0 = Disable
1 = Enable
</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD1</name>
              <description>Reserved bit</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ManualRTS</name>
              <description>If AFCEN bit is enabled, this value is ignored. In this case, the chip controls nRTS automatically
If AFCEN bit is disabled, nRTS must be controlled by software.
0 = H level (Inactive nRTS) 
1 = L level (Active nRTS)
</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UART_SAMP</name>
              <description>0 = 16 sampling
1 = 8 sampling
</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SendBreak</name>
              <description>Setting this bit causes UART to send a break signal during 1 frame time
This bit is auto-cleared after detecting the break-send request.  
0 = Normal transmit
1 = Sends break signal
</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SpeedOpt</name>
              <description>UART speed option
0 = Disables
1 = Enables(Ignore Stop bit)
</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Wlength</name>
              <description>ndicates the number of data bits to be transmitted or received per frame
00 = 5-bit 
01 = 6-bit 
10 = 7-bit 
11 = 8-bit
</description>
              <bitRange>[6:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>StopBit</name>
              <description>Specifies how many stop bits are used for end-of-frame signal
0 = One stop bit per frame
1 = Two stop bits per frame
</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ParityMode</name>
              <description>Specify the parity type during transmit and receive operation
0xx = No parity
100 = Odd parity
101 = Even parity
110 = Parity forced/checked as 1 
111 = Parity forced/checked as 0
</description>
              <bitRange>[3:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD0</name>
              <description>Reserved bit
Must be 0
</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USI_INT_EN</name>
          <description>USI Interrupt Enable Register</description>
          <addressOffset>0x0020</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD1</name>
              <description>reserved</description>
              <bitRange>[31:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>I2C_SLAVEADDR_MATCH</name>
              <description>Interrupt pending signal for interface start 
Write 1 to clear this bit.  
0 = No interrupt 
1 = Interrupt
W1C</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C_LOSE_ARB_MANUAL</name>
              <description>Interrupt pending signal for interface start 
Write 1 to clear this bit.  
0 = No interrupt 
1 = Interrupt
W1C</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C_TRANS_DONE_MANUAL</name>
              <description>Interrupt pending signal for interface start 
Write 1 to clear this bit.  
0 = No interrupt 
1 = Interrupt
W1C</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C_TRANS_DONE_NOACK_MANUAL</name>
              <description>Interrupt pending signal for interface start 
Write 1 to clear this bit.  
0 = No interrupt 
1 = Interrupt
W1C</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C_TIMEOUT_AUTO</name>
              <description>Interrupt pending signal for interface start 
Write 1 to clear this bit.  
0 = No interrupt 
1 = Interrupt
W1C</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C_NO_DEV_AUTO</name>
              <description>Interrupt pending signal for interface start 
Write 1 to clear this bit.  
0 = No interrupt 
1 = Interrupt
W1C</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C_NO_DEV_ACK_AUTO</name>
              <description>Interrupt pending signal for interface start 
Write 1 to clear this bit.  
0 = No interrupt 
1 = Interrupt
W1C</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C_TRANS_ABORT_AUTO</name>
              <description>Interrupt pending signal for interface start 
Write 1 to clear this bit.  
0 = No interrupt 
1 = Interrupt
W1C</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C_TRANS_DONE_AUTO</name>
              <description>Interrupt pending signal for I2C
Write 1 to clear this bit.
0 = No interrupt
1 = Interrupt</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>Interrupt pending signal for I2C
Write 1 to clear this bit.
0 = No interrupt
1 = Interrupt</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Stretch</name>
              <description>Interrupt pending signal for I2C
Write 1 to clear this bit.
0 = No interrupt
1 = Interrupt</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Stop</name>
              <description>Interrupt pending signal for I2C
Write 1 to clear this bit.
0 = No interrupt
1 = Interrupt</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INT_START_PEND</name>
              <description>Interrupt pending signal for I2C
Write 1 to clear this bit.
0 = No interrupt
1 = Interrupt</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INT_I2C_PEND</name>
              <description>Interrupt pending signal for I2C
Write 1 to clear this bit.
0 = No interrupt
1 = Interrupt</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Modem</name>
              <description>Write 1 to clear this bit
Read
0 = No-interrupt
1 = Interrupt occurs
</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Error</name>
              <description>Write 1 to clear this bit
Read: If an error occurs, this bit is set to 1
0 = No error occurred
1 = Error occurred</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD0</name>
              <description>reserved</description>
              <bitRange>[6:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXFIFO_ALMOSTFULL_INT_PEND</name>
              <description>Interrupt pending signal for Rx FIFO almost full
Write 1 to clear this bit.
READ:
0 = Data in Rx FIFO is less than trigger level
1 = Data in Rx FIFO is more than trigger level</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFIFO_ALMOSTEMPTY_INT_PEND</name>
              <description>Interrupt pending signal for Tx FIFO almost empty
Write 1 to clear this bit.
READ:
0 = Data in Tx FIFO is more than trigger level
1 = Data in Tx FIFO is less than trigger level</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USI_INT_STAT</name>
          <description>USI Interrupt Register</description>
          <addressOffset>0x0024</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD1</name>
              <description>reserved</description>
              <bitRange>[31:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>I2C_SLAVEADDR_MATCH</name>
              <description>Interrupt pending signal for interface start 
Write 1 to clear this bit.  
0 = No interrupt 
1 = Interrupt
W1C</description>
              <bitRange>[22:22]</bitRange>
              <access>read-writeOnce</access>
            </field>
            <field>
              <name>I2C_LOSE_ARB_MANUAL</name>
              <description>Interrupt pending signal for interface start 
Write 1 to clear this bit.  
0 = No interrupt 
1 = Interrupt
W1C</description>
              <bitRange>[21:21]</bitRange>
              <access>read-writeOnce</access>
            </field>
            <field>
              <name>I2C_TRANS_DONE_MANUAL</name>
              <description>Interrupt pending signal for interface start 
Write 1 to clear this bit.  
0 = No interrupt 
1 = Interrupt
W1C</description>
              <bitRange>[20:20]</bitRange>
              <access>read-writeOnce</access>
            </field>
            <field>
              <name>I2C_TRANS_DONE_NOACK_MANUAL</name>
              <description>Interrupt pending signal for interface start 
Write 1 to clear this bit.  
0 = No interrupt 
1 = Interrupt
W1C</description>
              <bitRange>[19:19]</bitRange>
              <access>read-writeOnce</access>
            </field>
            <field>
              <name>I2C_TIMEOUT_AUTO</name>
              <description>Interrupt pending signal for interface start 
Write 1 to clear this bit.  
0 = No interrupt 
1 = Interrupt
W1C</description>
              <bitRange>[18:18]</bitRange>
              <access>read-writeOnce</access>
            </field>
            <field>
              <name>I2C_NO_DEV_AUTO</name>
              <description>Interrupt pending signal for interface start 
Write 1 to clear this bit.  
0 = No interrupt 
1 = Interrupt
W1C</description>
              <bitRange>[17:17]</bitRange>
              <access>read-writeOnce</access>
            </field>
            <field>
              <name>I2C_NO_DEV_ACK_AUTO</name>
              <description>Interrupt pending signal for interface start 
Write 1 to clear this bit.  
0 = No interrupt 
1 = Interrupt
W1C</description>
              <bitRange>[16:16]</bitRange>
              <access>read-writeOnce</access>
            </field>
            <field>
              <name>I2C_TRANS_ABORT_AUTO</name>
              <description>Interrupt pending signal for interface start 
Write 1 to clear this bit.  
0 = No interrupt 
1 = Interrupt
W1C</description>
              <bitRange>[15:15]</bitRange>
              <access>read-writeOnce</access>
            </field>
            <field>
              <name>I2C_TRANS_DONE_AUTO</name>
              <description>Interrupt pending signal for I2C
Write 1 to clear this bit.
0 = No interrupt
1 = Interrupt</description>
              <bitRange>[14:14]</bitRange>
              <access>read-writeOnce</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>Interrupt pending signal for I2C
Write 1 to clear this bit.
0 = No interrupt
1 = Interrupt</description>
              <bitRange>[13:13]</bitRange>
              <access>read-writeOnce</access>
            </field>
            <field>
              <name>Stretch</name>
              <description>Interrupt pending signal for I2C
Write 1 to clear this bit.
0 = No interrupt
1 = Interrupt</description>
              <bitRange>[12:12]</bitRange>
              <access>read-writeOnce</access>
            </field>
            <field>
              <name>Stop</name>
              <description>Interrupt pending signal for I2C
Write 1 to clear this bit.
0 = No interrupt
1 = Interrupt</description>
              <bitRange>[11:11]</bitRange>
              <access>read-writeOnce</access>
            </field>
            <field>
              <name>INT_START_PEND</name>
              <description>Interrupt pending signal for I2C
Write 1 to clear this bit.
0 = No interrupt
1 = Interrupt</description>
              <bitRange>[10:10]</bitRange>
              <access>read-writeOnce</access>
            </field>
            <field>
              <name>INT_I2C_PEND</name>
              <description>Interrupt pending signal for I2C
Write 1 to clear this bit.
0 = No interrupt
1 = Interrupt</description>
              <bitRange>[9:9]</bitRange>
              <access>read-writeOnce</access>
            </field>
            <field>
              <name>Modem</name>
              <description>Write 1 to clear this bit
Read
0 = No-interrupt
1 = Interrupt occurs
</description>
              <bitRange>[8:8]</bitRange>
              <access>read-writeOnce</access>
            </field>
            <field>
              <name>Error</name>
              <description>Write 1 to clear this bit
Read: If an error occurs, this bit is set to 1
0 = No error occurred
1 = Error occurred</description>
              <bitRange>[7:7]</bitRange>
              <access>read-writeOnce</access>
            </field>
            <field>
              <name>RSVD0</name>
              <description>reserved</description>
              <bitRange>[6:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFIFO_ALMOSTFULL_INT_PEND</name>
              <description>Interrupt pending signal for Rx FIFO almost full
Write 1 to clear this bit.
READ:
0 = Data in Rx FIFO is less than trigger level
1 = Data in Rx FIFO is more than trigger level</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TXFIFO_ALMOSTEMPTY_INT_PEND</name>
              <description>Interrupt pending signal for Tx FIFO almost empty
Write 1 to clear this bit.
READ:
0 = Data in Tx FIFO is more than trigger level
1 = Data in Tx FIFO is less than trigger level</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USI_MODEM_STAT</name>
          <description>USI FIFO Status Register</description>
          <addressOffset>0x0028</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD1</name>
              <description>No Description</description>
              <bitRange>[31:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DeltaCTS</name>
              <description>Break error for byte0</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>Frame error for byte0
0 = No frame error occurred
1 = Frame error occurred</description>
              <bitRange>[3:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ClearToSend</name>
              <description>Parity error for byte0
0 = No parity error occurred
1 = Parity error occurred</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USI_ERROR_STAT</name>
          <description>USI FIFO Status Register</description>
          <addressOffset>0x002C</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[31:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BreakErr</name>
              <description>Break error for byte0</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FrameErr</name>
              <description>Frame error for byte0
0 = No frame error occurred
1 = Frame error occurred</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ParityErr</name>
              <description>Parity error for byte0
0 = No parity error occurred
1 = Parity error occurred</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USI_FIFO_STAT</name>
          <description>USI FIFO Status Register</description>
          <addressOffset>0x0030</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x08000800</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[31:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFIFO_EMPTY</name>
              <description>Rx FIFO empty signal
0 = Non-empty
1 = Empty</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFIFO_FULL</name>
              <description>Rx FIFO full signal
0 = Non-full
1 = Full
</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFIFO_LEVEL</name>
              <description>Data level in Rx FIFO</description>
              <bitRange>[25:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD1</name>
              <description>No Description</description>
              <bitRange>[15:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TXFIFO_EMPTY</name>
              <description>Tx FIFO empty signal
0 = Non-empty
1 = Empty
</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TXFIFO_FULL</name>
              <description>Tx FIFO full signal
0 = Non-full
1 = Full
</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TXFIFO_LEVEL</name>
              <description>Data level in Tx FIFO</description>
              <bitRange>[9:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USI_TXDATA</name>
          <description>USI Transmitted Data Buffer Register</description>
          <addressOffset>0x0034</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0xDEADBEAF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TXFIFO_WDATA</name>
              <description>Transmit data buffer for USI</description>
              <bitRange>[31:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USI_RXDATA</name>
          <description>USI Received Data Buffer Register</description>
          <addressOffset>0x0038</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RXFIFO_RDATA</name>
              <description>Received data buffer for USI</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_CONF</name>
          <description>I2C Configuration</description>
          <addressOffset>0x0040</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x86990CFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>AUTO_MODE</name>
              <description>Auto flow control for I2C master
1 = Auto control. I2C master automatically controls the whole transaction.
0 = Manual control. Software manually controls transaction.
</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ADDRMODE</name>
              <description>Selection of I2C interface address mode
1 = 10-bit address mode
0 = 7-bit address mode
</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD2</name>
              <description>Need to be Zero</description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>I2C_WAKEUP_EN</name>
              <description>I2C Wakeup source generation enable
0 = Disable
1 = Enable
After I2C address matching compare, wakeup signal is generated.
</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD1</name>
              <description>No Description</description>
              <bitRange>[27:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>I2C_WAKE_SEL</name>
              <description>Wake-up type selection
0 = Address matching type
1 = Start monitor type</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FILTER_EN_SCL</name>
              <description>SCL signal filter enable</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FLT_CYCLE_SCL</name>
              <description>No Description</description>
              <bitRange>[15:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCL_STRETCH_M_REL</name>
              <description>I2C stretch release bit, when I2C stretch is used as manual mode
I2C_CONF[27] is stretch type selection bit. 
0 = Auto
1 = Manual 
When you set this bit to manual and StretchEn bit is enabled, then set this bit to 1 every time to release the I2C stretch function.
If SCL_STRETCH_EN is enabled, manual stretch can be controlled.
</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCL_STRETCH_EN</name>
              <description>I2C stretch mode enable
0 = Stretch disable
1 = I2C stretch mode enable
</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD0</name>
              <description>No Description</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_AUTO_CONF</name>
          <description>I2C Configuration for Auto Mode</description>
          <addressOffset>0x0044</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x000300FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>I2C_MASTER_RUN</name>
              <description>I2C run signal for master mode
To start data transfer under I2C master mode, write 1 to this bit.
</description>
              <bitRange>[31:31]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>RSVD2</name>
              <description>No Description</description>
              <bitRange>[30:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>StretchHoldTime</name>
              <description>Need to control by S/W
Stretch release time after FIFO control.
The time is (STR_HOLD_TIME)x(EXT_CLK) 
This is only applicable for slave mode.</description>
              <bitRange>[24:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C_STOPAFTERTRANS</name>
              <description>For auto_mode only. If this bit is set, i2c master asserts stop condition after entire transaction is complete, either success or failure.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C_READ_WRITE</name>
              <description>Type of transaction 
For AUTO_MODE only.
0 = Write (Tx)
1 = Read (Rx)
</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C_TRANS_LEN</name>
              <description>Length of transaction (number of bytes to Rx or Tx)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_TIMEOUT</name>
          <description>Time Out for I2C Master</description>
          <addressOffset>0x0048</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x800000FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TIMEOUT_EN</name>
              <description>Enables timing out</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD1</name>
              <description>No Description</description>
              <bitRange>[30:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TOUT_COUNT</name>
              <description>Timing out for master Rx/Tx</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_MANUAL_CMD</name>
          <description>Command Register for Manual Mode</description>
          <addressOffset>0x004C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TX_DATA</name>
              <description>Specifies the data to be transmitted</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_DATA</name>
              <description>No Description</description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SCLDelayEn</name>
              <description>SCL signal delay filter enable
0 = Disable
1 = Enable</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCLGlitchWidth</name>
              <description>SCL glitch width to be removed
00 = rsvd
01 = rsvd
10 = 50 ns
11 = 60 ns</description>
              <bitRange>[14:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SDADelayEn</name>
              <description>SCL signal delay filter enable
0 = Disable
1 = Enable</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SDAGlitchWidth</name>
              <description>0 = No effect
1 = When address match </description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SlaveRxNack</name>
              <description>0 = No effect
1 = When address match </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SlaveTxNack</name>
              <description>0 = No effect
1 = Stretch release manually</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD0</name>
              <description>No Description</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_ACK</name>
              <description>No Description</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>READ_DATA</name>
              <description>No Description</description>
              <bitRange>[4:4]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>SEND_DATA</name>
              <description>No Description</description>
              <bitRange>[3:3]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>SEND_STOP</name>
              <description>No Description</description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>SEND_RESTART</name>
              <description>No Description</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>SEND_START</name>
              <description>No Description</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_TRANS_STATUS</name>
          <description>I2C Transfer Status</description>
          <addressOffset>0x0050</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD3</name>
              <description>No Description</description>
              <bitRange>[31:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SlaveRxTxFlag</name>
              <description>On slave busy, read/write state monitoring flag when slave is busy</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>addrMatchWakeup</name>
              <description>address match wakeup flag(from i2c_wakeup module)</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>MASTER_BUSY</name>
              <description>Indicates whether the data is transferring or not in master mode
1 = The data is transferring
2 = The data is not transferring
</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SLAVE_BUSY</name>
              <description>Indicates whether the data is transferring or not in slave mode
1 = The data is transferring
2 = The data is not transferring 
</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>STRETCH</name>
              <description>Indicates clock stretch in slave mode 
0 = N/A
1 = Clock stretching 
</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD2</name>
              <description>No Description</description>
              <bitRange>[14:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SLAVEADDR_MATCH</name>
              <description>I2C slave address is matched
For slave mode only (I2C interrupt source).
</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TRANS_DONE_NOACK_MANUAL</name>
              <description>Transfer completed without ACK received 
For manual mode only.
NOTE: After master ID (HS mode), this bit should be asserted
(I2C interrupt source).
</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOSE_ARB_MANUAL</name>
              <description>Lost arbitration during executing command
For manual mode only (I2C interrupt source).
</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TRANS_DONE_MANUAL</name>
              <description>One byte (data or address) is transmitted successfully, one byte (data) is received successfully, or command (start or stop) is completed
For manual mode only (I2C interrupt source).
Note: In HS mode, completion of master ID transfer does not assert this bit.
</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD1</name>
              <description>No Description</description>
              <bitRange>[7:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TIMEOUT_AUTO</name>
              <description>Time out during auto mode transaction</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>NO_DEV_AUTO</name>
              <description>No device responds to the address 
No device is selected by master. For auto mode only (I2C interrupt source).
</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>NO_DEV_ACK_AUTO</name>
              <description>Device does not return ACK during master transmission 
For auto mode only (I2C interrupt source).
</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TRANS_ABORT_AUTO</name>
              <description>Lost arbitration during transaction 
For auto mode only (I2C interrupt source).
</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TRANSFER_DONE_AUTO</name>
              <description>Command is executed successfully
This bit is automatically cleared by software read. 
For auto mode only (I2C interrupt source).
</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_TIMING_FS1</name>
          <description>TimTiming Parameter for Fast-Speed Mode</description>
          <addressOffset>0x0060</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x0F0F0F0F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>StartSetupTime</name>
              <description>Start condition setup timing (Start condition after SCL rising-edge)</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>StartHoldTime</name>
              <description>Start condition hold timing (Start condition leads to SCL falling-edge)</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>StopSetupTime</name>
              <description>STOP condition setup timing.(Stop condition after SCL rising-edge)</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>StopHoldTime</name>
              <description>Stop condition hold timing.(Stop condition leads to SCL falling-edge)</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_TIMING_FS2</name>
          <description>Timing Parameter for Fast-Speed Mode</description>
          <addressOffset>0x0064</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x0F0FFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DataSetupTime</name>
              <description>Data setup timing</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCLLowWidth</name>
              <description>SCL low Period</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCLHighWidth</name>
              <description>SCL high period</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_TIMING_FS3</name>
          <description>Timing Parameter for Fast-Speed Mode</description>
          <addressOffset>0x0068</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00FF00FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD2</name>
              <description>No Description</description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PClkDivider</name>
              <description>The SYSCLK divider factor when working in FS-mode</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD1</name>
              <description>No Description</description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ReStartWidth</name>
              <description>Re-start condition</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_TIMING_SLA</name>
          <description>Timing Parameter for I2C Slave</description>
          <addressOffset>0x006C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x0000000F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>I2C_WAKE_RX_ADDR</name>
              <description>No Description</description>
              <bitRange>[30:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>I2C_WAKE_ADDR_OPT_EN</name>
              <description>No Description</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C_WAKE_ADDR_OPT</name>
              <description>No Description</description>
              <bitRange>[22:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C_TDATA_HD_SLA</name>
              <description>No Description</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_ADDR</name>
          <description>Address Register
I2C slave address
I2C master ID
Slave address for master</description>
          <addressOffset>0x0070</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xFF0FFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MASTERID</name>
              <description>Master ID for I2C master 
For auto mode and HS mode only
</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[23:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SLAVE_ADDR_MAS</name>
              <description>Slave address for I2C master 
For auto mode only.
</description>
              <bitRange>[19:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SLAVE_ADDR_SLA</name>
              <description>Slave address for I2C slave</description>
              <bitRange>[9:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RX_FIFO_PTR</name>
          <description>Rx FIFO Pointer Registe</description>
          <addressOffset>0x0074</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SEL_W_256L_16H</name>
              <description>Write pointer selection 
0 = 256 FIFO selection
1 = 16 FIFO selection </description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD2</name>
              <description>No Description</description>
              <bitRange>[30:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>WPTR_16</name>
              <description>Rx 16 FIFO write pointer</description>
              <bitRange>[27:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>WPTR_256</name>
              <description>Rx 256 FIFO write pointer</description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SEL_R_256L_16H</name>
              <description>Read pointer selection 
0 = 256 FIFO selection
1 = 16 FIFO selection 
</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[14:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RPTR_16</name>
              <description>Rx 16 FIFO read pointer</description>
              <bitRange>[11:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RPTR_256</name>
              <description>Rx 256 FIFO read pointer</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TX_FIFO_PTR</name>
          <description>Tx FIFO Pointer Register</description>
          <addressOffset>0x0078</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SEL_W_256L_16H</name>
              <description>Write pointer selection 
0 = 256 FIFO selection
1 = 16 FIFO selection </description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD2</name>
              <description>No Description</description>
              <bitRange>[30:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>WPTR_16</name>
              <description>Tx 16 FIFO write pointer</description>
              <bitRange>[27:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>WPTR_256</name>
              <description>Tx 256 FIFO write pointer</description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SEL_R_256L_16H</name>
              <description>Read pointer selection 
0 = 256 FIFO selection
1 = 16 FIFO selection 
</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[14:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RPTR_16</name>
              <description>Tx 16 FIFO read pointer</description>
              <bitRange>[11:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RPTR_256</name>
              <description>Tx 256 FIFO read pointer</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <!--I2CB0-->
    <peripheral>
      <name>I2CB0</name>
      <version>1.0</version>
      <description>I2CB0</description>
      <headerStructName>I2CB0</headerStructName>
      <baseAddress>0x40021000</baseAddress>
      <size>32</size>
      <access>read-write</access>
      <addressBlock>
        <offset>0</offset>
        <size>0x80</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>I2CB0</name>
        <description>There are sub-interrupts on SPI Slave interface block</description>
        <value>33</value>
      </interrupt>
      <registers>
        <register>
          <name>USI_CTL</name>
          <description>USI Control Register</description>
          <addressOffset>0x0000</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000003</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SwRstIntStat</name>
              <description>Indicates software reset signal
This bit clears the Rx/Tx FIFO data and USI_STATUS registers and bits. 
0 = Inactive 
1 = Active 
NOTE: This bit cannot clear automatically when set by writing a 1. So you should release this bit by writing a 0</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SW_RST</name>
              <description>Indicates software reset signal
This bit clears USI_STATUS. 
0 = Inactive S/W reset 
1 = Active S/W reset
NOTE: This bit cannot clear automatically when set by writing a 1. So you should release this bit by writing a 0</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD3</name>
              <description>Reserved</description>
              <bitRange>[29:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_HWORD_SWAP</name>
              <description>Turn on or turn off half-word swap operation on Tx channel
0 = Off
1 = On</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_BYTE_SWAP</name>
              <description>Turn on or turn off byte swap operation on Tx channel
0 = Off
1 = On</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_BIT_SWAP</name>
              <description>Turn on or turn off bit swap operation on Tx channel
0 = Off
1 = On</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_HWORD_SWAP</name>
              <description>Turn on or turn off half-word swap operation on Rx channel
0 = Off
1 = On</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_BYTE_SWAP</name>
              <description>Turn on or turn off byte swap operation on Rx channel
0 = Off
1 = On
</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_BIT_SWAP</name>
              <description>Turn on or turn off bit swap operation on Rx channel
0 = Off
1 = On
</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD2</name>
              <description>Reserved</description>
              <bitRange>[15:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BUS_WIDTH</name>
              <description>00 = Byte
01 = Half-word
10 = Word
11 = Reserved
</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CH_WIDTH</name>
              <description>00 = Byte
01 = Half-word
10 = Word
11 = Reserved
NOTE: This bit should be set to 00 for I2C and UART functions.
</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD1</name>
              <description>Reserved</description>
              <bitRange>[9:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TXCH_ON</name>
              <description>Specifies the Tx channel enable signal
0 = Disable
1 = Enable
NOTE: TXCHON must be set after all configuration is completed, that is, configuration cannot be set after Tx channels start working.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXCH_ON</name>
              <description>Specifies the Rx channel enable signal
0 = Disable
1 = Enable
NOTE: RXCHON must be set after all configuration is completed, that is, configuration cannot be set after Rx channels start working.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_MODE</name>
              <description>Determines the function used to read data from transmit buffer register
0 = Interrupt
1 = DMA</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_MODE</name>
              <description>Determines the function used to write data into receive buffer register
0 = Interrupt 
1 = DMA</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MS_MODE</name>
              <description>Determines whether USI is master or slave
0 = Slave
1 = Master</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD0</name>
              <description>Reserved</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FUNC_MODE</name>
              <description>Specifies the function mode bits
00 = SPI function
01 = I2C function
10 = UART function
11 = Reserved</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USI_FIFO_CTL</name>
          <description>USI FIFO Control Register</description>
          <addressOffset>0x0004</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00200203</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD2</name>
              <description>No Description</description>
              <bitRange>[31:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TXFIFO_TRIG_LEVEL</name>
              <description>Specifies the trigger level to generate TXFIFO_ALMOST_EMPTY interrupt
If the byte number in Tx FIFO is less than the trigger level, the TXFIFO_ALMOST_EMPTY interrupt is generated.
NOTE: The trigger level is used for interrupt.
The maximum value is 272.
</description>
              <bitRange>[25:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD1</name>
              <description>No Description</description>
              <bitRange>[15:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFIFO_TRIG_LEVEL</name>
              <description>Specifies the trigger level to generate RXFIFO_ALMOST_FULL interrupt
If the byte number in Rx FIFO is more than the trigger level, the RXFIFO_ALMOST_FULL interrupt is generated.
NOTE: The trigger level is used for interrupt.
The maximum value is 272.
</description>
              <bitRange>[13:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFIFO_RESET</name>
              <description>Specifies Tx FIFO reset for FIFO flush
This is not released automatically. 
0 = No effect 
1 = Reset
</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXFIFO_RESET</name>
              <description>Specifies Rx FIFO reset for FIFO flush 
This is not released automatically. 
0 = No effect 
1 = Reset
</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFIFO_EN</name>
              <description>Specifies the Tx FIFO enable signal
0 = Disable (FIFO-depth = 1 byte) 
1 = Enable (FIFO-depth = 64 bytes)
</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXFIFO_EN</name>
              <description>Specifies the Rx FIFO enable signal
0 = Disable (FIFO-depth = 1 byte)
1 = Enable (FIFO-depth = 64 bytes)
</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USI_CLK_CTL</name>
          <description>USI Clock Control Register</description>
          <addressOffset>0x000C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000002</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>UARTTX_BIT_GAP</name>
              <description>UART Tx sampling type selection
For 16 sampling, set this field as 0x0
For 8 sampling, set this field as 0x8
</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD2</name>
              <description>No Description</description>
              <bitRange>[27:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BRDIV</name>
              <description>Specifies the baud rate division value</description>
              <bitRange>[19:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>USICLK_SEL</name>
              <description>USI clock source selection
0 = HCLKsys
1 = USICLK
NOTE:	If USICLK_SEL_EN = 0, then this value is ignored.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>USICLK_SEL_EN</name>
              <description>USI clock source selection enable
0 = USICLK (for UART mode) or HCLKsys (for SPI and I2C modes)
1 = Determined by USICLK_SEL bit (HCLK sys or USICLK) 
</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD1</name>
              <description>No Description</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLKEN</name>
              <description>No Description</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_CTL</name>
          <description>UART Control Register</description>
          <addressOffset>0x0018</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FLT_CYCLE</name>
              <description>RXD/CTS signal filter cycle selection</description>
              <bitRange>[31:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FLT_EN</name>
              <description>RXD/CTS signal filter enable</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD2</name>
              <description>No Description</description>
              <bitRange>[27:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RtsTrigLvl</name>
              <description>When AFCEN bit is set, these bits determine when to inactive nRTS signal. RxFFLvl &lt; RtsTrigLvl 
NOTE: These bits are used only for UART AFC mode.
</description>
              <bitRange>[22:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AFCEn</name>
              <description>Enable signal for auto flow control
0 = Disable
1 = Enable
</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD1</name>
              <description>Reserved bit</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ManualRTS</name>
              <description>If AFCEN bit is enabled, this value is ignored. In this case, the chip controls nRTS automatically
If AFCEN bit is disabled, nRTS must be controlled by software.
0 = H level (Inactive nRTS) 
1 = L level (Active nRTS)
</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UART_SAMP</name>
              <description>0 = 16 sampling
1 = 8 sampling
</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SendBreak</name>
              <description>Setting this bit causes UART to send a break signal during 1 frame time
This bit is auto-cleared after detecting the break-send request.  
0 = Normal transmit
1 = Sends break signal
</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SpeedOpt</name>
              <description>UART speed option
0 = Disables
1 = Enables(Ignore Stop bit)
</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Wlength</name>
              <description>ndicates the number of data bits to be transmitted or received per frame
00 = 5-bit 
01 = 6-bit 
10 = 7-bit 
11 = 8-bit
</description>
              <bitRange>[6:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>StopBit</name>
              <description>Specifies how many stop bits are used for end-of-frame signal
0 = One stop bit per frame
1 = Two stop bits per frame
</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ParityMode</name>
              <description>Specify the parity type during transmit and receive operation
0xx = No parity
100 = Odd parity
101 = Even parity
110 = Parity forced/checked as 1 
111 = Parity forced/checked as 0
</description>
              <bitRange>[3:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD0</name>
              <description>Reserved bit
Must be 0
</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USI_INT_EN</name>
          <description>USI Interrupt Enable Register</description>
          <addressOffset>0x0020</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD1</name>
              <description>reserved</description>
              <bitRange>[31:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>I2C_SLAVEADDR_MATCH</name>
              <description>Interrupt pending signal for interface start 
Write 1 to clear this bit.  
0 = No interrupt 
1 = Interrupt
W1C</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C_LOSE_ARB_MANUAL</name>
              <description>Interrupt pending signal for interface start 
Write 1 to clear this bit.  
0 = No interrupt 
1 = Interrupt
W1C</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C_TRANS_DONE_MANUAL</name>
              <description>Interrupt pending signal for interface start 
Write 1 to clear this bit.  
0 = No interrupt 
1 = Interrupt
W1C</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C_TRANS_DONE_NOACK_MANUAL</name>
              <description>Interrupt pending signal for interface start 
Write 1 to clear this bit.  
0 = No interrupt 
1 = Interrupt
W1C</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C_TIMEOUT_AUTO</name>
              <description>Interrupt pending signal for interface start 
Write 1 to clear this bit.  
0 = No interrupt 
1 = Interrupt
W1C</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C_NO_DEV_AUTO</name>
              <description>Interrupt pending signal for interface start 
Write 1 to clear this bit.  
0 = No interrupt 
1 = Interrupt
W1C</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C_NO_DEV_ACK_AUTO</name>
              <description>Interrupt pending signal for interface start 
Write 1 to clear this bit.  
0 = No interrupt 
1 = Interrupt
W1C</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C_TRANS_ABORT_AUTO</name>
              <description>Interrupt pending signal for interface start 
Write 1 to clear this bit.  
0 = No interrupt 
1 = Interrupt
W1C</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C_TRANS_DONE_AUTO</name>
              <description>Interrupt pending signal for I2C
Write 1 to clear this bit.
0 = No interrupt
1 = Interrupt</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>Interrupt pending signal for I2C
Write 1 to clear this bit.
0 = No interrupt
1 = Interrupt</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Stretch</name>
              <description>Interrupt pending signal for I2C
Write 1 to clear this bit.
0 = No interrupt
1 = Interrupt</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Stop</name>
              <description>Interrupt pending signal for I2C
Write 1 to clear this bit.
0 = No interrupt
1 = Interrupt</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INT_START_PEND</name>
              <description>Interrupt pending signal for I2C
Write 1 to clear this bit.
0 = No interrupt
1 = Interrupt</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INT_I2C_PEND</name>
              <description>Interrupt pending signal for I2C
Write 1 to clear this bit.
0 = No interrupt
1 = Interrupt</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Modem</name>
              <description>Write 1 to clear this bit
Read
0 = No-interrupt
1 = Interrupt occurs
</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Error</name>
              <description>Write 1 to clear this bit
Read: If an error occurs, this bit is set to 1
0 = No error occurred
1 = Error occurred</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD0</name>
              <description>reserved</description>
              <bitRange>[6:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXFIFO_ALMOSTFULL_INT_PEND</name>
              <description>Interrupt pending signal for Rx FIFO almost full
Write 1 to clear this bit.
READ:
0 = Data in Rx FIFO is less than trigger level
1 = Data in Rx FIFO is more than trigger level</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFIFO_ALMOSTEMPTY_INT_PEND</name>
              <description>Interrupt pending signal for Tx FIFO almost empty
Write 1 to clear this bit.
READ:
0 = Data in Tx FIFO is more than trigger level
1 = Data in Tx FIFO is less than trigger level</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USI_INT_STAT</name>
          <description>USI Interrupt Register</description>
          <addressOffset>0x0024</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD1</name>
              <description>reserved</description>
              <bitRange>[31:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>I2C_SLAVEADDR_MATCH</name>
              <description>Interrupt pending signal for interface start 
Write 1 to clear this bit.  
0 = No interrupt 
1 = Interrupt
W1C</description>
              <bitRange>[22:22]</bitRange>
              <access>read-writeOnce</access>
            </field>
            <field>
              <name>I2C_LOSE_ARB_MANUAL</name>
              <description>Interrupt pending signal for interface start 
Write 1 to clear this bit.  
0 = No interrupt 
1 = Interrupt
W1C</description>
              <bitRange>[21:21]</bitRange>
              <access>read-writeOnce</access>
            </field>
            <field>
              <name>I2C_TRANS_DONE_MANUAL</name>
              <description>Interrupt pending signal for interface start 
Write 1 to clear this bit.  
0 = No interrupt 
1 = Interrupt
W1C</description>
              <bitRange>[20:20]</bitRange>
              <access>read-writeOnce</access>
            </field>
            <field>
              <name>I2C_TRANS_DONE_NOACK_MANUAL</name>
              <description>Interrupt pending signal for interface start 
Write 1 to clear this bit.  
0 = No interrupt 
1 = Interrupt
W1C</description>
              <bitRange>[19:19]</bitRange>
              <access>read-writeOnce</access>
            </field>
            <field>
              <name>I2C_TIMEOUT_AUTO</name>
              <description>Interrupt pending signal for interface start 
Write 1 to clear this bit.  
0 = No interrupt 
1 = Interrupt
W1C</description>
              <bitRange>[18:18]</bitRange>
              <access>read-writeOnce</access>
            </field>
            <field>
              <name>I2C_NO_DEV_AUTO</name>
              <description>Interrupt pending signal for interface start 
Write 1 to clear this bit.  
0 = No interrupt 
1 = Interrupt
W1C</description>
              <bitRange>[17:17]</bitRange>
              <access>read-writeOnce</access>
            </field>
            <field>
              <name>I2C_NO_DEV_ACK_AUTO</name>
              <description>Interrupt pending signal for interface start 
Write 1 to clear this bit.  
0 = No interrupt 
1 = Interrupt
W1C</description>
              <bitRange>[16:16]</bitRange>
              <access>read-writeOnce</access>
            </field>
            <field>
              <name>I2C_TRANS_ABORT_AUTO</name>
              <description>Interrupt pending signal for interface start 
Write 1 to clear this bit.  
0 = No interrupt 
1 = Interrupt
W1C</description>
              <bitRange>[15:15]</bitRange>
              <access>read-writeOnce</access>
            </field>
            <field>
              <name>I2C_TRANS_DONE_AUTO</name>
              <description>Interrupt pending signal for I2C
Write 1 to clear this bit.
0 = No interrupt
1 = Interrupt</description>
              <bitRange>[14:14]</bitRange>
              <access>read-writeOnce</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>Interrupt pending signal for I2C
Write 1 to clear this bit.
0 = No interrupt
1 = Interrupt</description>
              <bitRange>[13:13]</bitRange>
              <access>read-writeOnce</access>
            </field>
            <field>
              <name>Stretch</name>
              <description>Interrupt pending signal for I2C
Write 1 to clear this bit.
0 = No interrupt
1 = Interrupt</description>
              <bitRange>[12:12]</bitRange>
              <access>read-writeOnce</access>
            </field>
            <field>
              <name>Stop</name>
              <description>Interrupt pending signal for I2C
Write 1 to clear this bit.
0 = No interrupt
1 = Interrupt</description>
              <bitRange>[11:11]</bitRange>
              <access>read-writeOnce</access>
            </field>
            <field>
              <name>INT_START_PEND</name>
              <description>Interrupt pending signal for I2C
Write 1 to clear this bit.
0 = No interrupt
1 = Interrupt</description>
              <bitRange>[10:10]</bitRange>
              <access>read-writeOnce</access>
            </field>
            <field>
              <name>INT_I2C_PEND</name>
              <description>Interrupt pending signal for I2C
Write 1 to clear this bit.
0 = No interrupt
1 = Interrupt</description>
              <bitRange>[9:9]</bitRange>
              <access>read-writeOnce</access>
            </field>
            <field>
              <name>Modem</name>
              <description>Write 1 to clear this bit
Read
0 = No-interrupt
1 = Interrupt occurs
</description>
              <bitRange>[8:8]</bitRange>
              <access>read-writeOnce</access>
            </field>
            <field>
              <name>Error</name>
              <description>Write 1 to clear this bit
Read: If an error occurs, this bit is set to 1
0 = No error occurred
1 = Error occurred</description>
              <bitRange>[7:7]</bitRange>
              <access>read-writeOnce</access>
            </field>
            <field>
              <name>RSVD0</name>
              <description>reserved</description>
              <bitRange>[6:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFIFO_ALMOSTFULL_INT_PEND</name>
              <description>Interrupt pending signal for Rx FIFO almost full
Write 1 to clear this bit.
READ:
0 = Data in Rx FIFO is less than trigger level
1 = Data in Rx FIFO is more than trigger level</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TXFIFO_ALMOSTEMPTY_INT_PEND</name>
              <description>Interrupt pending signal for Tx FIFO almost empty
Write 1 to clear this bit.
READ:
0 = Data in Tx FIFO is more than trigger level
1 = Data in Tx FIFO is less than trigger level</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USI_FIFO_STAT</name>
          <description>USI FIFO Status Register</description>
          <addressOffset>0x0030</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x08000800</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[31:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFIFO_EMPTY</name>
              <description>Rx FIFO empty signal
0 = Non-empty
1 = Empty</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFIFO_FULL</name>
              <description>Rx FIFO full signal
0 = Non-full
1 = Full
</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFIFO_LEVEL</name>
              <description>Data level in Rx FIFO</description>
              <bitRange>[25:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD1</name>
              <description>No Description</description>
              <bitRange>[15:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TXFIFO_EMPTY</name>
              <description>Tx FIFO empty signal
0 = Non-empty
1 = Empty
</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TXFIFO_FULL</name>
              <description>Tx FIFO full signal
0 = Non-full
1 = Full
</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TXFIFO_LEVEL</name>
              <description>Data level in Tx FIFO</description>
              <bitRange>[9:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USI_TXDATA</name>
          <description>USI Transmitted Data Buffer Register</description>
          <addressOffset>0x0034</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0xDEADBEAF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TXFIFO_WDATA</name>
              <description>Transmit data buffer for USI</description>
              <bitRange>[31:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USI_RXDATA</name>
          <description>USI Received Data Buffer Register</description>
          <addressOffset>0x0038</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RXFIFO_RDATA</name>
              <description>Received data buffer for USI</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_CONF</name>
          <description>I2C Configuration</description>
          <addressOffset>0x0040</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x86990CFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>AUTO_MODE</name>
              <description>Auto flow control for I2C master
1 = Auto control. I2C master automatically controls the whole transaction.
0 = Manual control. Software manually controls transaction.
</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ADDRMODE</name>
              <description>Selection of I2C interface address mode
1 = 10-bit address mode
0 = 7-bit address mode
</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD2</name>
              <description>Need to be Zero</description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>I2C_WAKEUP_EN</name>
              <description>I2C Wakeup source generation enable
0 = Disable
1 = Enable
After I2C address matching compare, wakeup signal is generated.
</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD1</name>
              <description>No Description</description>
              <bitRange>[27:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>I2C_WAKE_SEL</name>
              <description>Wake-up type selection
0 = Address matching type
1 = Start monitor type</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FILTER_EN_SCL</name>
              <description>SCL signal filter enable</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FLT_CYCLE_SCL</name>
              <description>No Description</description>
              <bitRange>[15:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCL_STRETCH_M_REL</name>
              <description>I2C stretch release bit, when I2C stretch is used as manual mode
I2C_CONF[27] is stretch type selection bit. 
0 = Auto
1 = Manual 
When you set this bit to manual and StretchEn bit is enabled, then set this bit to 1 every time to release the I2C stretch function.
If SCL_STRETCH_EN is enabled, manual stretch can be controlled.
</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCL_STRETCH_EN</name>
              <description>I2C stretch mode enable
0 = Stretch disable
1 = I2C stretch mode enable
</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD0</name>
              <description>No Description</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_AUTO_CONF</name>
          <description>I2C Configuration for Auto Mode</description>
          <addressOffset>0x0044</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x000300FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>I2C_MASTER_RUN</name>
              <description>I2C run signal for master mode
To start data transfer under I2C master mode, write 1 to this bit.
</description>
              <bitRange>[31:31]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>RSVD2</name>
              <description>No Description</description>
              <bitRange>[30:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>StretchHoldTime</name>
              <description>Need to control by S/W
Stretch release time after FIFO control.
The time is (STR_HOLD_TIME)x(EXT_CLK) 
This is only applicable for slave mode.</description>
              <bitRange>[24:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C_STOPAFTERTRANS</name>
              <description>For auto_mode only. If this bit is set, i2c master asserts stop condition after entire transaction is complete, either success or failure.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C_READ_WRITE</name>
              <description>Type of transaction 
For AUTO_MODE only.
0 = Write (Tx)
1 = Read (Rx)
</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C_TRANS_LEN</name>
              <description>Length of transaction (number of bytes to Rx or Tx)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_TIMEOUT</name>
          <description>Time Out for I2C Master</description>
          <addressOffset>0x0048</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x800000FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TIMEOUT_EN</name>
              <description>Enables timing out</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD1</name>
              <description>No Description</description>
              <bitRange>[30:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TOUT_COUNT</name>
              <description>Timing out for master Rx/Tx</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_MANUAL_CMD</name>
          <description>Command Register for Manual Mode</description>
          <addressOffset>0x004C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TX_DATA</name>
              <description>Specifies the data to be transmitted</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_DATA</name>
              <description>No Description</description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SCLDelayEn</name>
              <description>SCL signal delay filter enable
0 = Disable
1 = Enable</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCLGlitchWidth</name>
              <description>SCL glitch width to be removed
00 = rsvd
01 = rsvd
10 = 50 ns
11 = 60 ns</description>
              <bitRange>[14:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SDADelayEn</name>
              <description>SCL signal delay filter enable
0 = Disable
1 = Enable</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SDAGlitchWidth</name>
              <description>0 = No effect
1 = When address match </description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SlaveRxNack</name>
              <description>0 = No effect
1 = When address match </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SlaveTxNack</name>
              <description>0 = No effect
1 = Stretch release manually</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD0</name>
              <description>No Description</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_ACK</name>
              <description>No Description</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>READ_DATA</name>
              <description>No Description</description>
              <bitRange>[4:4]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>SEND_DATA</name>
              <description>No Description</description>
              <bitRange>[3:3]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>SEND_STOP</name>
              <description>No Description</description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>SEND_RESTART</name>
              <description>No Description</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>SEND_START</name>
              <description>No Description</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_TRANS_STATUS</name>
          <description>I2C Transfer Status</description>
          <addressOffset>0x0050</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD3</name>
              <description>No Description</description>
              <bitRange>[31:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SlaveRxTxFlag</name>
              <description>On slave busy, read/write state monitoring flag when slave is busy</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>addrMatchWakeup</name>
              <description>address match wakeup flag(from i2c_wakeup module)</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>MASTER_BUSY</name>
              <description>Indicates whether the data is transferring or not in master mode
1 = The data is transferring
2 = The data is not transferring
</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SLAVE_BUSY</name>
              <description>Indicates whether the data is transferring or not in slave mode
1 = The data is transferring
2 = The data is not transferring 
</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>STRETCH</name>
              <description>Indicates clock stretch in slave mode 
0 = N/A
1 = Clock stretching 
</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD2</name>
              <description>No Description</description>
              <bitRange>[14:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SLAVEADDR_MATCH</name>
              <description>I2C slave address is matched
For slave mode only (I2C interrupt source).
</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TRANS_DONE_NOACK_MANUAL</name>
              <description>Transfer completed without ACK received 
For manual mode only.
NOTE: After master ID (HS mode), this bit should be asserted
(I2C interrupt source).
</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOSE_ARB_MANUAL</name>
              <description>Lost arbitration during executing command
For manual mode only (I2C interrupt source).
</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TRANS_DONE_MANUAL</name>
              <description>One byte (data or address) is transmitted successfully, one byte (data) is received successfully, or command (start or stop) is completed
For manual mode only (I2C interrupt source).
Note: In HS mode, completion of master ID transfer does not assert this bit.
</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD1</name>
              <description>No Description</description>
              <bitRange>[7:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TIMEOUT_AUTO</name>
              <description>Time out during auto mode transaction</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>NO_DEV_AUTO</name>
              <description>No device responds to the address 
No device is selected by master. For auto mode only (I2C interrupt source).
</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>NO_DEV_ACK_AUTO</name>
              <description>Device does not return ACK during master transmission 
For auto mode only (I2C interrupt source).
</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TRANS_ABORT_AUTO</name>
              <description>Lost arbitration during transaction 
For auto mode only (I2C interrupt source).
</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TRANSFER_DONE_AUTO</name>
              <description>Command is executed successfully
This bit is automatically cleared by software read. 
For auto mode only (I2C interrupt source).
</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_TIMING_FS1</name>
          <description>TimTiming Parameter for Fast-Speed Mode</description>
          <addressOffset>0x0060</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x0F0F0F0F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>StartSetupTime</name>
              <description>Start condition setup timing (Start condition after SCL rising-edge)</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>StartHoldTime</name>
              <description>Start condition hold timing (Start condition leads to SCL falling-edge)</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>StopSetupTime</name>
              <description>STOP condition setup timing.(Stop condition after SCL rising-edge)</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>StopHoldTime</name>
              <description>Stop condition hold timing.(Stop condition leads to SCL falling-edge)</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_TIMING_FS2</name>
          <description>Timing Parameter for Fast-Speed Mode</description>
          <addressOffset>0x0064</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x0F0FFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DataSetupTime</name>
              <description>Data setup timing</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCLLowWidth</name>
              <description>SCL low Period</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCLHighWidth</name>
              <description>SCL high period</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_TIMING_FS3</name>
          <description>Timing Parameter for Fast-Speed Mode</description>
          <addressOffset>0x0068</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00FF00FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD2</name>
              <description>No Description</description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PClkDivider</name>
              <description>The SYSCLK divider factor when working in FS-mode</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD1</name>
              <description>No Description</description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ReStartWidth</name>
              <description>Re-start condition</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_TIMING_SLA</name>
          <description>Timing Parameter for I2C Slave</description>
          <addressOffset>0x006C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x0000000F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>I2C_WAKE_RX_ADDR</name>
              <description>No Description</description>
              <bitRange>[30:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>I2C_WAKE_ADDR_OPT_EN</name>
              <description>No Description</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C_WAKE_ADDR_OPT</name>
              <description>No Description</description>
              <bitRange>[22:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C_TDATA_HD_SLA</name>
              <description>No Description</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_ADDR</name>
          <description>Address Register
I2C slave address
I2C master ID
Slave address for master</description>
          <addressOffset>0x0070</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xFF0FFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MASTERID</name>
              <description>Master ID for I2C master 
For auto mode and HS mode only
</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[23:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SLAVE_ADDR_MAS</name>
              <description>Slave address for I2C master 
For auto mode only.
</description>
              <bitRange>[19:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SLAVE_ADDR_SLA</name>
              <description>Slave address for I2C slave</description>
              <bitRange>[9:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <!--I2CB1-->
    <peripheral derivedFrom="I2CB0">
      <name>I2CB1</name>
      <baseAddress>0x40021400</baseAddress>
      <interrupt>
        <name>I2CB1</name>
        <description>There are sub-interrupts on I2C B 1 interface block.</description>
        <value>34</value>
      </interrupt>
    </peripheral>
    <!--UART0-->
    <peripheral>
      <name>UART0</name>
      <version>1.0</version>
      <description>UART0</description>
      <headerStructName>UART0</headerStructName>
      <baseAddress>0x40022000</baseAddress>
      <size>32</size>
      <access>read-write</access>
      <addressBlock>
        <offset>0</offset>
        <size>0x80</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>UART0</name>
        <description>There are sub-interrupts on SPI Slave interface block</description>
        <value>35</value>
      </interrupt>
      <registers>
        <register>
          <name>USI_CTL</name>
          <description>USI Control Register</description>
          <addressOffset>0x0000</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000003</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SwRstIntStat</name>
              <description>Indicates software reset signal
This bit clears the Rx/Tx FIFO data and USI_STATUS registers and bits. 
0 = Inactive 
1 = Active 
NOTE: This bit cannot clear automatically when set by writing a 1. So you should release this bit by writing a 0</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SW_RST</name>
              <description>Indicates software reset signal
This bit clears USI_STATUS. 
0 = Inactive S/W reset 
1 = Active S/W reset
NOTE: This bit cannot clear automatically when set by writing a 1. So you should release this bit by writing a 0</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD3</name>
              <description>Reserved</description>
              <bitRange>[29:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_HWORD_SWAP</name>
              <description>Turn on or turn off half-word swap operation on Tx channel
0 = Off
1 = On</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_BYTE_SWAP</name>
              <description>Turn on or turn off byte swap operation on Tx channel
0 = Off
1 = On</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_BIT_SWAP</name>
              <description>Turn on or turn off bit swap operation on Tx channel
0 = Off
1 = On</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_HWORD_SWAP</name>
              <description>Turn on or turn off half-word swap operation on Rx channel
0 = Off
1 = On</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_BYTE_SWAP</name>
              <description>Turn on or turn off byte swap operation on Rx channel
0 = Off
1 = On
</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_BIT_SWAP</name>
              <description>Turn on or turn off bit swap operation on Rx channel
0 = Off
1 = On
</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD2</name>
              <description>Reserved</description>
              <bitRange>[15:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BUS_WIDTH</name>
              <description>00 = Byte
01 = Half-word
10 = Word
11 = Reserved
</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CH_WIDTH</name>
              <description>00 = Byte
01 = Half-word
10 = Word
11 = Reserved
NOTE: This bit should be set to 00 for I2C and UART functions.
</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD1</name>
              <description>Reserved</description>
              <bitRange>[9:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TXCH_ON</name>
              <description>Specifies the Tx channel enable signal
0 = Disable
1 = Enable
NOTE: TXCHON must be set after all configuration is completed, that is, configuration cannot be set after Tx channels start working.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXCH_ON</name>
              <description>Specifies the Rx channel enable signal
0 = Disable
1 = Enable
NOTE: RXCHON must be set after all configuration is completed, that is, configuration cannot be set after Rx channels start working.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_MODE</name>
              <description>Determines the function used to read data from transmit buffer register
0 = Interrupt
1 = DMA</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_MODE</name>
              <description>Determines the function used to write data into receive buffer register
0 = Interrupt 
1 = DMA</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MS_MODE</name>
              <description>Determines whether USI is master or slave
0 = Slave
1 = Master</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD0</name>
              <description>Reserved</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FUNC_MODE</name>
              <description>Specifies the function mode bits
00 = SPI function
01 = I2C function
10 = UART function
11 = Reserved</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USI_FIFO_CTL</name>
          <description>USI FIFO Control Register</description>
          <addressOffset>0x0004</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00200203</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD2</name>
              <description>No Description</description>
              <bitRange>[31:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TXFIFO_TRIG_LEVEL</name>
              <description>Specifies the trigger level to generate TXFIFO_ALMOST_EMPTY interrupt
If the byte number in Tx FIFO is less than the trigger level, the TXFIFO_ALMOST_EMPTY interrupt is generated.
NOTE: The trigger level is used for interrupt.
The maximum value is 272.
</description>
              <bitRange>[25:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD1</name>
              <description>No Description</description>
              <bitRange>[15:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFIFO_TRIG_LEVEL</name>
              <description>Specifies the trigger level to generate RXFIFO_ALMOST_FULL interrupt
If the byte number in Rx FIFO is more than the trigger level, the RXFIFO_ALMOST_FULL interrupt is generated.
NOTE: The trigger level is used for interrupt.
The maximum value is 272.
</description>
              <bitRange>[13:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFIFO_RESET</name>
              <description>Specifies Tx FIFO reset for FIFO flush
This is not released automatically. 
0 = No effect 
1 = Reset
</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXFIFO_RESET</name>
              <description>Specifies Rx FIFO reset for FIFO flush 
This is not released automatically. 
0 = No effect 
1 = Reset
</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFIFO_EN</name>
              <description>Specifies the Tx FIFO enable signal
0 = Disable (FIFO-depth = 1 byte) 
1 = Enable (FIFO-depth = 64 bytes)
</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXFIFO_EN</name>
              <description>Specifies the Rx FIFO enable signal
0 = Disable (FIFO-depth = 1 byte)
1 = Enable (FIFO-depth = 64 bytes)
</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USI_CLK_CTL</name>
          <description>USI Clock Control Register</description>
          <addressOffset>0x000C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000002</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>UARTTX_BIT_GAP</name>
              <description>UART Tx sampling type selection
For 16 sampling, set this field as 0x0
For 8 sampling, set this field as 0x8
</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD2</name>
              <description>No Description</description>
              <bitRange>[27:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BRDIV</name>
              <description>Specifies the baud rate division value</description>
              <bitRange>[19:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>USICLK_SEL</name>
              <description>USI clock source selection
0 = HCLKsys
1 = USICLK
NOTE:	If USICLK_SEL_EN = 0, then this value is ignored.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>USICLK_SEL_EN</name>
              <description>USI clock source selection enable
0 = USICLK (for UART mode) or HCLKsys (for SPI and I2C modes)
1 = Determined by USICLK_SEL bit (HCLK sys or USICLK) 
</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD1</name>
              <description>No Description</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLKEN</name>
              <description>No Description</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USI_CLK_SLOT</name>
          <description>USI Clock Slot Register for Non-Integer Divider</description>
          <addressOffset>0x0010</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[31:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CLK_SLOT</name>
              <description>Selects the slot where clock generator divides clock source
To see Table 14 2 and Table 14 3
NOTE:	In case of 8 sampling, USI_CLK_SLOT uses 8-LSB only</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_CTL</name>
          <description>UART Control Register</description>
          <addressOffset>0x0018</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FLT_CYCLE</name>
              <description>RXD/CTS signal filter cycle selection</description>
              <bitRange>[31:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FLT_EN</name>
              <description>RXD/CTS signal filter enable</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD2</name>
              <description>No Description</description>
              <bitRange>[27:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RtsTrigLvl</name>
              <description>When AFCEN bit is set, these bits determine when to inactive nRTS signal. RxFFLvl &lt; RtsTrigLvl 
NOTE: These bits are used only for UART AFC mode.
</description>
              <bitRange>[22:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AFCEn</name>
              <description>Enable signal for auto flow control
0 = Disable
1 = Enable
</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD1</name>
              <description>Reserved bit</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ManualRTS</name>
              <description>If AFCEN bit is enabled, this value is ignored. In this case, the chip controls nRTS automatically
If AFCEN bit is disabled, nRTS must be controlled by software.
0 = H level (Inactive nRTS) 
1 = L level (Active nRTS)
</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UART_SAMP</name>
              <description>0 = 16 sampling
1 = 8 sampling
</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SendBreak</name>
              <description>Setting this bit causes UART to send a break signal during 1 frame time
This bit is auto-cleared after detecting the break-send request.  
0 = Normal transmit
1 = Sends break signal
</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SpeedOpt</name>
              <description>UART speed option
0 = Disables
1 = Enables(Ignore Stop bit)
</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Wlength</name>
              <description>ndicates the number of data bits to be transmitted or received per frame
00 = 5-bit 
01 = 6-bit 
10 = 7-bit 
11 = 8-bit
</description>
              <bitRange>[6:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>StopBit</name>
              <description>Specifies how many stop bits are used for end-of-frame signal
0 = One stop bit per frame
1 = Two stop bits per frame
</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ParityMode</name>
              <description>Specify the parity type during transmit and receive operation
0xx = No parity
100 = Odd parity
101 = Even parity
110 = Parity forced/checked as 1 
111 = Parity forced/checked as 0
</description>
              <bitRange>[3:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD0</name>
              <description>Reserved bit
Must be 0
</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USI_INT_EN</name>
          <description>USI Interrupt Enable Register</description>
          <addressOffset>0x0020</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD1</name>
              <description>reserved</description>
              <bitRange>[31:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>I2C_SLAVEADDR_MATCH</name>
              <description>Interrupt pending signal for interface start 
Write 1 to clear this bit.  
0 = No interrupt 
1 = Interrupt
W1C</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C_LOSE_ARB_MANUAL</name>
              <description>Interrupt pending signal for interface start 
Write 1 to clear this bit.  
0 = No interrupt 
1 = Interrupt
W1C</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C_TRANS_DONE_MANUAL</name>
              <description>Interrupt pending signal for interface start 
Write 1 to clear this bit.  
0 = No interrupt 
1 = Interrupt
W1C</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C_TRANS_DONE_NOACK_MANUAL</name>
              <description>Interrupt pending signal for interface start 
Write 1 to clear this bit.  
0 = No interrupt 
1 = Interrupt
W1C</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C_TIMEOUT_AUTO</name>
              <description>Interrupt pending signal for interface start 
Write 1 to clear this bit.  
0 = No interrupt 
1 = Interrupt
W1C</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C_NO_DEV_AUTO</name>
              <description>Interrupt pending signal for interface start 
Write 1 to clear this bit.  
0 = No interrupt 
1 = Interrupt
W1C</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C_NO_DEV_ACK_AUTO</name>
              <description>Interrupt pending signal for interface start 
Write 1 to clear this bit.  
0 = No interrupt 
1 = Interrupt
W1C</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C_TRANS_ABORT_AUTO</name>
              <description>Interrupt pending signal for interface start 
Write 1 to clear this bit.  
0 = No interrupt 
1 = Interrupt
W1C</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C_TRANS_DONE_AUTO</name>
              <description>Interrupt pending signal for I2C
Write 1 to clear this bit.
0 = No interrupt
1 = Interrupt</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>Interrupt pending signal for I2C
Write 1 to clear this bit.
0 = No interrupt
1 = Interrupt</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Stretch</name>
              <description>Interrupt pending signal for I2C
Write 1 to clear this bit.
0 = No interrupt
1 = Interrupt</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Stop</name>
              <description>Interrupt pending signal for I2C
Write 1 to clear this bit.
0 = No interrupt
1 = Interrupt</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INT_START_PEND</name>
              <description>Interrupt pending signal for I2C
Write 1 to clear this bit.
0 = No interrupt
1 = Interrupt</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INT_I2C_PEND</name>
              <description>Interrupt pending signal for I2C
Write 1 to clear this bit.
0 = No interrupt
1 = Interrupt</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Modem</name>
              <description>Write 1 to clear this bit
Read
0 = No-interrupt
1 = Interrupt occurs
</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Error</name>
              <description>Write 1 to clear this bit
Read: If an error occurs, this bit is set to 1
0 = No error occurred
1 = Error occurred</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD0</name>
              <description>reserved</description>
              <bitRange>[6:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXFIFO_ALMOSTFULL_INT_PEND</name>
              <description>Interrupt pending signal for Rx FIFO almost full
Write 1 to clear this bit.
READ:
0 = Data in Rx FIFO is less than trigger level
1 = Data in Rx FIFO is more than trigger level</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFIFO_ALMOSTEMPTY_INT_PEND</name>
              <description>Interrupt pending signal for Tx FIFO almost empty
Write 1 to clear this bit.
READ:
0 = Data in Tx FIFO is more than trigger level
1 = Data in Tx FIFO is less than trigger level</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USI_INT_STAT</name>
          <description>USI Interrupt Register</description>
          <addressOffset>0x0024</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD1</name>
              <description>reserved</description>
              <bitRange>[31:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>I2C_SLAVEADDR_MATCH</name>
              <description>Interrupt pending signal for interface start 
Write 1 to clear this bit.  
0 = No interrupt 
1 = Interrupt
W1C</description>
              <bitRange>[22:22]</bitRange>
              <access>read-writeOnce</access>
            </field>
            <field>
              <name>I2C_LOSE_ARB_MANUAL</name>
              <description>Interrupt pending signal for interface start 
Write 1 to clear this bit.  
0 = No interrupt 
1 = Interrupt
W1C</description>
              <bitRange>[21:21]</bitRange>
              <access>read-writeOnce</access>
            </field>
            <field>
              <name>I2C_TRANS_DONE_MANUAL</name>
              <description>Interrupt pending signal for interface start 
Write 1 to clear this bit.  
0 = No interrupt 
1 = Interrupt
W1C</description>
              <bitRange>[20:20]</bitRange>
              <access>read-writeOnce</access>
            </field>
            <field>
              <name>I2C_TRANS_DONE_NOACK_MANUAL</name>
              <description>Interrupt pending signal for interface start 
Write 1 to clear this bit.  
0 = No interrupt 
1 = Interrupt
W1C</description>
              <bitRange>[19:19]</bitRange>
              <access>read-writeOnce</access>
            </field>
            <field>
              <name>I2C_TIMEOUT_AUTO</name>
              <description>Interrupt pending signal for interface start 
Write 1 to clear this bit.  
0 = No interrupt 
1 = Interrupt
W1C</description>
              <bitRange>[18:18]</bitRange>
              <access>read-writeOnce</access>
            </field>
            <field>
              <name>I2C_NO_DEV_AUTO</name>
              <description>Interrupt pending signal for interface start 
Write 1 to clear this bit.  
0 = No interrupt 
1 = Interrupt
W1C</description>
              <bitRange>[17:17]</bitRange>
              <access>read-writeOnce</access>
            </field>
            <field>
              <name>I2C_NO_DEV_ACK_AUTO</name>
              <description>Interrupt pending signal for interface start 
Write 1 to clear this bit.  
0 = No interrupt 
1 = Interrupt
W1C</description>
              <bitRange>[16:16]</bitRange>
              <access>read-writeOnce</access>
            </field>
            <field>
              <name>I2C_TRANS_ABORT_AUTO</name>
              <description>Interrupt pending signal for interface start 
Write 1 to clear this bit.  
0 = No interrupt 
1 = Interrupt
W1C</description>
              <bitRange>[15:15]</bitRange>
              <access>read-writeOnce</access>
            </field>
            <field>
              <name>I2C_TRANS_DONE_AUTO</name>
              <description>Interrupt pending signal for I2C
Write 1 to clear this bit.
0 = No interrupt
1 = Interrupt</description>
              <bitRange>[14:14]</bitRange>
              <access>read-writeOnce</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>Interrupt pending signal for I2C
Write 1 to clear this bit.
0 = No interrupt
1 = Interrupt</description>
              <bitRange>[13:13]</bitRange>
              <access>read-writeOnce</access>
            </field>
            <field>
              <name>Stretch</name>
              <description>Interrupt pending signal for I2C
Write 1 to clear this bit.
0 = No interrupt
1 = Interrupt</description>
              <bitRange>[12:12]</bitRange>
              <access>read-writeOnce</access>
            </field>
            <field>
              <name>Stop</name>
              <description>Interrupt pending signal for I2C
Write 1 to clear this bit.
0 = No interrupt
1 = Interrupt</description>
              <bitRange>[11:11]</bitRange>
              <access>read-writeOnce</access>
            </field>
            <field>
              <name>INT_START_PEND</name>
              <description>Interrupt pending signal for I2C
Write 1 to clear this bit.
0 = No interrupt
1 = Interrupt</description>
              <bitRange>[10:10]</bitRange>
              <access>read-writeOnce</access>
            </field>
            <field>
              <name>INT_I2C_PEND</name>
              <description>Interrupt pending signal for I2C
Write 1 to clear this bit.
0 = No interrupt
1 = Interrupt</description>
              <bitRange>[9:9]</bitRange>
              <access>read-writeOnce</access>
            </field>
            <field>
              <name>Modem</name>
              <description>Write 1 to clear this bit
Read
0 = No-interrupt
1 = Interrupt occurs
</description>
              <bitRange>[8:8]</bitRange>
              <access>read-writeOnce</access>
            </field>
            <field>
              <name>Error</name>
              <description>Write 1 to clear this bit
Read: If an error occurs, this bit is set to 1
0 = No error occurred
1 = Error occurred</description>
              <bitRange>[7:7]</bitRange>
              <access>read-writeOnce</access>
            </field>
            <field>
              <name>RSVD0</name>
              <description>reserved</description>
              <bitRange>[6:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFIFO_ALMOSTFULL_INT_PEND</name>
              <description>Interrupt pending signal for Rx FIFO almost full
Write 1 to clear this bit.
READ:
0 = Data in Rx FIFO is less than trigger level
1 = Data in Rx FIFO is more than trigger level</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TXFIFO_ALMOSTEMPTY_INT_PEND</name>
              <description>Interrupt pending signal for Tx FIFO almost empty
Write 1 to clear this bit.
READ:
0 = Data in Tx FIFO is more than trigger level
1 = Data in Tx FIFO is less than trigger level</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USI_ERROR_STAT</name>
          <description>USI FIFO Status Register</description>
          <addressOffset>0x002C</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[31:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BreakErr</name>
              <description>Break error for byte0</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FrameErr</name>
              <description>Frame error for byte0
0 = No frame error occurred
1 = Frame error occurred</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ParityErr</name>
              <description>Parity error for byte0
0 = No parity error occurred
1 = Parity error occurred</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USI_FIFO_STAT</name>
          <description>USI FIFO Status Register</description>
          <addressOffset>0x0030</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x08000800</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[31:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFIFO_EMPTY</name>
              <description>Rx FIFO empty signal
0 = Non-empty
1 = Empty</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFIFO_FULL</name>
              <description>Rx FIFO full signal
0 = Non-full
1 = Full
</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFIFO_LEVEL</name>
              <description>Data level in Rx FIFO</description>
              <bitRange>[25:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD1</name>
              <description>No Description</description>
              <bitRange>[15:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TXFIFO_EMPTY</name>
              <description>Tx FIFO empty signal
0 = Non-empty
1 = Empty
</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TXFIFO_FULL</name>
              <description>Tx FIFO full signal
0 = Non-full
1 = Full
</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TXFIFO_LEVEL</name>
              <description>Data level in Tx FIFO</description>
              <bitRange>[9:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USI_TXDATA</name>
          <description>USI Transmitted Data Buffer Register</description>
          <addressOffset>0x0034</addressOffset>
          <size>32</size>
          <access>write-only</access>
          <resetValue>0xDEADBEAF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TXFIFO_WDATA</name>
              <description>Transmit data buffer for USI</description>
              <bitRange>[31:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USI_RXDATA</name>
          <description>USI Received Data Buffer Register</description>
          <addressOffset>0x0038</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RXFIFO_RDATA</name>
              <description>Received data buffer for USI</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <!--UART1-->
    <peripheral derivedFrom="UART0">
      <name>UART1</name>
      <baseAddress>0x40022400</baseAddress>
      <interrupt>
        <name>UART1</name>
        <description>There are sub-interrupts on UART1 interface block</description>
        <value>36</value>
      </interrupt>
    </peripheral>
    <!--GPIO-->
    <peripheral>
      <name>GPIO</name>
      <version>1.0</version>
      <description>General-Purpose Input Output </description>
      <baseAddress>0x40023000</baseAddress>
      <size>32</size>
      <access>read-write</access>
      <addressBlock>
        <offset>0</offset>
        <size>0x130</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>GPIO0</name>
        <description>There is interrupts for the GPIO0.</description>
        <value>51</value>
      </interrupt>
      <interrupt>
        <name>GPIO1</name>
        <description>There is interrupts for the GPIO1.</description>
        <value>52</value>
      </interrupt>
      <interrupt>
        <name>GPIO2</name>
        <description>There is interrupts for the GPIO2.</description>
        <value>53</value>
      </interrupt>
      <interrupt>
        <name>GPIO3</name>
        <description>There is interrupts for the GPIO3.</description>
        <value>54</value>
      </interrupt>
      <interrupt>
        <name>GPIO4</name>
        <description>There is interrupts for the GPIO4.</description>
        <value>55</value>
      </interrupt>
      <interrupt>
        <name>GPIO5</name>
        <description>There is interrupts for the GPIO5.</description>
        <value>56</value>
      </interrupt>
      <interrupt>
        <name>GPIO6</name>
        <description>There is interrupts for the GPIO6.</description>
        <value>57</value>
      </interrupt>
      <interrupt>
        <name>GPIO7</name>
        <description>There is interrupts for the GPIO7.</description>
        <value>58</value>
      </interrupt>
      <interrupt>
        <name>GPIO8</name>
        <description>There is interrupts for the GPIO8.</description>
        <value>59</value>
      </interrupt>
      <interrupt>
        <name>GPIO9</name>
        <description>There is interrupts for the GPIO9.</description>
        <value>60</value>
      </interrupt>
      <interrupt>
        <name>GPIO10</name>
        <description>There is interrupts for the GPIO10.</description>
        <value>61</value>
      </interrupt>
      <interrupt>
        <name>GPIO11</name>
        <description>There is interrupts for the GPIO11.</description>
        <value>62</value>
      </interrupt>
      <interrupt>
        <name>GPIO12</name>
        <description>There is interrupts for the GPIO12.</description>
        <value>63</value>
      </interrupt>
      <interrupt>
        <name>GPIO13</name>
        <description>There is interrupts for the GPIO13.</description>
        <value>64</value>
      </interrupt>
      <interrupt>
        <name>GPIO14</name>
        <description>There is interrupts for the GPIO14.</description>
        <value>65</value>
      </interrupt>
      <interrupt>
        <name>GPIO15</name>
        <description>There is interrupts for the GPIO15.</description>
        <value>66</value>
      </interrupt>
      <interrupt>
        <name>GPIO16</name>
        <description>There are interrupts for the other GPIOs except of GPIO0~15. </description>
        <value>67</value>
      </interrupt>
      <interrupt>
        <name>GPIO17</name>
        <description>There are interrupts for the other GPIOs except of GPIO0~15. </description>
        <value>68</value>
      </interrupt>
      <interrupt>
        <name>GPIO18</name>
        <description>There are interrupts for the other GPIOs except of GPIO0~15. </description>
        <value>69</value>
      </interrupt>
      <interrupt>
        <name>GPIO19</name>
        <description>There are interrupts for the other GPIOs except of GPIO0~15. </description>
        <value>70</value>
      </interrupt>
      <interrupt>
        <name>GPIO20</name>
        <description>There are interrupts for the other GPIOs except of GPIO0~15. </description>
        <value>71</value>
      </interrupt>
      <interrupt>
        <name>GPIO21</name>
        <description>There are interrupts for the other GPIOs except of GPIO0~15. </description>
        <value>72</value>
      </interrupt>
      <interrupt>
        <name>GPIO22</name>
        <description>There are interrupts for the other GPIOs except of GPIO0~15. </description>
        <value>73</value>
      </interrupt>
      <interrupt>
        <name>GPIO23</name>
        <description>There are interrupts for the other GPIOs except of GPIO0~15. </description>
        <value>74</value>
      </interrupt>
      <interrupt>
        <name>GPIO24</name>
        <description>There are interrupts for the other GPIOs except of GPIO0~15. </description>
        <value>75</value>
      </interrupt>
      <interrupt>
        <name>GPIO25</name>
        <description>There are interrupts for the other GPIOs except of GPIO0~15. </description>
        <value>76</value>
      </interrupt>
      <interrupt>
        <name>GPIO26</name>
        <description>There are interrupts for the other GPIOs except of GPIO0~15. </description>
        <value>77</value>
      </interrupt>
      <interrupt>
        <name>GPIO27</name>
        <description>There are interrupts for the other GPIOs except of GPIO0~15. </description>
        <value>78</value>
      </interrupt>
      <interrupt>
        <name>GPIO28</name>
        <description>There are interrupts for the other GPIOs except of GPIO0~15. </description>
        <value>79</value>
      </interrupt>
      <interrupt>
        <name>GPIO29</name>
        <description>There are interrupts for the other GPIOs except of GPIO0~15. </description>
        <value>80</value>
      </interrupt>
      <interrupt>
        <name>GPIO30</name>
        <description>There are interrupts for the other GPIOs except of GPIO0~15. </description>
        <value>81</value>
      </interrupt>
      <interrupt>
        <name>GPIO31</name>
        <description>There are interrupts for the other GPIOs except of GPIO0~15. </description>
        <value>82</value>
      </interrupt>
      <registers>
        <register>
          <name>GPIODATA</name>
          <description>Read current state or set GPIO pins
Input mode
0 = Associated GPIO is low
1 = Associated GPIO is high
Output mode
0 = Set associated GPIO to low
1 = Set associated GPIO to high</description>
          <addressOffset>0x00</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>GPIO31</name>
              <description>GPIO31</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO30</name>
              <description>GPIO30</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO29</name>
              <description>GPIO29</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO28</name>
              <description>GPIO28</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO27</name>
              <description>GPIO27</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO26</name>
              <description>GPIO26</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO25</name>
              <description>GPIO25</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO24</name>
              <description>GPIO24</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO23</name>
              <description>GPIO23</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO22</name>
              <description>GPIO22</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO21</name>
              <description>GPIO21</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO20</name>
              <description>GPIO20</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO19</name>
              <description>GPIO19</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO18</name>
              <description>GPIO18</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO17</name>
              <description>GPIO17</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO16</name>
              <description>GPIO16</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO15</name>
              <description>GPIO15</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO14</name>
              <description>GPIO14</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO13</name>
              <description>GPIO13</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO12</name>
              <description>GPIO12</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO11</name>
              <description>GPIO11</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO10</name>
              <description>GPIO10</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO9</name>
              <description>GPIO9</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO8</name>
              <description>GPIO8</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO7</name>
              <description>GPIO7</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO6</name>
              <description>GPIO6</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO5</name>
              <description>GPIO5</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO4</name>
              <description>GPIO4</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO3</name>
              <description>GPIO3</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO2</name>
              <description>GPIO2</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO1</name>
              <description>GPIO1</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO0</name>
              <description>GPIO0</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIODIR</name>
          <description>Configure GPIO direction
0 = Input mode
1 = Output mode</description>
          <addressOffset>0x04</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GPIO31</name>
              <description>GPIO31</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO30</name>
              <description>GPIO30</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO29</name>
              <description>GPIO29</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO28</name>
              <description>GPIO28</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO27</name>
              <description>GPIO27</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO26</name>
              <description>GPIO26</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO25</name>
              <description>GPIO25</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO24</name>
              <description>GPIO24</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO23</name>
              <description>GPIO23</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO22</name>
              <description>GPIO22</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO21</name>
              <description>GPIO21</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO20</name>
              <description>GPIO20</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO19</name>
              <description>GPIO19</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO18</name>
              <description>GPIO18</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO17</name>
              <description>GPIO17</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO16</name>
              <description>GPIO16</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO15</name>
              <description>GPIO15</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO14</name>
              <description>GPIO14</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO13</name>
              <description>GPIO13</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO12</name>
              <description>GPIO12</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO11</name>
              <description>GPIO11</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO10</name>
              <description>GPIO10</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO9</name>
              <description>GPIO9</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO8</name>
              <description>GPIO8</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO7</name>
              <description>GPIO7</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO6</name>
              <description>GPIO6</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO5</name>
              <description>GPIO5</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO4</name>
              <description>GPIO4</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO3</name>
              <description>GPIO3</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO2</name>
              <description>GPIO2</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO1</name>
              <description>GPIO1</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO0</name>
              <description>GPIO0</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIOOD</name>
          <description>GPIO n output type selection bit
0 = Set output type to push-pull mode
1 = Set output type to open-drain mode</description>
          <addressOffset>0x08</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GPIO31</name>
              <description>GPIO31</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO30</name>
              <description>GPIO30</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO29</name>
              <description>GPIO29</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO28</name>
              <description>GPIO28</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO27</name>
              <description>GPIO27</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO26</name>
              <description>GPIO26</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO25</name>
              <description>GPIO25</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO24</name>
              <description>GPIO24</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO23</name>
              <description>GPIO23</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO22</name>
              <description>GPIO22</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO21</name>
              <description>GPIO21</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO20</name>
              <description>GPIO20</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO19</name>
              <description>GPIO19</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO18</name>
              <description>GPIO18</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO17</name>
              <description>GPIO17</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO16</name>
              <description>GPIO16</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO15</name>
              <description>GPIO15</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO14</name>
              <description>GPIO14</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO13</name>
              <description>GPIO13</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO12</name>
              <description>GPIO12</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO11</name>
              <description>GPIO11</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO10</name>
              <description>GPIO10</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO9</name>
              <description>GPIO9</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO8</name>
              <description>GPIO8</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO7</name>
              <description>GPIO7</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO6</name>
              <description>GPIO6</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO5</name>
              <description>GPIO5</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO4</name>
              <description>GPIO4</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO3</name>
              <description>GPIO3</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO2</name>
              <description>GPIO2</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO1</name>
              <description>GPIO1</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO0</name>
              <description>GPIO0</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIOIRQEN</name>
          <description>GPIO n interrupt enable bit
0 = IRQ disable
1 = IRQ enable
</description>
          <addressOffset>0x0C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GPIO31</name>
              <description>GPIO31</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO30</name>
              <description>GPIO30</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO29</name>
              <description>GPIO29</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO28</name>
              <description>GPIO28</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO27</name>
              <description>GPIO27</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO26</name>
              <description>GPIO26</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO25</name>
              <description>GPIO25</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO24</name>
              <description>GPIO24</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO23</name>
              <description>GPIO23</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO22</name>
              <description>GPIO22</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO21</name>
              <description>GPIO21</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO20</name>
              <description>GPIO20</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO19</name>
              <description>GPIO19</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO18</name>
              <description>GPIO18</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO17</name>
              <description>GPIO17</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO16</name>
              <description>GPIO16</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO15</name>
              <description>GPIO15</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO14</name>
              <description>GPIO14</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO13</name>
              <description>GPIO13</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO12</name>
              <description>GPIO12</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO11</name>
              <description>GPIO11</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO10</name>
              <description>GPIO10</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO9</name>
              <description>GPIO9</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO8</name>
              <description>GPIO8</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO7</name>
              <description>GPIO7</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO6</name>
              <description>GPIO6</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO5</name>
              <description>GPIO5</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO4</name>
              <description>GPIO4</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO3</name>
              <description>GPIO3</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO2</name>
              <description>GPIO2</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO1</name>
              <description>GPIO1</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO0</name>
              <description>GPIO0</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIOIRQPND</name>
          <description>GPIO n interrupt pending bit
Read
0 = Associated GPIO interrupt is not occurred
1 = Associated GPIO interrupt is occurred
Write (Clear only)
0 = Clear pending interrupt
1 = Reserved
</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GPIO31</name>
              <description>GPIO31</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO30</name>
              <description>GPIO30</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO29</name>
              <description>GPIO29</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO28</name>
              <description>GPIO28</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO27</name>
              <description>GPIO27</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO26</name>
              <description>GPIO26</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO25</name>
              <description>GPIO25</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO24</name>
              <description>GPIO24</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO23</name>
              <description>GPIO23</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO22</name>
              <description>GPIO22</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO21</name>
              <description>GPIO21</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO20</name>
              <description>GPIO20</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO19</name>
              <description>GPIO19</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO18</name>
              <description>GPIO18</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO17</name>
              <description>GPIO17</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO16</name>
              <description>GPIO16</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO15</name>
              <description>GPIO15</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO14</name>
              <description>GPIO14</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO13</name>
              <description>GPIO13</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO12</name>
              <description>GPIO12</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO11</name>
              <description>GPIO11</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO10</name>
              <description>GPIO10</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO9</name>
              <description>GPIO9</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO8</name>
              <description>GPIO8</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO7</name>
              <description>GPIO7</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO6</name>
              <description>GPIO6</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO5</name>
              <description>GPIO5</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO4</name>
              <description>GPIO4</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO3</name>
              <description>GPIO3</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO2</name>
              <description>GPIO2</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO1</name>
              <description>GPIO1</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO0</name>
              <description>GPIO0</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIOIRQEDG0</name>
          <description>GPIO0 edge type0 for IRQ
GPIO IRQ egde is determined by GPIOIRQEDG1 and GPIOIRQEDG0 registers. It works by a combination of these registers. The number of GPIOs is 32. Each GPIO matches each bit. 
00 = No IRQ
01 = IRQEN at negative edge
10 = IRQEN at positive edge
11 = IRQEN at both edgeGPIO0 edge type0 for IRQ
</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GPIO31</name>
              <description>GPIO31</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO30</name>
              <description>GPIO30</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO29</name>
              <description>GPIO29</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO28</name>
              <description>GPIO28</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO27</name>
              <description>GPIO27</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO26</name>
              <description>GPIO26</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO25</name>
              <description>GPIO25</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO24</name>
              <description>GPIO24</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO23</name>
              <description>GPIO23</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO22</name>
              <description>GPIO22</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO21</name>
              <description>GPIO21</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO20</name>
              <description>GPIO20</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO19</name>
              <description>GPIO19</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO18</name>
              <description>GPIO18</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO17</name>
              <description>GPIO17</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO16</name>
              <description>GPIO16</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO15</name>
              <description>GPIO15</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO14</name>
              <description>GPIO14</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO13</name>
              <description>GPIO13</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO12</name>
              <description>GPIO12</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO11</name>
              <description>GPIO11</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO10</name>
              <description>GPIO10</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO9</name>
              <description>GPIO9</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO8</name>
              <description>GPIO8</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO7</name>
              <description>GPIO7</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO6</name>
              <description>GPIO6</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO5</name>
              <description>GPIO5</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO4</name>
              <description>GPIO4</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO3</name>
              <description>GPIO3</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO2</name>
              <description>GPIO2</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO1</name>
              <description>GPIO1</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO0</name>
              <description>GPIO0</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIOIRQEDG1</name>
          <description>GPIO0 edge type0 for IRQ
GPIO IRQ egde is determined by GPIOIRQEDG1 and GPIOIRQEDG0 registers. It works by a combination of these registers. The number of GPIOs is 32. Each GPIO matches each bit.
00 = No IRQ
01 = IRQEN at negative edge
10 = IRQEN at positive edge
11 = IRQEN at both edge
</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GPIO31</name>
              <description>GPIO31</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO30</name>
              <description>GPIO30</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO29</name>
              <description>GPIO29</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO28</name>
              <description>GPIO28</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO27</name>
              <description>GPIO27</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO26</name>
              <description>GPIO26</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO25</name>
              <description>GPIO25</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO24</name>
              <description>GPIO24</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO23</name>
              <description>GPIO23</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO22</name>
              <description>GPIO22</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO21</name>
              <description>GPIO21</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO20</name>
              <description>GPIO20</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO19</name>
              <description>GPIO19</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO18</name>
              <description>GPIO18</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO17</name>
              <description>GPIO17</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO16</name>
              <description>GPIO16</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO15</name>
              <description>GPIO15</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO14</name>
              <description>GPIO14</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO13</name>
              <description>GPIO13</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO12</name>
              <description>GPIO12</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO11</name>
              <description>GPIO11</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO10</name>
              <description>GPIO10</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO9</name>
              <description>GPIO9</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO8</name>
              <description>GPIO8</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO7</name>
              <description>GPIO7</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO6</name>
              <description>GPIO6</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO5</name>
              <description>GPIO5</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO4</name>
              <description>GPIO4</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO3</name>
              <description>GPIO3</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO2</name>
              <description>GPIO2</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO1</name>
              <description>GPIO1</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO0</name>
              <description>GPIO0</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIOBYPCLK</name>
          <description>GPIO n bypass clock synchronization bit
0 = System clock synchronization data
1 = Asynchronization data
</description>
          <addressOffset>0x1C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GPIO31</name>
              <description>GPIO31</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO30</name>
              <description>GPIO30</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO29</name>
              <description>GPIO29</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO28</name>
              <description>GPIO28</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO27</name>
              <description>GPIO27</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO26</name>
              <description>GPIO26</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO25</name>
              <description>GPIO25</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO24</name>
              <description>GPIO24</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO23</name>
              <description>GPIO23</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO22</name>
              <description>GPIO22</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO21</name>
              <description>GPIO21</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO20</name>
              <description>GPIO20</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO19</name>
              <description>GPIO19</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO18</name>
              <description>GPIO18</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO17</name>
              <description>GPIO17</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO16</name>
              <description>GPIO16</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO15</name>
              <description>GPIO15</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO14</name>
              <description>GPIO14</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO13</name>
              <description>GPIO13</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO12</name>
              <description>GPIO12</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO11</name>
              <description>GPIO11</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO10</name>
              <description>GPIO10</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO9</name>
              <description>GPIO9</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO8</name>
              <description>GPIO8</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO7</name>
              <description>GPIO7</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO6</name>
              <description>GPIO6</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO5</name>
              <description>GPIO5</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO4</name>
              <description>GPIO4</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO3</name>
              <description>GPIO3</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO2</name>
              <description>GPIO2</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO1</name>
              <description>GPIO1</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO0</name>
              <description>GPIO0</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIOBYPNF</name>
          <description>GPIO n bypass noise filter bit
0 = Bypass
1 = 10 ns glitch free
</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GPIO31</name>
              <description>GPIO31</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO30</name>
              <description>GPIO30</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO29</name>
              <description>GPIO29</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO28</name>
              <description>GPIO28</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO27</name>
              <description>GPIO27</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO26</name>
              <description>GPIO26</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO25</name>
              <description>GPIO25</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO24</name>
              <description>GPIO24</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO23</name>
              <description>GPIO23</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO22</name>
              <description>GPIO22</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO21</name>
              <description>GPIO21</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO20</name>
              <description>GPIO20</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO19</name>
              <description>GPIO19</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO18</name>
              <description>GPIO18</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO17</name>
              <description>GPIO17</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO16</name>
              <description>GPIO16</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO15</name>
              <description>GPIO15</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO14</name>
              <description>GPIO14</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO13</name>
              <description>GPIO13</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO12</name>
              <description>GPIO12</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO11</name>
              <description>GPIO11</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO10</name>
              <description>GPIO10</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO9</name>
              <description>GPIO9</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO8</name>
              <description>GPIO8</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO7</name>
              <description>GPIO7</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO6</name>
              <description>GPIO6</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO5</name>
              <description>GPIO5</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO4</name>
              <description>GPIO4</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO3</name>
              <description>GPIO3</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO2</name>
              <description>GPIO2</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO1</name>
              <description>GPIO1</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO0</name>
              <description>GPIO0</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EnGPIO</name>
          <description>GPIO function enable bit
All pads are MUXed with several function pads. You should enable GPIO to use the pad as GPIO.
0 = Disable
1 = Enable</description>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GPIO31</name>
              <description>GPIO31</description>
              <bitRange>[31:31]</bitRange>
            </field>
            <field>
              <name>GPIO30</name>
              <description>GPIO30</description>
              <bitRange>[30:30]</bitRange>
            </field>
            <field>
              <name>GPIO29</name>
              <description>GPIO29</description>
              <bitRange>[29:29]</bitRange>
            </field>
            <field>
              <name>GPIO28</name>
              <description>GPIO28</description>
              <bitRange>[28:28]</bitRange>
            </field>
            <field>
              <name>GPIO27</name>
              <description>GPIO27</description>
              <bitRange>[27:27]</bitRange>
            </field>
            <field>
              <name>GPIO26</name>
              <description>GPIO26</description>
              <bitRange>[26:26]</bitRange>
            </field>
            <field>
              <name>GPIO25</name>
              <description>GPIO25</description>
              <bitRange>[25:25]</bitRange>
            </field>
            <field>
              <name>GPIO24</name>
              <description>GPIO24</description>
              <bitRange>[24:24]</bitRange>
            </field>
            <field>
              <name>GPIO23</name>
              <description>GPIO23</description>
              <bitRange>[23:23]</bitRange>
            </field>
            <field>
              <name>GPIO22</name>
              <description>GPIO22</description>
              <bitRange>[22:22]</bitRange>
            </field>
            <field>
              <name>GPIO21</name>
              <description>GPIO21</description>
              <bitRange>[21:21]</bitRange>
            </field>
            <field>
              <name>GPIO20</name>
              <description>GPIO20</description>
              <bitRange>[20:20]</bitRange>
            </field>
            <field>
              <name>GPIO19</name>
              <description>GPIO19</description>
              <bitRange>[19:19]</bitRange>
            </field>
            <field>
              <name>GPIO18</name>
              <description>GPIO18</description>
              <bitRange>[18:18]</bitRange>
            </field>
            <field>
              <name>GPIO17</name>
              <description>GPIO17</description>
              <bitRange>[17:17]</bitRange>
            </field>
            <field>
              <name>GPIO16</name>
              <description>GPIO16</description>
              <bitRange>[16:16]</bitRange>
            </field>
            <field>
              <name>GPIO15</name>
              <description>GPIO15</description>
              <bitRange>[15:15]</bitRange>
            </field>
            <field>
              <name>GPIO14</name>
              <description>GPIO14</description>
              <bitRange>[14:14]</bitRange>
            </field>
            <field>
              <name>GPIO13</name>
              <description>GPIO13</description>
              <bitRange>[13:13]</bitRange>
            </field>
            <field>
              <name>GPIO12</name>
              <description>GPIO12</description>
              <bitRange>[12:12]</bitRange>
            </field>
            <field>
              <name>GPIO11</name>
              <description>GPIO11</description>
              <bitRange>[11:11]</bitRange>
            </field>
            <field>
              <name>GPIO10</name>
              <description>GPIO10</description>
              <bitRange>[10:10]</bitRange>
            </field>
            <field>
              <name>GPIO9</name>
              <description>GPIO9</description>
              <bitRange>[9:9]</bitRange>
            </field>
            <field>
              <name>GPIO8</name>
              <description>GPIO8</description>
              <bitRange>[8:8]</bitRange>
            </field>
            <field>
              <name>GPIO7</name>
              <description>GPIO7</description>
              <bitRange>[7:7]</bitRange>
            </field>
            <field>
              <name>GPIO6</name>
              <description>GPIO6</description>
              <bitRange>[6:6]</bitRange>
            </field>
            <field>
              <name>GPIO5</name>
              <description>GPIO5</description>
              <bitRange>[5:5]</bitRange>
            </field>
            <field>
              <name>GPIO4</name>
              <description>GPIO4</description>
              <bitRange>[4:4]</bitRange>
            </field>
            <field>
              <name>GPIO3</name>
              <description>GPIO3</description>
              <bitRange>[3:3]</bitRange>
            </field>
            <field>
              <name>GPIO2</name>
              <description>GPIO2</description>
              <bitRange>[2:2]</bitRange>
            </field>
            <field>
              <name>GPIO1</name>
              <description>GPIO1</description>
              <bitRange>[1:1]</bitRange>
            </field>
            <field>
              <name>GPIO0</name>
              <description>GPIO0</description>
              <bitRange>[0:0]</bitRange>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIONFWIDTH</name>
          <description>Select GPIO noise filter width
00 = 10 ns
01 = 20 ns
10 = 30 ns
11 = 40 ns
</description>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GPIO31</name>
              <description>GPIO31</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO30</name>
              <description>GPIO30</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO29</name>
              <description>GPIO29</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO28</name>
              <description>GPIO28</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO27</name>
              <description>GPIO27</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO26</name>
              <description>GPIO26</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO25</name>
              <description>GPIO25</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO24</name>
              <description>GPIO24</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO23</name>
              <description>GPIO23</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO22</name>
              <description>GPIO22</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO21</name>
              <description>GPIO21</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO20</name>
              <description>GPIO20</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO19</name>
              <description>GPIO19</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO18</name>
              <description>GPIO18</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO17</name>
              <description>GPIO17</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO16</name>
              <description>GPIO16</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO15</name>
              <description>GPIO15</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO14</name>
              <description>GPIO14</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO13</name>
              <description>GPIO13</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO12</name>
              <description>GPIO12</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO11</name>
              <description>GPIO11</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO10</name>
              <description>GPIO10</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO9</name>
              <description>GPIO9</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO8</name>
              <description>GPIO8</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO7</name>
              <description>GPIO7</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO6</name>
              <description>GPIO6</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO5</name>
              <description>GPIO5</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO4</name>
              <description>GPIO4</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO3</name>
              <description>GPIO3</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO2</name>
              <description>GPIO2</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO1</name>
              <description>GPIO1</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO0</name>
              <description>GPIO0</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIOWAKESEL</name>
          <description>GPIO wake-up source selection bit
0 = Do not use wake-up source
1 = Use wake-up source
</description>
          <addressOffset>0x2C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GPIO31</name>
              <description>GPIO31</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO30</name>
              <description>GPIO30</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO29</name>
              <description>GPIO29</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO28</name>
              <description>GPIO28</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO27</name>
              <description>GPIO27</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO26</name>
              <description>GPIO26</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO25</name>
              <description>GPIO25</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO24</name>
              <description>GPIO24</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO23</name>
              <description>GPIO23</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO22</name>
              <description>GPIO22</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO21</name>
              <description>GPIO21</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO20</name>
              <description>GPIO20</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO19</name>
              <description>GPIO19</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO18</name>
              <description>GPIO18</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO17</name>
              <description>GPIO17</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO16</name>
              <description>GPIO16</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO15</name>
              <description>GPIO15</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO14</name>
              <description>GPIO14</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO13</name>
              <description>GPIO13</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO12</name>
              <description>GPIO12</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO11</name>
              <description>GPIO11</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO10</name>
              <description>GPIO10</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO9</name>
              <description>GPIO9</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO8</name>
              <description>GPIO8</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO7</name>
              <description>GPIO7</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO6</name>
              <description>GPIO6</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO5</name>
              <description>GPIO5</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO4</name>
              <description>GPIO4</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO3</name>
              <description>GPIO3</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO2</name>
              <description>GPIO2</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO1</name>
              <description>GPIO1</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO0</name>
              <description>GPIO0</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <!--PAD-->
    <peripheral>
      <name>PAD</name>
      <version>1.0</version>
      <description>IO PAD control</description>
      <baseAddress>0x400B0000</baseAddress>
      <size>32</size>
      <access>read-write</access>
      <addressBlock>
        <offset>0</offset>
        <size>0xA4</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>WKUP</name>
        <description>Wake-up interrupt</description>
        <value>0</value>
      </interrupt>
      <interrupt>
        <name>FPU</name>
        <description>FPU interrupt</description>
        <value>15</value>
      </interrupt>
      <registers>
        <register>
          <name>IOFUNCSEL0</name>
          <description>GPIO PAD name for I/O function selection
00 = I/O function01
01 = I/O function02
10/11 = Reserved</description>
          <addressOffset>0x0020</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0x00000000</resetMask>
          <fields>
            <field>
              <name>PIO15FUNCSEL</name>
              <description>0: ADTRNG, 1:TXD2</description>
              <bitRange>[31:30]</bitRange>
            </field>
            <field>
              <name>PIO14FUNCSEL</name>
              <description>0: PEI0, 1:RXD2</description>
              <bitRange>[25:25]</bitRange>
            </field>
            <field>
              <name>PIO13FUNCSEL</name>
              <description>0: CTS2, 1:MOSIB</description>
              <bitRange>[24:24]</bitRange>
            </field>
            <field>
              <name>PIO12FUNCSEL</name>
              <description>0: RTS2, 1:MISOB</description>
              <bitRange>[23:23]</bitRange>
            </field>
            <field>
              <name>PIO11FUNCSEL</name>
              <description>0: TPWM0, 1:NCSB</description>
              <bitRange>[22:22]</bitRange>
            </field>
            <field>
              <name>PIO10FUNCSEL</name>
              <description>0: MOSIB, 1:RTS0</description>
              <bitRange>[21:21]</bitRange>
            </field>
            <field>
              <name>PIO09FUNCSEL</name>
              <description>0: MISOB, 1:CTS0</description>
              <bitRange>[20:20]</bitRange>
            </field>
            <field>
              <name>PIO08FUNCSEL</name>
              <description>0: NCSB, 1:TXD2</description>
              <bitRange>[19:19]</bitRange>
            </field>
            <field>
              <name>PIO07FUNCSEL</name>
              <description>0: SCKB, 1:RXD2</description>
              <bitRange>[18:18]</bitRange>
            </field>
            <field>
              <name>PIO06FUNCSEL</name>
              <description>0: TCLK1, 1:MISOS</description>
              <bitRange>[13:13]</bitRange>
            </field>
            <field>
              <name>PIO05FUNCSEL</name>
              <description>0: RSVD, 1:MOSIS</description>
              <bitRange>[12:12]</bitRange>
            </field>
            <field>
              <name>PIO04FUNCSEL</name>
              <description>0: RTS0, 1:NCSS</description>
              <bitRange>[11:11]</bitRange>
            </field>
            <field>
              <name>PIO03FUNCSEL</name>
              <description>0: CTS0, 1:SCKS</description>
              <bitRange>[9:9]</bitRange>
            </field>
            <field>
              <name>PIO02FUNCSEL</name>
              <description>0: TCLK0, 1:SCKB</description>
              <bitRange>[7:7]</bitRange>
            </field>
            <field>
              <name>PIO01FUNCSEL</name>
              <description>0: TXD2, 1:SDAM0</description>
              <bitRange>[6:6]</bitRange>
            </field>
            <field>
              <name>PIO00FUNCSEL</name>
              <description>0: RXD2, 1:SCLM0</description>
              <bitRange>[5:5]</bitRange>
            </field>
          </fields>
        </register>
        <register>
          <name>IOFUNCSEL1</name>
          <description>I/O Function Selection Register 1</description>
          <addressOffset>0x0024</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0x00000000</resetMask>
          <fields>
            <field>
              <name>PIO31FUNCSEL</name>
              <description>0: ADTRNG, 1:TXD2</description>
              <bitRange>[31:30]</bitRange>
            </field>
            <field>
              <name>PIO30FUNCSEL</name>
              <description>0: PEI0, 1:RXD2</description>
              <bitRange>[25:25]</bitRange>
            </field>
            <field>
              <name>PIO29FUNCSEL</name>
              <description>0: CTS2, 1:MOSIB</description>
              <bitRange>[24:24]</bitRange>
            </field>
            <field>
              <name>PIO28FUNCSEL</name>
              <description>0: RTS2, 1:MISOB</description>
              <bitRange>[23:23]</bitRange>
            </field>
            <field>
              <name>PIO27FUNCSEL</name>
              <description>0: TPWM0, 1:NCSB</description>
              <bitRange>[22:22]</bitRange>
            </field>
            <field>
              <name>PIO26FUNCSEL</name>
              <description>0: MOSIB, 1:RTS0</description>
              <bitRange>[21:21]</bitRange>
            </field>
            <field>
              <name>PIO25FUNCSEL</name>
              <description>0: MISOB, 1:CTS0</description>
              <bitRange>[20:20]</bitRange>
            </field>
            <field>
              <name>PIO24FUNCSEL</name>
              <description>0: NCSB, 1:TXD2</description>
              <bitRange>[19:19]</bitRange>
            </field>
            <field>
              <name>PIO23FUNCSEL</name>
              <description>0: SCKB, 1:RXD2</description>
              <bitRange>[18:18]</bitRange>
            </field>
            <field>
              <name>PIO22FUNCSEL</name>
              <description>0: TCLK1, 1:MISOS</description>
              <bitRange>[13:13]</bitRange>
            </field>
            <field>
              <name>PIO21FUNCSEL</name>
              <description>0: RSVD, 1:MOSIS</description>
              <bitRange>[12:12]</bitRange>
            </field>
            <field>
              <name>PIO20FUNCSEL</name>
              <description>0: RTS0, 1:NCSS</description>
              <bitRange>[11:11]</bitRange>
            </field>
            <field>
              <name>PIO19FUNCSEL</name>
              <description>0: CTS0, 1:SCKS</description>
              <bitRange>[9:9]</bitRange>
            </field>
            <field>
              <name>PIO18FUNCSEL</name>
              <description>0: TCLK0, 1:SCKB</description>
              <bitRange>[7:7]</bitRange>
            </field>
            <field>
              <name>PIO17FUNCSEL</name>
              <description>0: TXD2, 1:SDAM0</description>
              <bitRange>[6:6]</bitRange>
            </field>
            <field>
              <name>PIO16FUNCSEL</name>
              <description>0: RXD2, 1:SCLM0</description>
              <bitRange>[5:5]</bitRange>
            </field>
          </fields>
        </register>
        <register>
          <name>PPECON</name>
          <description>Pad pull-up/pull-down enable
The order of each bit is equal to order of PIO number.
0 = Disable
1 = Enable
</description>
          <addressOffset>0x44</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00818000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GPIO31</name>
              <description>GPIO31</description>
              <bitRange>[31:31]</bitRange>
            </field>
            <field>
              <name>GPIO30</name>
              <description>GPIO30</description>
              <bitRange>[30:30]</bitRange>
            </field>
            <field>
              <name>GPIO29</name>
              <description>GPIO29</description>
              <bitRange>[29:29]</bitRange>
            </field>
            <field>
              <name>GPIO28</name>
              <description>GPIO28</description>
              <bitRange>[28:28]</bitRange>
            </field>
            <field>
              <name>GPIO27</name>
              <description>GPIO27</description>
              <bitRange>[27:27]</bitRange>
            </field>
            <field>
              <name>GPIO26</name>
              <description>GPIO26</description>
              <bitRange>[26:26]</bitRange>
            </field>
            <field>
              <name>GPIO25</name>
              <description>GPIO25</description>
              <bitRange>[25:25]</bitRange>
            </field>
            <field>
              <name>GPIO24</name>
              <description>GPIO24</description>
              <bitRange>[24:24]</bitRange>
            </field>
            <field>
              <name>GPIO23</name>
              <description>GPIO23</description>
              <bitRange>[23:23]</bitRange>
            </field>
            <field>
              <name>GPIO22</name>
              <description>GPIO22</description>
              <bitRange>[22:22]</bitRange>
            </field>
            <field>
              <name>GPIO21</name>
              <description>GPIO21</description>
              <bitRange>[21:21]</bitRange>
            </field>
            <field>
              <name>GPIO20</name>
              <description>GPIO20</description>
              <bitRange>[20:20]</bitRange>
            </field>
            <field>
              <name>GPIO19</name>
              <description>GPIO19</description>
              <bitRange>[19:19]</bitRange>
            </field>
            <field>
              <name>GPIO18</name>
              <description>GPIO18</description>
              <bitRange>[18:18]</bitRange>
            </field>
            <field>
              <name>GPIO17</name>
              <description>GPIO17</description>
              <bitRange>[17:17]</bitRange>
            </field>
            <field>
              <name>GPIO16</name>
              <description>GPIO16</description>
              <bitRange>[16:16]</bitRange>
            </field>
            <field>
              <name>GPIO15</name>
              <description>GPIO15</description>
              <bitRange>[15:15]</bitRange>
            </field>
            <field>
              <name>GPIO14</name>
              <description>GPIO14</description>
              <bitRange>[14:14]</bitRange>
            </field>
            <field>
              <name>GPIO13</name>
              <description>GPIO13</description>
              <bitRange>[13:13]</bitRange>
            </field>
            <field>
              <name>GPIO12</name>
              <description>GPIO12</description>
              <bitRange>[12:12]</bitRange>
            </field>
            <field>
              <name>GPIO11</name>
              <description>GPIO11</description>
              <bitRange>[11:11]</bitRange>
            </field>
            <field>
              <name>GPIO10</name>
              <description>GPIO10</description>
              <bitRange>[10:10]</bitRange>
            </field>
            <field>
              <name>GPIO9</name>
              <description>GPIO9</description>
              <bitRange>[9:9]</bitRange>
            </field>
            <field>
              <name>GPIO8</name>
              <description>GPIO8</description>
              <bitRange>[8:8]</bitRange>
            </field>
            <field>
              <name>GPIO7</name>
              <description>GPIO7</description>
              <bitRange>[7:7]</bitRange>
            </field>
            <field>
              <name>GPIO6</name>
              <description>GPIO6</description>
              <bitRange>[6:6]</bitRange>
            </field>
            <field>
              <name>GPIO5</name>
              <description>GPIO5</description>
              <bitRange>[5:5]</bitRange>
            </field>
            <field>
              <name>GPIO4</name>
              <description>GPIO4</description>
              <bitRange>[4:4]</bitRange>
            </field>
            <field>
              <name>GPIO3</name>
              <description>GPIO3</description>
              <bitRange>[3:3]</bitRange>
            </field>
            <field>
              <name>GPIO2</name>
              <description>GPIO2</description>
              <bitRange>[2:2]</bitRange>
            </field>
            <field>
              <name>GPIO1</name>
              <description>GPIO1</description>
              <bitRange>[1:1]</bitRange>
            </field>
            <field>
              <name>GPIO0</name>
              <description>GPIO0</description>
              <bitRange>[0:0]</bitRange>
            </field>
          </fields>
        </register>
        <register>
          <name>PPSCON</name>
          <description>Pad pull-up / pull-down selection 
The order of each bit is equal to order of PIO number
0 = Pull-down enable
1 = Pull-up enable</description>
          <addressOffset>0x48</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00818000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GPIO31</name>
              <description>GPIO31</description>
              <bitRange>[31:31]</bitRange>
            </field>
            <field>
              <name>GPIO30</name>
              <description>GPIO30</description>
              <bitRange>[30:30]</bitRange>
            </field>
            <field>
              <name>GPIO29</name>
              <description>GPIO29</description>
              <bitRange>[29:29]</bitRange>
            </field>
            <field>
              <name>GPIO28</name>
              <description>GPIO28</description>
              <bitRange>[28:28]</bitRange>
            </field>
            <field>
              <name>GPIO27</name>
              <description>GPIO27</description>
              <bitRange>[27:27]</bitRange>
            </field>
            <field>
              <name>GPIO26</name>
              <description>GPIO26</description>
              <bitRange>[26:26]</bitRange>
            </field>
            <field>
              <name>GPIO25</name>
              <description>GPIO25</description>
              <bitRange>[25:25]</bitRange>
            </field>
            <field>
              <name>GPIO24</name>
              <description>GPIO24</description>
              <bitRange>[24:24]</bitRange>
            </field>
            <field>
              <name>GPIO23</name>
              <description>GPIO23</description>
              <bitRange>[23:23]</bitRange>
            </field>
            <field>
              <name>GPIO22</name>
              <description>GPIO22</description>
              <bitRange>[22:22]</bitRange>
            </field>
            <field>
              <name>GPIO21</name>
              <description>GPIO21</description>
              <bitRange>[21:21]</bitRange>
            </field>
            <field>
              <name>GPIO20</name>
              <description>GPIO20</description>
              <bitRange>[20:20]</bitRange>
            </field>
            <field>
              <name>GPIO19</name>
              <description>GPIO19</description>
              <bitRange>[19:19]</bitRange>
            </field>
            <field>
              <name>GPIO18</name>
              <description>GPIO18</description>
              <bitRange>[18:18]</bitRange>
            </field>
            <field>
              <name>GPIO17</name>
              <description>GPIO17</description>
              <bitRange>[17:17]</bitRange>
            </field>
            <field>
              <name>GPIO16</name>
              <description>GPIO16</description>
              <bitRange>[16:16]</bitRange>
            </field>
            <field>
              <name>GPIO15</name>
              <description>GPIO15</description>
              <bitRange>[15:15]</bitRange>
            </field>
            <field>
              <name>GPIO14</name>
              <description>GPIO14</description>
              <bitRange>[14:14]</bitRange>
            </field>
            <field>
              <name>GPIO13</name>
              <description>GPIO13</description>
              <bitRange>[13:13]</bitRange>
            </field>
            <field>
              <name>GPIO12</name>
              <description>GPIO12</description>
              <bitRange>[12:12]</bitRange>
            </field>
            <field>
              <name>GPIO11</name>
              <description>GPIO11</description>
              <bitRange>[11:11]</bitRange>
            </field>
            <field>
              <name>GPIO10</name>
              <description>GPIO10</description>
              <bitRange>[10:10]</bitRange>
            </field>
            <field>
              <name>GPIO9</name>
              <description>GPIO9</description>
              <bitRange>[9:9]</bitRange>
            </field>
            <field>
              <name>GPIO8</name>
              <description>GPIO8</description>
              <bitRange>[8:8]</bitRange>
            </field>
            <field>
              <name>GPIO7</name>
              <description>GPIO7</description>
              <bitRange>[7:7]</bitRange>
            </field>
            <field>
              <name>GPIO6</name>
              <description>GPIO6</description>
              <bitRange>[6:6]</bitRange>
            </field>
            <field>
              <name>GPIO5</name>
              <description>GPIO5</description>
              <bitRange>[5:5]</bitRange>
            </field>
            <field>
              <name>GPIO4</name>
              <description>GPIO4</description>
              <bitRange>[4:4]</bitRange>
            </field>
            <field>
              <name>GPIO3</name>
              <description>GPIO3</description>
              <bitRange>[3:3]</bitRange>
            </field>
            <field>
              <name>GPIO2</name>
              <description>GPIO2</description>
              <bitRange>[2:2]</bitRange>
            </field>
            <field>
              <name>GPIO1</name>
              <description>GPIO1</description>
              <bitRange>[1:1]</bitRange>
            </field>
            <field>
              <name>GPIO0</name>
              <description>GPIO0</description>
              <bitRange>[0:0]</bitRange>
            </field>
          </fields>
        </register>
        <register>
          <name>PCICON</name>
          <description>PAD input enable 
The order of each bit is equal to order of PIO number
0 = Disable
1 = Enable
</description>
          <addressOffset>0x50</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GPIO31</name>
              <description>GPIO31</description>
              <bitRange>[31:31]</bitRange>
            </field>
            <field>
              <name>GPIO30</name>
              <description>GPIO30</description>
              <bitRange>[30:30]</bitRange>
            </field>
            <field>
              <name>GPIO29</name>
              <description>GPIO29</description>
              <bitRange>[29:29]</bitRange>
            </field>
            <field>
              <name>GPIO28</name>
              <description>GPIO28</description>
              <bitRange>[28:28]</bitRange>
            </field>
            <field>
              <name>GPIO27</name>
              <description>GPIO27</description>
              <bitRange>[27:27]</bitRange>
            </field>
            <field>
              <name>GPIO26</name>
              <description>GPIO26</description>
              <bitRange>[26:26]</bitRange>
            </field>
            <field>
              <name>GPIO25</name>
              <description>GPIO25</description>
              <bitRange>[25:25]</bitRange>
            </field>
            <field>
              <name>GPIO24</name>
              <description>GPIO24</description>
              <bitRange>[24:24]</bitRange>
            </field>
            <field>
              <name>GPIO23</name>
              <description>GPIO23</description>
              <bitRange>[23:23]</bitRange>
            </field>
            <field>
              <name>GPIO22</name>
              <description>GPIO22</description>
              <bitRange>[22:22]</bitRange>
            </field>
            <field>
              <name>GPIO21</name>
              <description>GPIO21</description>
              <bitRange>[21:21]</bitRange>
            </field>
            <field>
              <name>GPIO20</name>
              <description>GPIO20</description>
              <bitRange>[20:20]</bitRange>
            </field>
            <field>
              <name>GPIO19</name>
              <description>GPIO19</description>
              <bitRange>[19:19]</bitRange>
            </field>
            <field>
              <name>GPIO18</name>
              <description>GPIO18</description>
              <bitRange>[18:18]</bitRange>
            </field>
            <field>
              <name>GPIO17</name>
              <description>GPIO17</description>
              <bitRange>[17:17]</bitRange>
            </field>
            <field>
              <name>GPIO16</name>
              <description>GPIO16</description>
              <bitRange>[16:16]</bitRange>
            </field>
            <field>
              <name>GPIO15</name>
              <description>GPIO15</description>
              <bitRange>[15:15]</bitRange>
            </field>
            <field>
              <name>GPIO14</name>
              <description>GPIO14</description>
              <bitRange>[14:14]</bitRange>
            </field>
            <field>
              <name>GPIO13</name>
              <description>GPIO13</description>
              <bitRange>[13:13]</bitRange>
            </field>
            <field>
              <name>GPIO12</name>
              <description>GPIO12</description>
              <bitRange>[12:12]</bitRange>
            </field>
            <field>
              <name>GPIO11</name>
              <description>GPIO11</description>
              <bitRange>[11:11]</bitRange>
            </field>
            <field>
              <name>GPIO10</name>
              <description>GPIO10</description>
              <bitRange>[10:10]</bitRange>
            </field>
            <field>
              <name>GPIO9</name>
              <description>GPIO9</description>
              <bitRange>[9:9]</bitRange>
            </field>
            <field>
              <name>GPIO8</name>
              <description>GPIO8</description>
              <bitRange>[8:8]</bitRange>
            </field>
            <field>
              <name>GPIO7</name>
              <description>GPIO7</description>
              <bitRange>[7:7]</bitRange>
            </field>
            <field>
              <name>GPIO6</name>
              <description>GPIO6</description>
              <bitRange>[6:6]</bitRange>
            </field>
            <field>
              <name>GPIO5</name>
              <description>GPIO5</description>
              <bitRange>[5:5]</bitRange>
            </field>
            <field>
              <name>GPIO4</name>
              <description>GPIO4</description>
              <bitRange>[4:4]</bitRange>
            </field>
            <field>
              <name>GPIO3</name>
              <description>GPIO3</description>
              <bitRange>[3:3]</bitRange>
            </field>
            <field>
              <name>GPIO2</name>
              <description>GPIO2</description>
              <bitRange>[2:2]</bitRange>
            </field>
            <field>
              <name>GPIO1</name>
              <description>GPIO1</description>
              <bitRange>[1:1]</bitRange>
            </field>
            <field>
              <name>GPIO0</name>
              <description>GPIO0</description>
              <bitRange>[0:0]</bitRange>
            </field>
          </fields>
        </register>
        <register>
          <name>PDFBYP</name>
          <description>Pad De-Glitch Filter Bypass</description>
          <addressOffset>0x60</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GPIO31</name>
              <description>GPIO31</description>
              <bitRange>[31:31]</bitRange>
            </field>
            <field>
              <name>GPIO30</name>
              <description>GPIO30</description>
              <bitRange>[30:30]</bitRange>
            </field>
            <field>
              <name>GPIO29</name>
              <description>GPIO29</description>
              <bitRange>[29:29]</bitRange>
            </field>
            <field>
              <name>GPIO28</name>
              <description>GPIO28</description>
              <bitRange>[28:28]</bitRange>
            </field>
            <field>
              <name>GPIO27</name>
              <description>GPIO27</description>
              <bitRange>[27:27]</bitRange>
            </field>
            <field>
              <name>GPIO26</name>
              <description>GPIO26</description>
              <bitRange>[26:26]</bitRange>
            </field>
            <field>
              <name>GPIO25</name>
              <description>GPIO25</description>
              <bitRange>[25:25]</bitRange>
            </field>
            <field>
              <name>GPIO24</name>
              <description>GPIO24</description>
              <bitRange>[24:24]</bitRange>
            </field>
            <field>
              <name>GPIO23</name>
              <description>GPIO23</description>
              <bitRange>[23:23]</bitRange>
            </field>
            <field>
              <name>GPIO22</name>
              <description>GPIO22</description>
              <bitRange>[22:22]</bitRange>
            </field>
            <field>
              <name>GPIO21</name>
              <description>GPIO21</description>
              <bitRange>[21:21]</bitRange>
            </field>
            <field>
              <name>GPIO20</name>
              <description>GPIO20</description>
              <bitRange>[20:20]</bitRange>
            </field>
            <field>
              <name>GPIO19</name>
              <description>GPIO19</description>
              <bitRange>[19:19]</bitRange>
            </field>
            <field>
              <name>GPIO18</name>
              <description>GPIO18</description>
              <bitRange>[18:18]</bitRange>
            </field>
            <field>
              <name>GPIO17</name>
              <description>GPIO17</description>
              <bitRange>[17:17]</bitRange>
            </field>
            <field>
              <name>GPIO16</name>
              <description>GPIO16</description>
              <bitRange>[16:16]</bitRange>
            </field>
            <field>
              <name>GPIO15</name>
              <description>GPIO15</description>
              <bitRange>[15:15]</bitRange>
            </field>
            <field>
              <name>GPIO14</name>
              <description>GPIO14</description>
              <bitRange>[14:14]</bitRange>
            </field>
            <field>
              <name>GPIO13</name>
              <description>GPIO13</description>
              <bitRange>[13:13]</bitRange>
            </field>
            <field>
              <name>GPIO12</name>
              <description>GPIO12</description>
              <bitRange>[12:12]</bitRange>
            </field>
            <field>
              <name>GPIO11</name>
              <description>GPIO11</description>
              <bitRange>[11:11]</bitRange>
            </field>
            <field>
              <name>GPIO10</name>
              <description>GPIO10</description>
              <bitRange>[10:10]</bitRange>
            </field>
            <field>
              <name>GPIO9</name>
              <description>GPIO9</description>
              <bitRange>[9:9]</bitRange>
            </field>
            <field>
              <name>GPIO8</name>
              <description>GPIO8</description>
              <bitRange>[8:8]</bitRange>
            </field>
            <field>
              <name>GPIO7</name>
              <description>GPIO7</description>
              <bitRange>[7:7]</bitRange>
            </field>
            <field>
              <name>GPIO6</name>
              <description>GPIO6</description>
              <bitRange>[6:6]</bitRange>
            </field>
            <field>
              <name>GPIO5</name>
              <description>GPIO5</description>
              <bitRange>[5:5]</bitRange>
            </field>
            <field>
              <name>GPIO4</name>
              <description>GPIO4</description>
              <bitRange>[4:4]</bitRange>
            </field>
            <field>
              <name>GPIO3</name>
              <description>GPIO3</description>
              <bitRange>[3:3]</bitRange>
            </field>
            <field>
              <name>GPIO2</name>
              <description>GPIO2</description>
              <bitRange>[2:2]</bitRange>
            </field>
            <field>
              <name>GPIO1</name>
              <description>GPIO1</description>
              <bitRange>[1:1]</bitRange>
            </field>
            <field>
              <name>GPIO0</name>
              <description>GPIO0</description>
              <bitRange>[0:0]</bitRange>
            </field>
          </fields>
        </register>
        <register>
          <name>PDFDLY</name>
          <description>Delay Selection of PAD De-Glitch Filter</description>
          <addressOffset>0x64</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GPIO31</name>
              <description>GPIO31</description>
              <bitRange>[31:31]</bitRange>
            </field>
            <field>
              <name>GPIO30</name>
              <description>GPIO30</description>
              <bitRange>[30:30]</bitRange>
            </field>
            <field>
              <name>GPIO29</name>
              <description>GPIO29</description>
              <bitRange>[29:29]</bitRange>
            </field>
            <field>
              <name>GPIO28</name>
              <description>GPIO28</description>
              <bitRange>[28:28]</bitRange>
            </field>
            <field>
              <name>GPIO27</name>
              <description>GPIO27</description>
              <bitRange>[27:27]</bitRange>
            </field>
            <field>
              <name>GPIO26</name>
              <description>GPIO26</description>
              <bitRange>[26:26]</bitRange>
            </field>
            <field>
              <name>GPIO25</name>
              <description>GPIO25</description>
              <bitRange>[25:25]</bitRange>
            </field>
            <field>
              <name>GPIO24</name>
              <description>GPIO24</description>
              <bitRange>[24:24]</bitRange>
            </field>
            <field>
              <name>GPIO23</name>
              <description>GPIO23</description>
              <bitRange>[23:23]</bitRange>
            </field>
            <field>
              <name>GPIO22</name>
              <description>GPIO22</description>
              <bitRange>[22:22]</bitRange>
            </field>
            <field>
              <name>GPIO21</name>
              <description>GPIO21</description>
              <bitRange>[21:21]</bitRange>
            </field>
            <field>
              <name>GPIO20</name>
              <description>GPIO20</description>
              <bitRange>[20:20]</bitRange>
            </field>
            <field>
              <name>GPIO19</name>
              <description>GPIO19</description>
              <bitRange>[19:19]</bitRange>
            </field>
            <field>
              <name>GPIO18</name>
              <description>GPIO18</description>
              <bitRange>[18:18]</bitRange>
            </field>
            <field>
              <name>GPIO17</name>
              <description>GPIO17</description>
              <bitRange>[17:17]</bitRange>
            </field>
            <field>
              <name>GPIO16</name>
              <description>GPIO16</description>
              <bitRange>[16:16]</bitRange>
            </field>
            <field>
              <name>GPIO15</name>
              <description>GPIO15</description>
              <bitRange>[15:15]</bitRange>
            </field>
            <field>
              <name>GPIO14</name>
              <description>GPIO14</description>
              <bitRange>[14:14]</bitRange>
            </field>
            <field>
              <name>GPIO13</name>
              <description>GPIO13</description>
              <bitRange>[13:13]</bitRange>
            </field>
            <field>
              <name>GPIO12</name>
              <description>GPIO12</description>
              <bitRange>[12:12]</bitRange>
            </field>
            <field>
              <name>GPIO11</name>
              <description>GPIO11</description>
              <bitRange>[11:11]</bitRange>
            </field>
            <field>
              <name>GPIO10</name>
              <description>GPIO10</description>
              <bitRange>[10:10]</bitRange>
            </field>
            <field>
              <name>GPIO9</name>
              <description>GPIO9</description>
              <bitRange>[9:9]</bitRange>
            </field>
            <field>
              <name>GPIO8</name>
              <description>GPIO8</description>
              <bitRange>[8:8]</bitRange>
            </field>
            <field>
              <name>GPIO7</name>
              <description>GPIO7</description>
              <bitRange>[7:7]</bitRange>
            </field>
            <field>
              <name>GPIO6</name>
              <description>GPIO6</description>
              <bitRange>[6:6]</bitRange>
            </field>
            <field>
              <name>GPIO5</name>
              <description>GPIO5</description>
              <bitRange>[5:5]</bitRange>
            </field>
            <field>
              <name>GPIO4</name>
              <description>GPIO4</description>
              <bitRange>[4:4]</bitRange>
            </field>
            <field>
              <name>GPIO3</name>
              <description>GPIO3</description>
              <bitRange>[3:3]</bitRange>
            </field>
            <field>
              <name>GPIO2</name>
              <description>GPIO2</description>
              <bitRange>[2:2]</bitRange>
            </field>
            <field>
              <name>GPIO1</name>
              <description>GPIO1</description>
              <bitRange>[1:1]</bitRange>
            </field>
            <field>
              <name>GPIO0</name>
              <description>GPIO0</description>
              <bitRange>[0:0]</bitRange>
            </field>
          </fields>
        </register>
        <register>
          <name>PDS</name>
          <description>Drive Strength Selection
The order of each bit is equal to order of PIO number.
0 = 2.5mA(single battery / double battery)
1 = 3.5mA(single battery) or 5mA(double battery)
</description>
          <addressOffset>0xA0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GPIO31</name>
              <description>GPIO31</description>
              <bitRange>[31:31]</bitRange>
            </field>
            <field>
              <name>GPIO30</name>
              <description>GPIO30</description>
              <bitRange>[30:30]</bitRange>
            </field>
            <field>
              <name>GPIO29</name>
              <description>GPIO29</description>
              <bitRange>[29:29]</bitRange>
            </field>
            <field>
              <name>GPIO28</name>
              <description>GPIO28</description>
              <bitRange>[28:28]</bitRange>
            </field>
            <field>
              <name>GPIO27</name>
              <description>GPIO27</description>
              <bitRange>[27:27]</bitRange>
            </field>
            <field>
              <name>GPIO26</name>
              <description>GPIO26</description>
              <bitRange>[26:26]</bitRange>
            </field>
            <field>
              <name>GPIO25</name>
              <description>GPIO25</description>
              <bitRange>[25:25]</bitRange>
            </field>
            <field>
              <name>GPIO24</name>
              <description>GPIO24</description>
              <bitRange>[24:24]</bitRange>
            </field>
            <field>
              <name>GPIO23</name>
              <description>GPIO23</description>
              <bitRange>[23:23]</bitRange>
            </field>
            <field>
              <name>GPIO22</name>
              <description>GPIO22</description>
              <bitRange>[22:22]</bitRange>
            </field>
            <field>
              <name>GPIO21</name>
              <description>GPIO21</description>
              <bitRange>[21:21]</bitRange>
            </field>
            <field>
              <name>GPIO20</name>
              <description>GPIO20</description>
              <bitRange>[20:20]</bitRange>
            </field>
            <field>
              <name>GPIO19</name>
              <description>GPIO19</description>
              <bitRange>[19:19]</bitRange>
            </field>
            <field>
              <name>GPIO18</name>
              <description>GPIO18</description>
              <bitRange>[18:18]</bitRange>
            </field>
            <field>
              <name>GPIO17</name>
              <description>GPIO17</description>
              <bitRange>[17:17]</bitRange>
            </field>
            <field>
              <name>GPIO16</name>
              <description>GPIO16</description>
              <bitRange>[16:16]</bitRange>
            </field>
            <field>
              <name>GPIO15</name>
              <description>GPIO15</description>
              <bitRange>[15:15]</bitRange>
            </field>
            <field>
              <name>GPIO14</name>
              <description>GPIO14</description>
              <bitRange>[14:14]</bitRange>
            </field>
            <field>
              <name>GPIO13</name>
              <description>GPIO13</description>
              <bitRange>[13:13]</bitRange>
            </field>
            <field>
              <name>GPIO12</name>
              <description>GPIO12</description>
              <bitRange>[12:12]</bitRange>
            </field>
            <field>
              <name>GPIO11</name>
              <description>GPIO11</description>
              <bitRange>[11:11]</bitRange>
            </field>
            <field>
              <name>GPIO10</name>
              <description>GPIO10</description>
              <bitRange>[10:10]</bitRange>
            </field>
            <field>
              <name>GPIO9</name>
              <description>GPIO9</description>
              <bitRange>[9:9]</bitRange>
            </field>
            <field>
              <name>GPIO8</name>
              <description>GPIO8</description>
              <bitRange>[8:8]</bitRange>
            </field>
            <field>
              <name>GPIO7</name>
              <description>GPIO7</description>
              <bitRange>[7:7]</bitRange>
            </field>
            <field>
              <name>GPIO6</name>
              <description>GPIO6</description>
              <bitRange>[6:6]</bitRange>
            </field>
            <field>
              <name>GPIO5</name>
              <description>GPIO5</description>
              <bitRange>[5:5]</bitRange>
            </field>
            <field>
              <name>GPIO4</name>
              <description>GPIO4</description>
              <bitRange>[4:4]</bitRange>
            </field>
            <field>
              <name>GPIO3</name>
              <description>GPIO3</description>
              <bitRange>[3:3]</bitRange>
            </field>
            <field>
              <name>GPIO2</name>
              <description>GPIO2</description>
              <bitRange>[2:2]</bitRange>
            </field>
            <field>
              <name>GPIO1</name>
              <description>GPIO1</description>
              <bitRange>[1:1]</bitRange>
            </field>
            <field>
              <name>GPIO0</name>
              <description>GPIO0</description>
              <bitRange>[0:0]</bitRange>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <!--QSPI-->
    <peripheral>
      <name>QSPI</name>
      <version>1.0</version>
      <description>Flash controller</description>
      <baseAddress>0x40024000</baseAddress>
      <size>32</size>
      <access>read-write</access>
      <addressBlock>
        <offset>0</offset>
        <size>0x130</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>SF_CON</name>
          <description>Control Register</description>
          <addressOffset>0x04</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x0010060A</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>WP</name>
              <description>Write protection 
0 = Enable 
1 = Disable
</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD2</name>
              <description>RSVD2</description>
              <bitRange>[30:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>COMMAND_SET_MODE</name>
              <description>Updates command set: COMMAND1, COMMAND2, COMMAND3, COMMAND4, and COMMAND5
6'b100000 = Mode 0 command set
6'b010000 = Mode 1 command set (default)
6'b001000 = Mode 2 command set
6'b000100 = Mode 3 command set
6'b000010 = Mode 4 command set
6'b000001 = Mode 5 command set
If multiple bits are 1, MSB has a priority.
</description>
              <bitRange>[21:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PAGE_PROGRAM_EN</name>
              <description>GPage programing mode
0 = Byte programing
1 = Page programing
</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD1</name>
              <description>RSVD1</description>
              <bitRange>[14:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAGE</name>
              <description>Bytes per page
0 = 4 bytes
1 = 8 bytes
2 = 16 bytes
3 = 32 bytes
4 = 64 bytes
5 = 128 bytes
6 = 256 bytes
7 = Reserved
</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HALF_DELAY</name>
              <description>Input data sample with half frequency delay
If data output delay is more than half cycle of SCLK, set this bit to 1.
</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD0</name>
              <description>RSVD0</description>
              <bitRange>[6:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ERASE_WAIT_EN</name>
              <description>Check the busy status after the erase command
0 = Does not check the busy status
1 = Check the busy status
</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRE_CHARGE</name>
              <description>Retains the CS as high
Pre-charge time: (PRE_CHARGE + 1) * (1/sfclk)
</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ERASE_ADDRSSS</name>
          <description>Control Register</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>EraseAddress</name>
              <description>Erase Address
</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USER_COMMAND</name>
          <description>USER_COMMAND</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>USER_COMMAND</name>
              <description>When you want to use user-defined command, write this field
[31:24] = CS drive
[23:16] = SPICLK drive
[15:8] = SI drive
[7:0] = No effect
When you read this field, SO sampled data is read. The data is double sampled when SPICLK is toggled.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>COMMAND1</name>
          <description>Command1</description>
          <addressOffset>0x1c</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xEBBB0000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>QUAD_IO_READ</name>
              <description>Quad I/O</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DUAL_IO_READ</name>
              <description>Dual I/O</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HPMD_RELEASE</name>
              <description>High performance release</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HPMD</name>
              <description>High performance</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>COMMAND2</name>
          <description>Command2</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0xD8D820C7</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>UI</name>
              <description>User instruction</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BE</name>
              <description>Block erase</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SE</name>
              <description>Sector erase</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CE</name>
              <description>Chip erase</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>COMMAND3</name>
          <description>Command3</description>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00010505</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>WRSR</name>
              <description>Write status register</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RDSR2</name>
              <description>Read status register 2
Use this register only when you set FLASH_IO_MODE to read quad_enable flag in status register of external devices.
</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RDSR</name>
              <description>Read status register</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>COMMAND4</name>
          <description>Command4</description>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x029F0604</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PP</name>
              <description>Page program</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RDID</name>
              <description>Read ID</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WREN</name>
              <description>Write enable</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WRDI</name>
              <description>Write disable</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>COMMAND5</name>
          <description>Command5</description>
          <addressOffset>0x2C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x0B0B0B03</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>QUAD_FAST_READ</name>
              <description>Quad Fast Read</description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DUAL_FAST_READ</name>
              <description>Dual Fast Read</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FAST_READ</name>
              <description>Fast Read</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>READ</name>
              <description>Read</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USER_INSTRUCTION</name>
          <description>User Program Instruction Transfer</description>
          <addressOffset>0x59</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[31:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>USER_INSTRUCTION</name>
              <description>If you write this address with another address, then COMMAMD2.UI is sent though SI pin
Use only instructions without data.
Use only during normal read mode.
</description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SE</name>
          <description>Sector Erase</description>
          <addressOffset>0x5E</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[31:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SECTOR_ERASE</name>
              <description>If you write this address with dummy data, then COMMAMD2.SE is sent though SI pin</description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FLASH_IO_MODE</name>
          <description>Flash I/O Mode</description>
          <addressOffset>0x74</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[31:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FLASH_IO_MODE</name>
              <description>0x0 = Normal mode (COMMAND5.READ is sent through SI pin)
0x1 = Fast mode (COMMAND5.FAST_READ is sent through SI pin)
0x2 = Dual fast mode (COMMAND5.DUAL_FAST_READ is sent through SI pin)
0x4 = Quad fast mode (COMMAND5.QUAD_FAST_READ is sent through SI pin)
0x8 = Read mode (COMMAND5.READ is sent through SI pin)
If COMMAND_SET_MODE is 6'b10_0000, then controller sets or resets quad_enable flag which is expected in status register[9] of external devices. 
If COMMAND_SET_MODE is 6'b01_0000, then controller sets or resets quad_enable flag which is expected in status register[6] of external devices. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FLASH_PERF_MODE</name>
          <description>Flash Performance Mode</description>
          <addressOffset>0x78</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>RSVD1</name>
              <description>RSVD1</description>
              <bitRange>[31:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FLASH_PERF_MODE</name>
              <description>0 = Command of COMMAND5 is sent through SI pin 
1 = Command of COMMAND1 is sent through SI pin 
If FLASH_IO_MODE is 0x2, then COMMAND1.DUAL_IO_READ is sent through SI pin
If FLASH_IO_MODE is 0x4, then COMMAND1.QUAD_IO_READ is sent through SI pin.
This bit is valid when FLASH_IO_MODE is 0x2 or 0x4. If you want to use FAST_READ, DUAL_FAST_READ, and QUAD_FAST_READ instructions, then this bit must be 0.
</description>
              <bitRange>[3:3]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>RSVD0</name>
              <description>RSVD0</description>
              <bitRange>[2:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RDID</name>
          <description>Flash Vendor ID</description>
          <addressOffset>0xAC</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[31:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FLASH_VENDOR_ID</name>
              <description>If you read this address, then COMMAMD4.RDID is sent through SI pin and you can read manufacture ID and device ID
This register must be read with word access.
[31:24] = N/A
[23:16] = Third output byte of device (Capacity)
[15:8] = Second output byte of device (Memory Type)
[7:0] = First output byte of device (Manufacture ID)
</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BE</name>
          <description>Block Erase</description>
          <addressOffset>0xBE</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>BLOCK_ERASE</name>
              <description>If you write this address with dummy data, then COMMAMD2.BE is sent through SI pin</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CE</name>
          <description>Chip Erase</description>
          <addressOffset>0xCE</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>CHIP_ERASE</name>
              <description>If you write this address with dummy data, then COMMAMD3.CE is sent through SI pin</description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RDSR</name>
          <description>Read Status Register</description>
          <addressOffset>0xDC</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>READ_STATUS_REGISTER</name>
              <description>If you give read access to this address, then COMMAMD3.RDSR is sent through SI pin</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WRDI</name>
          <description>Write Disable</description>
          <addressOffset>0xDD</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>WRITE_DISABLE</name>
              <description>If you write this address with dummy data, then COMMAMD3.WRDI is sent though SI pin</description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WRSR</name>
          <description>Write Status Register</description>
          <addressOffset>0xDE</addressOffset>
          <size>16</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>WRITE_STATUS_REGISTER</name>
              <description>If you write this address with valid data, then COMMAMD3.WRSR is sent through SI pin
Write with byte access: 1 byte is sent through SI pin.
Write with half-word access: 2 byte is sent through SI pin. Sequence of {[7:0] and [15:8]}
</description>
              <bitRange>[15:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WREN</name>
          <description>Write Enable</description>
          <addressOffset>0xEE</addressOffset>
          <size>8</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>WRTIE_ENABLE</name>
              <description>If you write this address with dummy data, then COMMAMD4.WREN is sent through SI pin</description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <!--Modem-->
    <!--CMU-->
    <peripheral>
      <name>CMU</name>
      <version>1.0</version>
      <description>Clock management</description>
      <baseAddress>0x40080000</baseAddress>
      <size>32</size>
      <access>read-write</access>
      <addressBlock>
        <offset>0</offset>
        <size>0x100</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>CLKSEL</name>
          <description>Clock Selection Register</description>
          <addressOffset>0x000</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x18C02004</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ZGB_BLE_CLK_DIV</name>
              <description>ZGB/BLE clock div
000 = Divided by 1
001 = Divided by 2
010 = Divided by 4
011 = Divided by 6
</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ZGB_BLE_ClkSrc</name>
              <description>ZGB/BLE clock selection
00 = DCXO 32 MHz (Reset value)
01 = RCOSC 64 ~ 100 MHz 
11 = Reserved (Default DCXO)
</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>QSPI_CLK_DIV</name>
              <description>QSPI master clock 
000 = Divided by 1
001 = Divided by 2
010 = Divided by 4
011 = Divided by 6
</description>
              <bitRange>[17:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>QSPI_CLK_SEL</name>
              <description>QSPI Clock selection
00 = DCXO 32 MHz 
01 = RCOSC 64 ~ 100 MHz (Reset value) 
11 = Reserved (Default RCOSC)
</description>
              <bitRange>[14:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>USI_CLK_DIV</name>
              <description>USI clock division select bits
000 = Divided by 1
001 = Divided by 2
010 = Divided by 4
011 = Divided by 6
</description>
              <bitRange>[12:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>USI_CLK_SRC</name>
              <description>USI clock selection
00 = DCXO 32 MHz (Reset value) 
01 = RCOSC 64 ~ 100 MHz
NOTE:	As for UART, it's recommended to use 00b (DCXO 32 MHz for accurate clock).
</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYS_CLK_DIV</name>
              <description>Peripheral (up to 50 MHz, derived from CPU clock) clock division select bits (derived from CPU clock)
000 = Divided by 1
001 = Divided by 2
010 = Divided by 4
011 = Divided by 6
100 = Divided by 8
</description>
              <bitRange>[7:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CPU_CLK_DIV</name>
              <description>CPU clock division select bits
000 = Divided by 1
001 = Divided by 2 (def.)
010 = Divided by 4
011 = Divided by 6
100 = Divided by 8
After changing SysClkDiv value to be divided by N, insert NOP (N * 6) NOP instructions. (N can be 2, 4, 6, and 8)
</description>
              <bitRange>[4:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CPU_CLK_SEL</name>
              <description>CPU (64 MHz ~ 100 MHz) clock selection
00 = RCOSC 64 ~ 100 MHz (Reset value)
01 = DCXO 32 MHz
11 = Reserved (Default RCOSC)
</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RCCLKSEL</name>
          <description>Internal RC Oscillator Clock Selection Register</description>
          <addressOffset>0x004</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00090041</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD2</name>
              <description>No Description</description>
              <bitRange>[31:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>MOSC_TRIMSEL</name>
              <description>HF_OSC TRIMSEL value after auto trim</description>
              <bitRange>[27:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>MOSC_FREQSEL</name>
              <description>010 = 100 MHz
011 = 80 MHz
100 ~ 111 = 64 MHz 
</description>
              <bitRange>[19:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MAINRCEN</name>
              <description>0 = Disable
1 = Enable internal main RC oscillator 
</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD1</name>
              <description>No Description</description>
              <bitRange>[15:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SOSC_TRIMSEL</name>
              <description>LF_OSC TRIMSEL value after auto trim</description>
              <bitRange>[11:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD0</name>
              <description>No Description</description>
              <bitRange>[3:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SUBRCEN</name>
              <description>0 = Disable
1 = Enable internal 2 MHz RC Oscillator
</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PKCLKCON</name>
          <description>It's Register</description>
          <addressOffset>0x008</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x0000000C</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[31:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CPUEN_ON_COPROCRUN</name>
              <description>No Description</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TOR_CLK_DIV</name>
              <description>No Description</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CLKEN1</name>
          <description>Clock Enable 1 Register</description>
          <addressOffset>0x010</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x0000001F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>Must be 0</description>
              <bitRange>[31:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RETRAM</name>
              <description>No Description</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SSS</name>
              <description>No Description</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>QSPI</name>
              <description>No Description</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>USI</name>
              <description>No Description</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UART1</name>
              <description>No Description</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UART0</name>
              <description>No Description</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>I2CB1</name>
              <description>No Description</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>I2CB0</name>
              <description>No Description</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BLE</name>
              <description>No Description</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ZGB</name>
              <description>No Description</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AES</name>
              <description>No Description</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DMAC</name>
              <description>No Description</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CRC</name>
              <description>No Description</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IOCON</name>
              <description>No Description</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO</name>
              <description>No Description</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RAM2</name>
              <description>No Description</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RAM1</name>
              <description>No Description</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NOR</name>
              <description>No Description</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ROM</name>
              <description>No Description</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CLKEN2</name>
          <description>Clock Enable 2 Register</description>
          <addressOffset>0X014</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00001807</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD1</name>
              <description>Must be 0</description>
              <bitRange>[31:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PUF</name>
              <description>No Description</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ADC</name>
              <description>No Description</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC</name>
              <description>No Description</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WDT</name>
              <description>No Description</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMER4</name>
              <description>No Description</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMER3</name>
              <description>No Description</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMER2</name>
              <description>No Description</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMER1</name>
              <description>No Description</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMER0</name>
              <description>No Description</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PWM</name>
              <description>No Description</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PADCON</name>
              <description>No Description</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SFMGT</name>
              <description>No Description</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PMU</name>
              <description>No Description</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CMU</name>
              <description>No Description</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MOSC_TRIMCON1</name>
          <description>HF_OSC Trim Control Register 1</description>
          <addressOffset>0x0018</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000070</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD1</name>
              <description>No Description</description>
              <bitRange>[31:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TARGET_CNT</name>
              <description>Target clock matching count (consider REF_CLK, REF_DIV, target frequency)
100 MHz: 133 (85h) @ 32 MHz with Div128
80 MHz: 107 (6Bh) @ 32 MHz with Div128
64 MHz: 85 (C8h) @ 32 MHz with Div128
</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>REF_DIV</name>
              <description>000, 101, 110, 111 = Div1
001 = Div32 
010 = Div64
011 = Div128 (def.)
100 = Div256
</description>
              <bitRange>[7:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>REF_CLK_SEL</name>
              <description>0 = XI 32.768 kHz
1 = DCXO 32 MHz
</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TRIM_RANGE</name>
              <description>Trim range selection 
00 = Trim range FSEL[6:0]
01 = Trim range FSEL[5:0]
10 = Trim range FSEL[4:0]
11 = Trim range FSEL[3:0]
</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>USE_PARTIAL_TRIM</name>
              <description>0 = Not use trim range (Full TRIM FSEL[7:0])
1 = Use trim range
</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TRIM_START</name>
              <description>Start command to trim 100 MHz osc</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MOSC_TRIMCON2</name>
          <description>HF_OSC Trim Control Register 2</description>
          <addressOffset>0x001C</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD1</name>
              <description>No Description</description>
              <bitRange>[31:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TRIM_BUSY</name>
              <description>Trim busy flag
0 = Done
1 = Busy
</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TRIM_DONE</name>
              <description>Trim done flag
0 = Running
1 = Done
</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD0</name>
              <description>No Description</description>
              <bitRange>[15:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TRIM_CNT</name>
              <description>Should read after TRIM_BUSY bit is low</description>
              <bitRange>[11:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTCCLKSEL</name>
          <description>It's Register</description>
          <addressOffset>0x024</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD1</name>
              <description>No Description</description>
              <bitRange>[31:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RTCRST</name>
              <description>RTC counter reset enable
0 = Does not reset RTC count
1 = Resets RTC count
</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RTT_CNT_CLKEN</name>
              <description>Must be 0</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_CNT_CLKEN</name>
              <description>RTC counter clock enable
0 = Clock disable
1 = Clock enable
</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RT_CLKSEL</name>
              <description>No Description</description>
              <bitRange>[4:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[2:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SUBOSCCON1</name>
          <description>LF_OSC Trim Control Register 1</description>
          <addressOffset>0x0040</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TARGET_CNT</name>
              <description>Target clock matching count (consider REF_CLK, REF_DIV, target frequency)
For example, 2 MHz: 32 (20h) @ 32 MHz with Div 512
4 MHz: 64 (40h) @ 32 MHz with Div 512
6 MHz: 96 (60h) @ 32 MHz with Div 512
</description>
              <bitRange>[27:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD1</name>
              <description>No Description</description>
              <bitRange>[15:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>REF_DIV</name>
              <description>0 = Div 512 (Ref. clock = 32 MHz/512)
1 = Div 1024 (Ref. clock = 32 MHz/1024)
</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD0</name>
              <description>Reserved bits </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TRIM_RANGE</name>
              <description>Trim range selection 
00 = Trim range FSEL[6:0]
01 = Trim range FSEL[5:0]
10 = Trim range FSEL[4:0]
11 = Trim range FSEL[3:0]
</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>USE_PARTIAL_TRIM</name>
              <description>0 = Not use trim range (Full TRIM FSEL[7:0])
1 = Use trim range
</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TRIM_START</name>
              <description>Start command to trim 4 MHz LF_OSC</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SUBOSCCON2</name>
          <description>LF_OSC Trim Control Register 2</description>
          <addressOffset>0x0044</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD1</name>
              <description>No Description</description>
              <bitRange>[31:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TRIM_BUSY</name>
              <description>Trim busy flag
0 = Done
1 = Busy
</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TRIM_DONE</name>
              <description>Trim done flag
0 = Running
1 = Done
</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD0</name>
              <description>No Description</description>
              <bitRange>[15:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TRIM_CNT</name>
              <description>Should read after TRIM_BUSY bit is low</description>
              <bitRange>[11:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <!--ZGBCLK-->
        <register>
          <name>ZGB_CLK_RESET</name>
          <description>ZGB Clock S/W Reset Register
Apply S/W reset to turn on S/W reset for specific clock source, and then turn off S/W reset again
0 = Reset
1 = Write 1 to this bit to clear reset
</description>
          <addressOffset>0x0080</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x000000FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD0</name>
              <description>No Description</description>
              <bitRange>[31:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>Cx48_FuncClk_SwResetn</name>
              <description>Cx48_FuncClk_SwResetn</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Symb_FuncClk_SwResetn</name>
              <description>Symb_FuncClk_SwResetn</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Symbx2_FuncClk_SwResetn</name>
              <description>Symbx2_FuncClk_SwResetn</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Symbx4_FuncClk_SwResetn</name>
              <description>Symbx4_FuncClk_SwResetn</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Chip_FuncClk_SwResetn</name>
              <description>Chip_FuncClk_SwResetn</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Cx4_FuncClk_SwResetn</name>
              <description>Cx4_FuncClk_SwResetn</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Samp_FuncClk_SwResetn</name>
              <description>Samp_FuncClk_SwResetn</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Sys_FuncClk_SwResetn</name>
              <description>Sys_FuncClk_SwResetn</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ZGB_CLKEN</name>
          <description>ZGB Clock Enable Register</description>
          <addressOffset>0x0084</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x000000FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD0</name>
              <description>No Description</description>
              <bitRange>[31:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>Cx48_FuncClk_SwClkOn</name>
              <description>Cx48_FuncClk_SwClkOn</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Symb_FuncClk_SwClkOn</name>
              <description>Symb_FuncClk_SwClkOn</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Symbx2_FuncClk_SwClkOn</name>
              <description>Symbx2_FuncClk_SwClkOn</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Symbx4_FuncClk_SwClkOn</name>
              <description>Symbx4_FuncClk_SwClkOn</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Chip_FuncClk_SwClkOn</name>
              <description>Chip_FuncClk_SwClkOn</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Cx4_FuncClk_SwClkOn</name>
              <description>Cx4_FuncClk_SwClkOn</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Samp_FuncClk_SwClkOn</name>
              <description>Samp_FuncClk_SwClkOn</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Sys_FuncClk_SwClkOn</name>
              <description>Sys_FuncClk_SwClkOn</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ZGB_CLKSEL</name>
          <description>ZGB Clock S/W Reset Register
Apply S/W reset to turn on S/W reset for specific clock source, and then turn off S/W reset again
0 = Reset
1 = Write 1 to this bit to clear reset
</description>
          <addressOffset>0x0090</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD0</name>
              <description>No Description</description>
              <bitRange>[31:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CLK_4_8M_SEL</name>
              <description>Frequency of o_CLK_ZGB_4M8M
0 = 4 MHz
1 = 8 MHz
</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ADCClk_SwResetn</name>
              <description>Apply S/W reset turn on S/W reset for specific clock source, and then turn off S/W reset again
0 = Reset
1 = For clear reset, should write 1
</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ZGB_CLKMON</name>
          <description>ZGB Clock S/W Reset Register
Apply S/W reset to turn on S/W reset for specific clock source, and then turn off S/W reset again
0 = Reset
1 = Write 1 to this bit to clear reset
</description>
          <addressOffset>0x0094</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000080</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD0</name>
              <description>No Description</description>
              <bitRange>[31:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ZGB_CMU_TESTBUS_EN</name>
              <description>If 0, 32'b stuck 0
If 1, following signals can be monitored:
[0] = ClkOn_Sys_Clk
[1] = Clkon_Symb_Clk
[2] = Clkon_Symbx2_Clk
[3] = Clkon_Symbx4_Clk
[4] = Clkon_Chip_Clk
[5] = Clkon_Cx48_Clk
[6] = Clkon_Cx4_Clk
[7] = Clkon_Samp_Clk
[8] = wDivClkEn_D512
[9] = wDivClkEn_D256
[10] = wDivClkEn_D128
[11] = wDivClkEn_D16
[12] = wDivClkEn_D48
[13] = wDivClkEn_D8
[14] = wDivClkEn_D4
[15] = wDivClkEn_D1
[16] = wClkOvrEn_D2n
[19:17] = 0
[20] = i_DivEn
[31:21] = 11'b0
</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_MON_CFG</name>
              <description>[0 = Sys_Clk_Gat
[1] = Samp_Clk_Gat
[2] = Cx4_Clk_Gat
[3] = chip_Clk_Gat
[4] = Symbx4_Clk_Gat
[5] = Symbx2_Clk_Gat
[6] = Symb_Clk_Gat
[7] = i_SCAN_CLK1
Default = Sys_Clk_Gat
</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ZGB_BL_SW_RESET</name>
          <description>ZGB Clock S/W Reset Register
Apply S/W reset to turn on S/W reset for specific clock source, and then turn off S/W reset again
0 = Reset
1 = Write 1 to this bit to clear reset
</description>
          <addressOffset>0x0098</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD0</name>
              <description>No Description</description>
              <bitRange>[31:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ZGB_SW_RESET</name>
              <description>0 = No reset
1 = Reset all ZGB blocks (Auto clear) 
</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BLE_CLKSEL</name>
          <description>ZGB Clock S/W Reset Register
Apply S/W reset to turn on S/W reset for specific clock source, and then turn off S/W reset again
0 = Reset
1 = Write 1 to this bit to clear reset
</description>
          <addressOffset>0x00A0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD0</name>
              <description>No Description</description>
              <bitRange>[31:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BLE_CLK_8M_SEL</name>
              <description>0 = 4 MHz
1 = 8 MHz
</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BLE_CLK_32M_SEL</name>
              <description>0 = 16 MHz/4 MHz
1 = 32 MHz/8 MHz
</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BLE_CMU_SW_RESETn</name>
              <description>Apply S/W reset turn on S/W reset for specific clock source, and then turn off S/W reset again
0 = No reset
1 = Reset all BLE blocks (auto clear)
</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <!--PMU-->
    <peripheral>
      <name>PMU</name>
      <version>1.0</version>
      <description>Power Management </description>
      <baseAddress>0x40080800</baseAddress>
      <size>32</size>
      <access>read-write</access>
      <addressBlock>
        <offset>0</offset>
        <size>0x90</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>LDOOFF</name>
        <description>LDOOFF interrupt</description>
        <value>13</value>
      </interrupt>
      <interrupt>
        <name>UDS_TICK</name>
        <description>UDS_TICK</description>
        <value>11</value>
      </interrupt>
      <interrupt>
        <name>UDS_RTC</name>
        <description>UDS_RTC</description>
        <value>12</value>
      </interrupt>
      <interrupt>
        <name>LVD</name>
        <description>LVD</description>
        <value>16</value>
      </interrupt>
      <interrupt>
        <name>BOD</name>
        <description>BOD</description>
        <value>83</value>
      </interrupt>
      <registers>
        <register>
          <name>STBCON</name>
          <description>Power Saving Mode Control Register</description>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD5</name>
              <description>No Description</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>WAKEUP_SRC_SEL</name>
              <description>Wake-up source selection
0 = Interface wake-up (Wakeup pad, I2C, SPI, UART, GPIO, and warm reset)
1 = Wake-up pad only</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD4</name>
              <description>No Description</description>
              <bitRange>[29:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAD_WAKEUP</name>
              <description>Wake-up running (value is differ as WAKEUP PAD)
0 = Wake-up is high (in reading)
1 = Clears running state of wake-up (in writing)
1 = Wake-up (is low) is in running state </description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ADC_running</name>
              <description>ADC running
0 = Interface is idle (in reading)
1 = Clear running state of NOR interface (in writing)
1 = Interface is in running state 
</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>QSPI_Host_running</name>
              <description>QSPI host running
0 = Interface is idle (in reading)
1 = Clear running state of NOR interface (in writing)
1 = NOR interface is in running state 
</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD3</name>
              <description>No Description</description>
              <bitRange>[19:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>NOR_running</name>
              <description>NOR running
0 = NOR interface is idle (in reading)
1 = Clear running state of GPIO interface (in writing)
1 = GPIO interface is in running state 
</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO_running</name>
              <description>GPIO running
0 = GPIO interface is idle (in reading)
1 = Clear running state of SPI master interface (in writing)
1 = SPI Master interface is in running state 
</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD2</name>
              <description>No Description</description>
              <bitRange>[14:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>UART_SPIB_running</name>
              <description>UART or SPI both running
0 = UART or SPI both interface is idle (in reading)
1 = Clear running state of I2C master1 interface (in writing)
1 = I2C master1 interface is in running state 
</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD1</name>
              <description>No Description</description>
              <bitRange>[11:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>I2CB1_running</name>
              <description>I2C both1 running
0 = I2C master1 interface is idle (in reading)
1 = Clear running state of I2C master0 interface (in writing)
1 = I2C master0 interface is in running state 
</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>I2CB0_running</name>
              <description>I2C both0 running
0 = I2C master0 interface is idle (in reading)
1 = Clear running state of I2C master0 interface (in writing)
1 = I2C master0 interface is in running state
</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[7:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>UART1_running</name>
              <description>UART1 running
0 = UART1 interface is idle (in reading)
1 = Clear running state of UART1 interface (in writing)
1 = UART1 interface is in running state
</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UART0_running</name>
              <description>UART0 running
0 = UART0 interface is idle (in reading)
1 = Clear running state of UART0 interface (in writing)
1 = UART0 interface is in running state
</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PowerModeSelection</name>
              <description>000 = Sleep all retention mode
001 = Sleep RAM retention mode 
010 = Deep sleep
100 = Ultra deep sleep 
Others = Active
</description>
              <bitRange>[3:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>mask_stby</name>
              <description>0 = Standby masking off
1 = Standby masking on (standby disable)
</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STBCFG</name>
          <description>IDLE/Sleep All Retention Mode Configuration Register</description>
          <addressOffset>0x0004</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000040</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>NOISE_FILTER_SEL</name>
              <description>00 = 1ns noise filter
01 = 2ns noise filter
10 = 3ns noise filter
11 = 4ns noise filter
</description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD3</name>
              <description>No Description</description>
              <bitRange>[29:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LDOOFFCON</name>
          <description>Sleep RAM Retention/Deep Sleep/Ultra Deep Sleep Mode Control Register</description>
          <addressOffset>0x0008</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00140004</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CNT_VALUE</name>
              <description>CNT value (0x14 @ 2Mhz) </description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD0</name>
              <description>No Description</description>
              <bitRange>[15:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>MATCH</name>
              <description>CNT match
0 : standby
1 : match 
</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CNT_CLKSEL</name>
              <description>"CNT clk selection
0: RCOSC 4MHz
1 : system clk"
</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PAD_LDOOFF</name>
              <description>ldooff pad value</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAD_WAKEUP</name>
              <description>wakeup pad value / WKL_SYSOSCSTOP@TMODE
0: low
1 : high"
</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CNT_CLR</name>
              <description>CNT value clear
0 : no effect
1 : clear for CNT, MATCH 
</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CNT_EN</name>
              <description>CNT enable
0: disable
1: enable"
</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LDOOFFCNT</name>
          <description>Active LDO Control Register</description>
          <addressOffset>0x000C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x0000007F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CNT</name>
              <description>Count value</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EVTMSK1</name>
          <description>Event Mask Control Register 1</description>
          <addressOffset>0x0010</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pmw5</name>
              <description>No Description</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pwm4</name>
              <description>No Description</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pmw3</name>
              <description>No Description</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pwm2</name>
              <description>No Description</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pmw1</name>
              <description>No Description</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pwm0</name>
              <description>No Description</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dma_7</name>
              <description>No Description</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dma_6</name>
              <description>No Description</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dma_5</name>
              <description>No Description</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dma_4</name>
              <description>No Description</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dma_3</name>
              <description>No Description</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dma_2</name>
              <description>No Description</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dma_1</name>
              <description>No Description</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dma_0</name>
              <description>No Description</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc</name>
              <description>No Description</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LVD_IRQ</name>
              <description>No Description</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FPU_irq</name>
              <description>No Description</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>nor_irq</name>
              <description>No Description</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ldooff_irq</name>
              <description>No Description</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tick_alarm</name>
              <description>No Description</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tick_irq</name>
              <description>No Description</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>timer5_16_en</name>
              <description>No Description</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>timer4_16_en</name>
              <description>No Description</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>timer3_16_en</name>
              <description>No Description</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>timer2_16_en</name>
              <description>No Description</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>timer1_16_en</name>
              <description>No Description</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>timer6_32_en</name>
              <description>No Description</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rtc_alarm</name>
              <description>No Description</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rtc_irq</name>
              <description>No Description</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>wdt_timer_irq</name>
              <description>No Description</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Extreset_irq</name>
              <description>No Description</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WakeUp_irq</name>
              <description>No Description</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EVTMSK2</name>
          <description>Event Mask Control Register 2</description>
          <addressOffset>0x0014</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>gpio13_irq</name>
              <description>No Description</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>gpio12_irq</name>
              <description>No Description</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>gpio11_irq</name>
              <description>No Description</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>gpio10_irq</name>
              <description>No Description</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>gpio9_irq</name>
              <description>No Description</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>gpio8_irq</name>
              <description>No Description</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>gpio7_irq</name>
              <description>No Description</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>gpio6_irq</name>
              <description>No Description</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>gpio5_irq</name>
              <description>No Description</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>gpio4_irq</name>
              <description>No Description</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>gpio3_irq</name>
              <description>No Description</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>gpio2_irq</name>
              <description>No Description</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>gpio1_irq</name>
              <description>No Description</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>gpio0_irq</name>
              <description>No Description</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>aes_irq</name>
              <description>No Description</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sss_wdt1</name>
              <description>No Description</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sss_wdt0</name>
              <description>No Description</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sss_mailbox</name>
              <description>No Description</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sss_irq</name>
              <description>No Description</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bletm_2</name>
              <description>No Description</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bletm_1</name>
              <description>No Description</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bletm_0</name>
              <description>No Description</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ble_cm</name>
              <description>No Description</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ble_2</name>
              <description>No Description</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ble_1</name>
              <description>No Description</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ble_0</name>
              <description>No Description</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>zgbmac</name>
              <description>No Description</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>uart1_irq</name>
              <description>No Description</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>uart0_irq</name>
              <description>No Description</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>I2CB1_irq</name>
              <description>No Description</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>I2CB0_irq</name>
              <description>No Description</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>usi_irq</name>
              <description>No Description</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EVTMSK3</name>
          <description>Event Mask Control Register 3</description>
          <addressOffset>0x0018</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>spare_irq</name>
              <description>No Description</description>
              <bitRange>[27:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>gpio31_irq</name>
              <description>No Description</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>gpio30_irq</name>
              <description>No Description</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>gpio29_irq</name>
              <description>No Description</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>gpio28_irq</name>
              <description>No Description</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>gpio27_irq</name>
              <description>No Description</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>gpio26_irq</name>
              <description>No Description</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>gpio25_irq</name>
              <description>No Description</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>gpio24_irq</name>
              <description>No Description</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>gpio23_irq</name>
              <description>No Description</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>gpio22_irq</name>
              <description>No Description</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>gpio21_irq</name>
              <description>No Description</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>gpio20_irq</name>
              <description>No Description</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>gpio19_irq</name>
              <description>No Description</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>gpio18_irq</name>
              <description>No Description</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>gpio17_irq</name>
              <description>No Description</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>gpio16_irq</name>
              <description>No Description</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>gpio15_irq</name>
              <description>No Description</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>gpio14_irq</name>
              <description>No Description</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EVTMSK4</name>
          <description>Event Mask Control Register 4</description>
          <addressOffset>0x001C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD3</name>
              <description>No Description</description>
              <bitRange>[31:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>wakeup_bod</name>
              <description>No Description</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD2</name>
              <description>No Description</description>
              <bitRange>[21:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ADC_running</name>
              <description>No Description</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD1</name>
              <description>No Description</description>
              <bitRange>[16:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NOR_running</name>
              <description>No Description</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO_running</name>
              <description>No Description</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[10:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MEMPWRCON</name>
          <description>Memory Power Control Register</description>
          <addressOffset>0x0024</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD1</name>
              <description>No Description</description>
              <bitRange>[31:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ROM32KBforCM0SSS</name>
              <description>No Description</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ROM20KBforCM4F</name>
              <description>No Description</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[11:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MCSCON</name>
          <description>MCS Control Register</description>
          <addressOffset>0x002C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x0001003C</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD2</name>
              <description>No Description</description>
              <bitRange>[31:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ROM_KCS</name>
              <description>CM4F + CM0 ROM KCS</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ROM_MCS</name>
              <description>No Description</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD1</name>
              <description>No Description</description>
              <bitRange>[15:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CACHE_RAM_MCS</name>
              <description>No Description</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SSS_SRAM3_125KB_MCS</name>
              <description>SSS SRAM 3.125 KB MCS</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SSS_SRAM_MCS</name>
              <description>SSS SRAM 16 KB/3.125 KB MCS</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SRAM4KB_MCS</name>
              <description>UDS SRAM 4 KB MCS</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SRAM20KB_MCS</name>
              <description>DS SRAM 20 KB MCS</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SRAM32KB_MCS</name>
              <description>SRAM32 KB MCS</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DS_LDOCON</name>
          <description>Deep Sleep LDO Control Register</description>
          <addressOffset>0x0040</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x0000007E</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD2</name>
              <description>No Description</description>
              <bitRange>[31:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DSRAM20KSWINV_W</name>
              <description>DS RAM 20 KB SW_INV from LDO_MEM 
0 = Switch enable
1 = Switch disable
This is a write-only field. Ignore the read value 
</description>
              <bitRange>[17:17]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>RSVD1</name>
              <description>No Description</description>
              <bitRange>[16:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DSRAM20KSWINV_R</name>
              <description>DS RAM 20 KB SW_INV from LDO_MEM 
0 = Switch enable
1 = Switch disable
This is a read-only field(status)
</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DSLDOPD</name>
              <description>DS_LDO_ALV power-down
(0 = LDO enable, 1 = Power down)
[7]: LDO_ALV_PD (default enable)
[6]: LDO_ALV_GPADC_PD
[5]: LDO_ALV_RAM_PD (default disable)
[4]: LDO_ALV_RTC_PD (reserved)
[3]: LDO_ALV_TSU_PD
[2]: LDO_ALV_TSU_VREF_PD (don't use, can control with [3])
[1]: LDO_ALV_RCO_PD (default disable)
[0]: 0 = Don't use this bit LDO_ALV_PMU_PD (default enable) for INT POR ALV
</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DS_RCOCON</name>
          <description>Deep Sleep RCO Control Register</description>
          <addressOffset>0x0044</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD1</name>
              <description>No Description</description>
              <bitRange>[31:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DSRCOEN</name>
              <description>DS RCO 10 kHz enable
0 = Disable
1 = Enable
</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DS_TSUCON</name>
          <description>Deep Sleep TSU Control Register</description>
          <addressOffset>0x0048</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD1</name>
              <description>No Description</description>
              <bitRange>[31:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DSTSUEN</name>
              <description>DS TSU enable
0 = Disable
1 = Enable
</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DS_LDO_DCXO_CON</name>
          <description>Deep Sleep LDO_DCXO Control Register</description>
          <addressOffset>0x004C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD1</name>
              <description>No Description</description>
              <bitRange>[31:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DSLDODCXOPDEN</name>
              <description>DS_LDO_DCXO pull-down enable during discharge
0 = Discharge disable
1 = Discharge enable
</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DSLDODCXOPD</name>
              <description>DS_LDO_DCXO power-down 
0 = LDO enable 
1 = LDO power-down
</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DS_DCXOCON</name>
          <description>Deep Sleep DCXO Control Register</description>
          <addressOffset>0x0050</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000003</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD1</name>
              <description>No Description</description>
              <bitRange>[31:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCXO_TDAC_MEAS</name>
              <description>DCXO TDAC_MEAS: time DAC code monitor</description>
              <bitRange>[19:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DCXO_IDAC_MEAS</name>
              <description>DCXO IDAC_MEAS: current DAC code monitor</description>
              <bitRange>[11:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DCXO_LOCK</name>
              <description>DCXO LOCK for RF / ABX block (phase noise: 40 ppm)
0 = No lock
1 = Lock
</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCXO_LOCKD</name>
              <description>DCXO LOCKD for digital block (duty 50:50)
0 = No lock
1 = Lock
</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DCXOEN</name>
              <description>DS DCXO enable 
0 = Disable 
1 = Enable
</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SLEEPCON</name>
          <description>Sleep Control Register</description>
          <addressOffset>0x0054</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x0000003D</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD2</name>
              <description>No Description</description>
              <bitRange>[31:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LDO_MEM_DCGEN</name>
              <description>No Description</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LDO_DBB_DCGEN</name>
              <description>No Description</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BUCK_DCGEN</name>
              <description>No Description</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LDO_ANA_DCGEN</name>
              <description>No Description</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD1</name>
              <description>No Description</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LDO_MEM_EN</name>
              <description>No Description</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LDO_DBB_EN</name>
              <description>No Description</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PERI_BGR_EN</name>
              <description>No Description</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[2:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UDSCON</name>
          <description>Ultra Deep Sleep Control Register</description>
          <addressOffset>0x0080</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x0001702F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD1</name>
              <description>No Description</description>
              <bitRange>[31:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UDSRAM_SW_SF</name>
              <description>No Description</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UDSRAM_SW_LDO</name>
              <description>No Description</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PAD_ALV_VAEN</name>
              <description>No Description</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PAD_SNS_EN</name>
              <description>No Description</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PAD_RTO_EN</name>
              <description>No Description</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LVD_DET</name>
              <description>No Description</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LVD_CLR</name>
              <description>No Description</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LVDIMC</name>
              <description>No Description</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LVDRC</name>
              <description>No Description</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD0</name>
              <description>No Description</description>
              <bitRange>[7:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UDSBODLVDEN</name>
              <description>No Description</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UDSRCOEN</name>
              <description>No Description</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RETCON</name>
          <description>Retention Control Register</description>
          <addressOffset>0x0084</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD1</name>
              <description>No Description</description>
              <bitRange>[31:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FLAG_clear</name>
              <description>No Description</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WAKEUP_BOD_IRQ</name>
              <description>No Description</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>WAKEUP_RTC_IRQ</name>
              <description>No Description</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>WAKEUP_TICK_IRQ</name>
              <description>No Description</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>WAKEUP_PAD_FALL</name>
              <description>No Description</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>WAKEUP_SLEEP</name>
              <description>No Description</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>WAKEUP_DSLEEP</name>
              <description>No Description</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>WAKEUP_UDSLEEP</name>
              <description>No Description</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LevelshifterCLK</name>
              <description>No Description</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LevelshifterEnable</name>
              <description>No Description</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UDSCON_REG</name>
          <description>UDS Register Control Register</description>
          <addressOffset>0x0088</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x0000000F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>sys_update</name>
              <description>No Description</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYS_OFFSET</name>
              <description>System counter update
0 = S/W cannot update system counter
1 = S/W can update system counter
</description>
              <bitRange>[30:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>backup_opt</name>
              <description>0 = Enable
1 = Disable
</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>backup_clr</name>
              <description>Backup_clr (read value shows backup_done or not)</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>prescaler</name>
              <description>Prescaler value for calculation of system counter</description>
              <bitRange>[24:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UDSCON_REG_CLR</name>
              <description>You must write 1 and 0 for clearing</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UDS_ADDRESS_SEL</name>
              <description>UDS write address selection (0~15)</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UDS_CON_EN</name>
              <description>UDS CON address selection</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UDS_PMU_EN</name>
              <description>UDS PMU address selection</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UDS_WR_CLK</name>
              <description>UDS register write/read clock</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UDSCON_DATA</name>
          <description>UDS Data Control Register</description>
          <addressOffset>0x008C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x0000000F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>UDSCON_DATA</name>
              <description>Data which are written in UDS_CON/PMU register</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <!--TMR0-->
    <peripheral>
      <name>TMR0</name>
      <version>1.0</version>
      <description>16-bit simple timer</description>
      <headerStructName>TIMER</headerStructName>
      <baseAddress>0x400A0000</baseAddress>
      <size>32</size>
      <access>read-write</access>
      <addressBlock>
        <offset>0</offset>
        <size>0x10</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>TIMER0</name>
        <description>TIMER0: This interrupt occurs when CNT is matched with DAT</description>
        <value>6</value>
      </interrupt>
      <registers>
        <register>
          <name>CTR</name>
          <description>16-Bit Timer Control Register </description>
          <addressOffset>0x000</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000010</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD1</name>
              <description>No Description</description>
              <bitRange>[31:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>Prescaler</name>
              <description>Prescaler bit bits contain 8 bits prescaler value bits
0x00 = Timer clock is divided by 1
0xFF = Timer clock is divided by 256
</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD0</name>
              <description>No Description</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ClkSel</name>
              <description>Timer input clock selection bit 
000 = DS_DCXO 32 MHz
001 = System clock (HCLKperi)(default)
011 = Crystal Oscillator (32.768 kHz, XTAL)
101 = Low frequency (30 kHz) DS RCO
111 = Low frequency (10 kHz) UDS RCO 
</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IntEn</name>
              <description>Timer interrupt control bit
This bit enables or disables timer interrupt function.
0 = Disable 
1 = Enable 
</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CntRestart</name>
              <description>Counter restart control bit
This bit determines a counting method.
0 = Free run (Counter register value increments after matching with the data value, CNTR[15:0]) 
1 = Restart (Counter register value is cleared and counting is resumed from 0x0000 after matching with the data value)
</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ClkEn</name>
              <description>Timer clock control bit
This bit enables or disables the clock source for the timers
0 = Disable (Counter is stopped) 
1 = Enable (Counter is started again)
</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TmrEn</name>
              <description>Timer operation control bit
This bit controls the timer operation.
0 = Reset timer in CNTR and disables counter operation 
1 = Enables counter operation.
The counter value is increased by 1 on accepting every clock.
</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CNTR</name>
          <description>16-Bit Timer Counter Register </description>
          <addressOffset>0x004</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[31:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>count</name>
              <description>16 bits counter value bits
For more information on timer counter value, refer to CTR[2].
</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR</name>
          <description>16-Bit Timer Data Register </description>
          <addressOffset>0x008</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x0000FFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[31:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>value</name>
              <description>No Description</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <!--TMR1-->
    <peripheral derivedFrom="TMR0">
      <name>TMR1</name>
      <baseAddress>0x400A0010</baseAddress>
      <interrupt>
        <name>TIMER1</name>
        <description>TIMER1: This interrupt occurs when CNT is matched with DAT</description>
        <value>7</value>
      </interrupt>
    </peripheral>
    <!--TMR2-->
    <peripheral derivedFrom="TMR0">
      <name>TMR2</name>
      <baseAddress>0x400A0020</baseAddress>
      <interrupt>
        <name>TIMER2</name>
        <description>TIMER2: This interrupt occurs when CNT is matched with DAT</description>
        <value>8</value>
      </interrupt>
    </peripheral>
    <!--TMR3-->
    <peripheral derivedFrom="TMR0">
      <name>TMR3</name>
      <baseAddress>0x400A0030</baseAddress>
      <interrupt>
        <name>TIMER3</name>
        <description>TIMER3: This interrupt occurs when CNT is matched with DAT</description>
        <value>9</value>
      </interrupt>
    </peripheral>
    <!--TMR4-->
    <peripheral derivedFrom="TMR0">
      <name>TMR4</name>
      <baseAddress>0x400A0040</baseAddress>
      <interrupt>
        <name>TIMER4</name>
        <description>TIMER4: This interrupt occurs when CNT is matched with DAT</description>
        <value>10</value>
      </interrupt>
    </peripheral>
    <!--WDT-->
    <peripheral>
      <name>WDT</name>
      <version>1.0</version>
      <description>20-bit WatchdogTimer</description>
      <headerStructName>WatchdogTimer</headerStructName>
      <baseAddress>0x400A0080</baseAddress>
      <size>32</size>
      <access>read-write</access>
      <addressBlock>
        <offset>0</offset>
        <size>0x40</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>WDT</name>
        <description>WDT: This interrupt occurs when CNT is matched with DAT</description>
        <value>2</value>
      </interrupt>
      <registers>
        <register>
          <name>CNTR</name>
          <description>20 Bits Watchdog Timer Counter Register </description>
          <addressOffset>0x00</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[31:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>count</name>
              <description>16 bits counter value bits
For more information on timer counter value, refer to CTR[2].
</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR</name>
          <description>20-Bit Watchdog Timer Data Register </description>
          <addressOffset>0x004</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x000FFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[31:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>value</name>
              <description>No Description</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTR</name>
          <description>20-Bit Watchdog Timer Control Register </description>
          <addressOffset>0x008</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000008</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD0</name>
              <description>No Description</description>
              <bitRange>[31:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ClkSel</name>
              <description>Watchdog clock source selection bit
0 = DCXO 32 MHz
1 = System clock (HCLKperi)
</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WDT_CNT_CLKSEL</name>
              <description>Counter clock selection bit (pre-scalar)
0 = Clock is divided by 256 (precount: 0x100)
1 = Clock bypass (precount: 0x1)
</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RstEn</name>
              <description>Chip reset control bit
0 = Chip does not enter RESET state when the watchdog timer interrupt is occurred. 
1 = Chip enters RESET state when the watchdog timer interrupt is occurred.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WDTEn</name>
              <description>Watchdog timer operation control bit
0 = Reset watchdog timer and disable counter operation 
1 = Enable counter operation
</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <!--PWM0: PWM0-->
    <peripheral>
      <name>PWM0</name>
      <version>1.0</version>
      <description>PWM</description>
      <headerStructName>PWM</headerStructName>
      <baseAddress>0x400A0400</baseAddress>
      <size>32</size>
      <access>read-write</access>
      <addressBlock>
        <offset>0</offset>
        <size>0x100</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>PWM0</name>
        <description>PWM ch 1</description>
        <value>26</value>
      </interrupt>
      <registers>
        <register>
          <name>TCFG0</name>
          <description>Timer Configuration Register 0 that configures the two 8-bit prescaler and dead zone length</description>
          <addressOffset>0x0000</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000101</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>Deadzonelength</name>
              <description>Dead zone length</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Prescaler1</name>
              <description>Prescaler 1 value for timer 2</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Prescaler0</name>
              <description>Prescaler 1 value for timer 0 and 1</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCFG1</name>
          <description>Timer Configuration Register 1 that controls 3 mux select bit</description>
          <addressOffset>0x0004</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[31:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DividerMUX2</name>
              <description>Selects mux input for PWM timer2
000 = 1/1
001 = 1/2
010 = 1/4
011 = 1/8
100 = 1/16
</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD2</name>
              <description>No Description</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DividerMUX1</name>
              <description>Selects mux input for PWM timer 1
000 = 1/1
001 = 1/2
010 = 1/4
011 = 1/8
100 = 1/16
</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD3</name>
              <description>No Description</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DividerMUX0</name>
              <description>Selects mux input for PWM timer0
000 = 1/1
001 = 1/2
010 = 1/4
011 = 1/8
100 = 1/16
</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON</name>
          <description>Timer Control Register</description>
          <addressOffset>0x0008</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>INTRGEN</name>
              <description>PWM interrupt selection
0 = Edge trigger
1 = Level trigger
</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[30:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>Timer2autoreloadonoff</name>
              <description>Enables the auto reload of timer 2
0 = One-shot
1 = Interval mode (Auto-reload)
</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Timer2outputinverteron_off</name>
              <description>Enables the output inverter of timer 2
0 = Inverter off
1 = TOUT_2 inverter-on
</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Timer2manualupdate</name>
              <description>Manual update of timer 2
0 = No operation
1 = Updates TCNTB2 and TCMPB2
</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Timer2startstop</name>
              <description>Start of timer 2
0 = Stops the timer 2
1 = Starts the timer 2
</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Timer1autreloadonoff</name>
              <description>Enables the auto reload of timer 1
0 = One-shot
1 = Interval mode (Auto-reload)
</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Timer1outputinverteronoff</name>
              <description>Enables the output inverter of timer 1
0 = Inverter off
1 = TOUT_1 inverter-on
</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Timer1manualupdate</name>
              <description>Manual update of timer 1
0 = No operation
1 = Updates TCNTB1 and TCMPB1
</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Timer1startstop</name>
              <description>Start of timer 1
0 = Stops the timer 1
1 = Starts the timer 1
</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD2</name>
              <description>No Description</description>
              <bitRange>[7:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Deadzoneenable</name>
              <description>Dead zone generator enable/disable
0 = Disable
1 = Enable 
</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Timer0utoreloadonoff</name>
              <description>Enables the auto reload of timer 0
0 = One-shot
1 = Interval mode (Auto-reload)
</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Timer0outputinverteronoff</name>
              <description>Enables the output inverter of timer 0
0 = Inverter off
1 = TOUT_0 inverter-on
</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Timer0manualupdate</name>
              <description>Manual update of timer 0
0 = No operation
1 = Updates TCNTB0 and TCMPB0
</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Timer0startstop</name>
              <description>Start of timer 0
0 = Stops the timer 0
1 = Starts the timer 0
</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCNTB0</name>
          <description>Timer 0 Count Buffer Register</description>
          <addressOffset>0x000C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>Timer0countbuffer</name>
              <description>Timer 0 count buffer register</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCMPB0</name>
          <description>Timer 0 Compare Buffer Register</description>
          <addressOffset>0x0010</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>Timer0comparebuffer</name>
              <description>No Description</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCNTO0</name>
          <description>Timer 0 Count Observation Register</description>
          <addressOffset>0x0014</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>Timer0countobservation</name>
              <description>No Description</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCNTB1</name>
          <description>Timer 1 Count Buffer Register</description>
          <addressOffset>0x0018</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>Timer1countbuffer</name>
              <description>Timer 0 compare buffer register</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCMPB1</name>
          <description>Timer 1 Compare Buffer Register</description>
          <addressOffset>0x001C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>Timer1comparebuffer</name>
              <description>Timer 0 compare buffer register</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCNTO1</name>
          <description>Timer 1 Count Observation Register</description>
          <addressOffset>0x0020</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>Timer1countobservation</name>
              <description>No Description</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCNTB2</name>
          <description>Timer 2 Count Buffer Register</description>
          <addressOffset>0x0024</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>Timer2countbuffer</name>
              <description>No Description</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCMPB2</name>
          <description>Timer 2 Compare Buffer Register</description>
          <addressOffset>0x0028</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>Timer2comparebuffer</name>
              <description>No Description</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCNTO2</name>
          <description>Timer 2 Count Observation Register</description>
          <addressOffset>0x002C</addressOffset>
          <size>32</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>Timer2countobservation</name>
              <description>No Description</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TINT_CSTAT</name>
          <description>Timer Interrupt Control and Status Register</description>
          <addressOffset>0x0044</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[31:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>Timer2interruptstatus</name>
              <description>Timer 2 interrupt status bit
Write 1 to clear this bit.
</description>
              <bitRange>[7:7]</bitRange>
              <access>read-writeOnce</access>
            </field>
            <field>
              <name>Timer1interruptstatus</name>
              <description>Timer 1 interrupt status bit
Write 1 to clear this bit.
</description>
              <bitRange>[6:6]</bitRange>
              <access>read-writeOnce</access>
            </field>
            <field>
              <name>Timer0interruptstatus</name>
              <description>Timer 0 interrupt status bit
Write 1 to clear this bit.
</description>
              <bitRange>[5:5]</bitRange>
              <access>read-writeOnce</access>
            </field>
            <field>
              <name>RSVD2</name>
              <description>No Description</description>
              <bitRange>[4:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>Timer2interruptenable</name>
              <description>Enables timer 2 Interrupt
0 = Disable
1 = Enable
</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Timer1interruptenable</name>
              <description>Enables timer 1 Interrupt
0 = Disable
1 = Enable
</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Timer0interruptenable</name>
              <description>Enables timer 0 Interrupt
0 = Disable
1 = Enable
</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <!--PWM1: PWM1-->
    <peripheral derivedFrom="PWM0">
      <name>PWM1</name>
      <baseAddress>0x400A0500</baseAddress>
      <interrupt>
        <name>PWM1</name>
        <description>PWM ch 2</description>
        <value>27</value>
      </interrupt>
    </peripheral>
    <!--RTC: Real time clock-->
    <peripheral>
      <name>RTC</name>
      <version>1.0</version>
      <description>Real time clock</description>
      <baseAddress>0x400A0A00</baseAddress>
      <size>32</size>
      <access>read-write</access>
      <addressBlock>
        <offset>0</offset>
        <size>0x100</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>RTC_TICK</name>
        <description>RTC Interrupt </description>
        <value>3</value>
      </interrupt>
      <interrupt>
        <name>RTC_ALARM</name>
        <description>RTC Interrupt </description>
        <value>4</value>
      </interrupt>
      <interrupt>
        <name>RTC_TICK1</name>
        <description>RTC Interrupt </description>
        <value>5</value>
      </interrupt>
      <registers>
        <register>
          <name>INTP</name>
          <description>Interrupt Pending Register
interrupt pending bit
0 = Interrupt did not occur
1 = Interrupt occurred
</description>
          <addressOffset>0x0030</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[31:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TimeTIC_1</name>
              <description>No Description</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ALARM</name>
              <description>No Description</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TimeTIC_0</name>
              <description>No Description</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTCCON</name>
          <description>RTC Control Register</description>
          <addressOffset>0x0040</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[31:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TICEN_1</name>
              <description>Enables the tick timer 
0 = Disable
1 = Enable
</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TICCKSEL_1</name>
              <description>Tick timer sub-clock selection
sub-clock frequency = RTC clock source frequency / 2 ^ (TICKSEL_1)
</description>
              <bitRange>[13:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLKOUTEN</name>
              <description>Enables RTC clock output on XRTCCLKO pad
0 = Disable
1 = Enable
</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TICEN_0</name>
              <description>Enables tick timer 
0 = Disables tick timer and resets tick count
1 = Enables tick timer
</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TICCKSEL_0</name>
              <description>Tick timer sub-clock selection
sub-clock frequency = RTC clock source frequency / 2 ^ (TICKSEL_1)
</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLKRST</name>
              <description>Enables RTC clock and tick timer clock reset
0 = Enables RTC clock (1 Hz clock) and tick timer clock
1 = Disables RTC clock and tick timer clock
NOTE: When CTLEN is enabled, CLKRST affects RTC.
NOTE : If you set tick timer count as 0 (TICCKSEL=4'b0000), it is always on regardless of RTCCON[3]
</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CNTSEL</name>
              <description>Selects the BCD count 
0 = Merge BCD counters
1 = Reserved (separate BCD counters)
NOTE: When CTLEN is enabled, CNTSEL affects RTC.
</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLKSEL</name>
              <description>BCD clock select
0 = XTAL 1/215 divided clock
1 = Reserved (XTAL clock only for test)
NOTE: When CTLEN is enabled, CLKSEL affects RTC.
</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CTLEN</name>
              <description>Enables RTC control
0 = Disables RTC control
1 = Enables RTC control
NOTE: 
1. When CTLEN is enabled, you can change the BCD time count settings, 215 clock divider reset settings, BCD counter selection, and BCD clock selection.
2. RTC power consumption increases when CTLEN is 1. This bit should be 0 to achieve low power consumption when RTC control is not required.
</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TICCNT_0</name>
          <description>Tick Time Count Register</description>
          <addressOffset>0x0044</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TICK_TIME_COUNT</name>
              <description>32-bit tick time count value
NOTE: This value must be greater than 3.
</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TICCNT_1</name>
          <description>Tick Time Count Register</description>
          <addressOffset>0x0048</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TICK_TIME_COUNT</name>
              <description>32-bit tick time count value
NOTE: This value must be greater than 3.
</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTCALM</name>
          <description>RTC Alarm Control Register
0 = disable
1 = enable</description>
          <addressOffset>0x0050</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[31:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ALMEN</name>
              <description>No Description</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>YEAREN</name>
              <description>No Description</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MONEN</name>
              <description>No Description</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DAYEN</name>
              <description>No Description</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HOUREN</name>
              <description>No Description</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MINEN</name>
              <description>No Description</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SECEN</name>
              <description>No Description</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ALMSEC</name>
          <description>Alarm Second Data Register</description>
          <addressOffset>0x0054</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[31:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SECDATA</name>
              <description>BCD value for an alarm second
0 to 5
</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SECDATA_</name>
              <description>0 to 9</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ALMMIN</name>
          <description>Alarm Minute Data Register</description>
          <addressOffset>0x0058</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[31:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>MINDATA</name>
              <description>BCD value for alarm minute
0 to 5
</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MINDATA_</name>
              <description>0 to 9</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ALMHOUR</name>
          <description>Alarm Hour Data Register</description>
          <addressOffset>0x005C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[31:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>HOURDATA</name>
              <description>BCD value for alarm hour
0 to 2
</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HOURDATA_</name>
              <description>0 to 9</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ALMDAY</name>
          <description>Alarm Day Data Register</description>
          <addressOffset>0x0060</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[31:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DAYDATA</name>
              <description>BCD value for alarm day, from 0 to 28/ 29/ 30/ 31
0 to 3
</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DAYDATA_</name>
              <description>0 to 9</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ALMMON</name>
          <description>Alarm Month Data Register</description>
          <addressOffset>0x0064</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[31:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>MONDATA</name>
              <description>BCD value for alarm month
0 to 1
</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MONDATA_</name>
              <description>0 to 9</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ALMYEAR</name>
          <description>Alarm Year Data Register</description>
          <addressOffset>0x0068</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[31:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>YEARDATA</name>
              <description>BCD value for alarm year
0 to 9
</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>YEARDATA_</name>
              <description>0 to 9</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>YEARDATA__</name>
              <description>0 to 9</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BCDSEC</name>
          <description>BCD Second Register</description>
          <addressOffset>0x0070</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[31:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SECDATA</name>
              <description>BCD value for second
0 to 5
</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SECDATA_</name>
              <description>0 to 9</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BCDMIN</name>
          <description>BCD Minute Register</description>
          <addressOffset>0x0074</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[31:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>MINDATA</name>
              <description>BCD value for minute
0 to 5
</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MINDATA_</name>
              <description>0 to 9</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BCDHOUR</name>
          <description>BCD Hour Register</description>
          <addressOffset>0x0078</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[31:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>HOURDATA</name>
              <description>BCD value for hour
0 to 2
</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HOURDATA_</name>
              <description>0 to 9</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BCDDAY</name>
          <description>BCD Day Register</description>
          <addressOffset>0x007C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[31:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DAYDATA</name>
              <description>BCD value for day
0 to 3
</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DAYDATA_</name>
              <description>0 to 9</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BCDDAYWEEK</name>
          <description>BCD Day of the Week Register</description>
          <addressOffset>0x0080</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[31:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DAYWEEKDATA</name>
              <description>BCD value for a day of the week
1 to 7
</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BCDMON</name>
          <description>BCD Month Register</description>
          <addressOffset>0x0084</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[31:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>MONDATA</name>
              <description>BCD value for month
0 to 1
</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MONDATA_</name>
              <description>0 to 9</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BCDYEAR</name>
          <description>BCD Year Register</description>
          <addressOffset>0x0088</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[31:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>YEARDATA</name>
              <description>BCD value for Year 0 to 9</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>YEARDATA_</name>
              <description>0 to 9</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>YEARDATA__</name>
              <description>0 to 9</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CURTICCNT_0</name>
          <description>Current Tick Time Counter Register</description>
          <addressOffset>0x0090</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>Tickcounterobservation</name>
              <description>Current tick count value</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CURTICCNT_1</name>
          <description>Current Tick Time Counter Register</description>
          <addressOffset>0x0094</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>Tickcounterobservation</name>
              <description>Current tick count value</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <!--ADC: Analog to Digiral Convertor-->
    <peripheral>
      <name>ADC</name>
      <version>1.0</version>
      <description>Analog to Digiral Convertor</description>
      <baseAddress>0x400A0C00</baseAddress>
      <size>32</size>
      <access>read-write</access>
      <addressBlock>
        <offset>0</offset>
        <size>0x100</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>ADC</name>
        <description>ADC Interrupt </description>
        <value>17</value>
      </interrupt>
      <registers>
        <register>
          <name>CEDR</name>
          <description>Clock Enable/Disable Register</description>
          <addressOffset>0x0004</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DbgEn</name>
              <description>No Description</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[30:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CLKSEL</name>
              <description>ADC core clock selection bit
0 = DCXO clock
1 = System clock
</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ClkEn</name>
              <description>No Description</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SRR</name>
          <description>Software Reset Register</description>
          <addressOffset>0x0008</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[31:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SwRst</name>
              <description>No Description</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSR</name>
          <description>Control Set Register</description>
          <addressOffset>0x000C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[31:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>Stop</name>
              <description>ADC conversion stops in continuous conversion
This bit is auto-clear bit.
0 = No effect
1 = Stop the continuous conversion
NOTE: Before starting conversion, you should ensure that ADC is ready for conversion (Busy status bit is set to logical 1 in SR).
</description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>Start</name>
              <description>ADC conversion start bit
0 = No effect
1 = Start ADC conversion
This is the one of ADC trigger sources and software trigger.
</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>CoreEn</name>
              <description>ADC enable bit
0 = No effect
1 = Enable ADC core
Stable status bit in Status Register (SR) is set after stabilization
</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CCR</name>
          <description>Control Clear Register</description>
          <addressOffset>0x0010</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[31:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CoreDis</name>
              <description>No Description</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CDR</name>
          <description>Clock Divider Register</description>
          <addressOffset>0x0014</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x014000A0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD1</name>
              <description>No Description</description>
              <bitRange>[31:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>Iwait</name>
              <description>ADC stable time selection field
This field can determine the ADC0 stable time and it is from 1 clk to 1024 clk.
For example:: ADC CLK = 20 MHz, IWAIT= 20, and stable time = 1us
</description>
              <bitRange>[25:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[15:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ClkDiv</name>
              <description>No Description</description>
              <bitRange>[9:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MR</name>
          <description>Mode Register</description>
          <addressOffset>0x0018</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD3</name>
              <description>No Description</description>
              <bitRange>[31:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LCDBACKUP</name>
              <description>No Description</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD2</name>
              <description>No Description</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ChCnt</name>
              <description>Conversion count field
NOTE: Even in one shot mode, ADC runs multiple conversions if the ChCnt is greater than 000b and smaller than 011b. 
000: One conversion operation of InChNum1 channel
001: Two times conversion operation from InChNum1 to InChNum2
010: Three times conversion operation from InChN1 to InChNum3
011: Four times conversion operation from InChNum1 to InChNum4
</description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Cmode</name>
              <description>Conversion mode control bit
0 = One shot mode. ADC converts max. inputs as specified by the ChCnt in the order specified in the MR and stops. 
1 = Continuous mode. ADC converts max. inputs as specified by the ChCnt in the order specified in the MR and repeats.
NOTE: In continuous mode, after a stop command, the ADC finishes the on-going conversion and this can be an extra conversion.
</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD1</name>
              <description>No Description</description>
              <bitRange>[18:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TimerReqSel</name>
              <description>TBD</description>
              <bitRange>[13:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>StartTrigSel</name>
              <description>ADC start trigger signal selection bits
This field can determine the trigger signal for ADC.
000 = Software (Start bit in CSR)
100 = Timer/counter match
Others = Reserved
</description>
              <bitRange>[7:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD0</name>
              <description>No Description</description>
              <bitRange>[4:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CCSR</name>
          <description>Conversion Channel Sequence Register</description>
          <addressOffset>0x001C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[31:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>InChNum</name>
              <description>Analog input channel number selection field
Conversion sequence  starts  from first conversion channel defined by InChNum1[3:0] to last conversion channel defined by InChNum4[12:15]. 
InChNum Values	Selected Pin
0000	Not selected
0001	ADC0
0010	ADC1
0011	ADC2
0100	ADC3
</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SR</name>
          <description>Status Register</description>
          <addressOffset>0x0024</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[31:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ModeStatus</name>
              <description>Continuous mode status
0 = One shot mode with help of microprocessor
1 = Continuous mode, the peripheral is stand-alone
This bit is initialized to 0 and changes when there is a change of mode. This bit never generates any interruption.
</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EnStatus</name>
              <description>ADC enable/disable status
0 = Disable
1 = Enable
</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BusyStatus</name>
              <description>ADC status monitoring bit
This bit can notify the status of ADC.
0 = ADC is not on a conversion operation
1 = ADC is on a conversion operation
To change the configuration of ADC, you must check SR (ADC status register
</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>StableStatus</name>
              <description>ADC stabilization status
0 = ADC is not stabilized
1 = ADC is stabilized
This bit is set after initialization time.
</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IMSCR</name>
          <description>Interrupt Mask Set/Clear Register</description>
          <addressOffset>0x0028</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD1</name>
              <description>No Description</description>
              <bitRange>[31:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>OVR_CH</name>
              <description>Overrun interrupt mask for CH0, CH1, CH2, CH3
0 = OVR interrupt is masked (Disable the interrupt)
1 = OVR interrupt is not masked (Enable the interrupt)
</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[15:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>Overrun</name>
              <description>No Description</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EOC</name>
              <description>End of conversion interrupt mask
0 = EOC interrupt is masked (Disable the interrupt)
1 = EOC interrupt is not masked (Enable the interrupt)
</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RISR</name>
          <description>Interrupt Mask Set/Clear Register</description>
          <addressOffset>0x002C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD1</name>
              <description>No Description</description>
              <bitRange>[31:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>OVR_CH3</name>
              <description>Overrun raw interrupt status for CH3
Gives the raw interrupt state (prior to masking) of the OVR interrupt
</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>OVR_CH2</name>
              <description>Overrun raw interrupt status for CH2
Gives the raw interrupt state (prior to masking) of the OVR interrupt
</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>OVR_CH1</name>
              <description>Overrun raw interrupt status for CH1
Gives the raw interrupt state (prior to masking) of the OVR interrupt
</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>OVR_CH0</name>
              <description>Overrun raw interrupt status for CH0
Gives the raw interrupt state (prior to masking) of the OVR interrupt
</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[15:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>Overrun</name>
              <description>No Description</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EOC</name>
              <description>End of conversion interrupt mask
0 = EOC interrupt is masked (Disable the interrupt)
1 = EOC interrupt is not masked (Enable the interrupt)
</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MISR</name>
          <description>Interrupt Mask Set/Clear Register</description>
          <addressOffset>0x0030</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD1</name>
              <description>No Description</description>
              <bitRange>[31:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>OVR_CH3</name>
              <description>Overrun raw interrupt status for CH3
Gives the raw interrupt state (prior to masking) of the OVR interrupt
</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>OVR_CH2</name>
              <description>Overrun raw interrupt status for CH2
Gives the raw interrupt state (prior to masking) of the OVR interrupt
</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>OVR_CH1</name>
              <description>Overrun raw interrupt status for CH1
Gives the raw interrupt state (prior to masking) of the OVR interrupt
</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>OVR_CH0</name>
              <description>Overrun raw interrupt status for CH0
Gives the raw interrupt state (prior to masking) of the OVR interrupt
</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD0</name>
              <description>No Description</description>
              <bitRange>[15:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>Overrun</name>
              <description>No Description</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EOC</name>
              <description>End of conversion interrupt mask
0 = EOC interrupt is masked (Disable the interrupt)
1 = EOC interrupt is not masked (Enable the interrupt)
</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICR</name>
          <description>Overrun interrupt
0 = No effect
1 = Clears the overrun interrupt
</description>
          <addressOffset>0x0034</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD1</name>
              <description>No Description</description>
              <bitRange>[31:20]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>OVR_CH3</name>
              <description>No description</description>
              <bitRange>[19:19]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>OVR_CH2</name>
              <description>No description</description>
              <bitRange>[18:18]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>OVR_CH1</name>
              <description>No description</description>
              <bitRange>[17:17]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>OVR_CH0</name>
              <description>No description</description>
              <bitRange>[16:16]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>RSVD0</name>
              <description>No Description</description>
              <bitRange>[15:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>Overrun</name>
              <description>No Description</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>EOC</name>
              <description>No Description</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CRR</name>
          <description>Conversion Result Register</description>
          <addressOffset>0x0038</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[31:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>Data</name>
              <description>Conversion result data of ADC
A/D converter output data result:upto 0x3FFFFF
When A/D conversion is completed, the conversion result is read from the CRR register. The conversion data register should be read after the conversion is completed, EOC bit.
NOTES:
1. ADC result value, without decimation, is set from bit [11] to [21].
2. About ADC Result Data, please refer to chapter 1.2.2.1   
</description>
              <bitRange>[21:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMACTR</name>
          <description>DMA Control Register</description>
          <addressOffset>0x0050</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[31:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DMAOVR</name>
              <description>DMA request stops at over run
0 = Disable
1 = Enable
</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DMAEn</name>
              <description>DMA for ADC enable/disable control bit
0 = Disable 
1 = Enable
</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CRDCH0</name>
          <description>Conversion Result Register of Ain0</description>
          <addressOffset>0x0060</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[31:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>Data</name>
              <description>Conversion result data of ADC
A/D converter output channel data result:upto 0x3FFFFF
When A/D conversion is completed, the conversion result is read from the CRR register. The conversion data register should be read after the conversion is completed, EOC bit.
</description>
              <bitRange>[21:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CRDCH1</name>
          <description>Conversion Result Register of Ain1</description>
          <addressOffset>0x0064</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[31:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>Data</name>
              <description>Conversion result data of ADC
A/D converter output channel data result:upto 0x3FFFFF
When A/D conversion is completed, the conversion result is read from the CRR register. The conversion data register should be read after the conversion is completed, EOC bit.
</description>
              <bitRange>[21:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CRDCH2</name>
          <description>Conversion Result Register of Ain2</description>
          <addressOffset>0x0068</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[31:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>Data</name>
              <description>Conversion result data of ADC
A/D converter output channel data result:upto 0x3FFFFF
When A/D conversion is completed, the conversion result is read from the CRR register. The conversion data register should be read after the conversion is completed, EOC bit.
</description>
              <bitRange>[21:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CRDCH3</name>
          <description>Conversion Result Register of Ain3</description>
          <addressOffset>0x006C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[31:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>Data</name>
              <description>Conversion result data of ADC
A/D converter output channel data result:upto 0x3FFFFF
When A/D conversion is completed, the conversion result is read from the CRR register. The conversion data register should be read after the conversion is completed, EOC bit.
</description>
              <bitRange>[21:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BCRDCH0</name>
          <description>Backup of CRDCH0</description>
          <addressOffset>0x0070</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[31:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>Data</name>
              <description>Conversion result data of ADC
A/D converter output channel data result:upto 0x3FFFFF
When A/D conversion is completed, the conversion result is read from the CRR register. The conversion data register should be read after the conversion is completed, EOC bit.
</description>
              <bitRange>[21:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BCRDCH1</name>
          <description>Backup of CRDCH1</description>
          <addressOffset>0x0074</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[31:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>Data</name>
              <description>Conversion result data of ADC
A/D converter output channel data result:  upto 0x3FFFFF
When A/D conversion is completed, the conversion result is read from the CRR register. The conversion data register should be read after the conversion is completed, EOC bit.
</description>
              <bitRange>[21:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BCRDCH2</name>
          <description>Backup of CRDCH2</description>
          <addressOffset>0x0078</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[31:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>Data</name>
              <description>Conversion result data of ADC
A/D converter output channel data result: upto 0x3FFFFF
When A/D conversion is completed, the conversion result is read from the CRR register. The conversion data register should be read after the conversion is completed, EOC bit.
</description>
              <bitRange>[21:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BCRDCH3</name>
          <description>Backup of CRDCH3</description>
          <addressOffset>0x007C</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[31:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>Data</name>
              <description>Conversion result data of ADC
A/D converter output channel data result upto 0x3FFFFF
When A/D conversion is completed, the conversion result is read from the CRR register. The conversion data register should be read after the conversion is completed, EOC bit.
</description>
              <bitRange>[21:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DSR</name>
          <description>Decimation Sampling Register </description>
          <addressOffset>0x0080</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>No Description</description>
              <bitRange>[31:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>sample</name>
              <description>Decimation filter sampling data selection 2^n</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <!--SSS-->
    <!--MODEM_AES-->
    <!--RESET-->
    <peripheral>
      <name>RESET</name>
      <version>1.0</version>
      <description>Reset Control </description>
      <baseAddress>0x40080C00</baseAddress>
      <size>32</size>
      <access>read-write</access>
      <addressBlock>
        <offset>0</offset>
        <size>0x40</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>POR</name>
        <description>Reset interrupt</description>
        <value>1</value>
      </interrupt>
      <registers>
        <register>
          <name>WARMRF</name>
          <description>It's Register</description>
          <addressOffset>0x00</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD1</name>
              <description>No Description</description>
              <bitRange>[31:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RESET_SELFWAKEUP</name>
              <description>Resets self wake-up when WDT(watch dog timer) reset asserts
0 = Hold reset until next POR
1 = Self wake-up from WDT reset
Caution:	In order to system reset by Watch Dog Timer, must set this bit
</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SW_RST_FLAG</name>
              <description>S/W reset flag bit (Read) raised by SYSRESETREQ
0 = S/W reset is not detected
1 = S/W reset is detected
If we write 1 to this bit, this bit goes to 0 (write 1 clear).
</description>
              <bitRange>[5:5]</bitRange>
              <access>read-writeOnce</access>
            </field>
            <field>
              <name>RST_EN</name>
              <description>0 = NRESET is treated as an interrupt (default)
1 = NRESET is treated as system reset signal
</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RST_DET</name>
              <description>0 : not detected
1 : wdt reset detected
If write 1 to this bit, this bit will be go to 0.(write 1 clear)
</description>
              <bitRange>[3:3]</bitRange>
              <access>read-writeOnce</access>
            </field>
            <field>
              <name>POR_FLAG</name>
              <description>S/W reset flag bit (read only) 
0 = Internal POR level is low
1 = Internal POR level is high
</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RST_STATUS</name>
              <description>Reset status (from pad NRESET) bit (read only)
0 = Status of pad NRESET signal is logic-low (Reset state)
1 = Status of pad NRESET signal is logic-high (Reset released state)
</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RST_FLAG</name>
              <description>Warm reset flag bit (read only) NRESET falling is detected
0 = NRESET falling is not detected
1 = NRESET falling is detected
</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <!--BLE_AES-->
    <peripheral>
      <name>AES</name>
      <version>1.0</version>
      <description>AES</description>
      <baseAddress>0x40100000</baseAddress>
      <size>32</size>
      <access>read-write</access>
      <addressBlock>
        <offset>0</offset>
        <size>0x100</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>AES</name>
        <description>AES operation completion</description>
        <value>50</value>
      </interrupt>
      <registers>
        <!--CTR: AES Control Register-->
        <register>
          <name>CTR</name>
          <description>Offset: 0x0000   AES Control Register</description>
          <addressOffset>0x00</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <!--KeySz: AES key size selection signal-->
            <field>
              <name>KeySz</name>
              <description>AES key size selection signal</description>
              <bitRange>[5:4]</bitRange>
            </field>
            <!--ChainMode: AES chain mode selection signal-->
            <field>
              <name>ChainMode</name>
              <description>AES chain mode selection signal</description>
              <bitRange>[1:1]</bitRange>
            </field>
            <!--OpMode: Encryption/decryption mode selection signal-->
            <field>
              <name>OpMode</name>
              <description>Encryption/decryption mode selection signal</description>
              <bitRange>[0:0]</bitRange>
            </field>
          </fields>
        </register>
        <!--SR: AES Status Register-->
        <register>
          <name>SR</name>
          <description>Offset: 0x0004 AES Status Register</description>
          <addressOffset>0x04</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000002</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <!--Busy: AES busy signal-->
            <field>
              <name>Busy</name>
              <description>AES busy signal</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <!--InputReady: AES input ready signal-->
            <field>
              <name>InputReady</name>
              <description>AES input ready signal</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <!--OutReady: AES output ready signal-->
            <field>
              <name>OutReady</name>
              <description>AES output ready signal</description>
              <bitRange>[0:0]</bitRange>
            </field>
          </fields>
        </register>
        <!--IDR: AES Input Data Register -->
        <register>
          <dim>4</dim>
          <dimIncrement>4</dimIncrement>
          <dimIndex>1-4</dimIndex>
          <name>IDR[%s]</name>
          <description>Offset: 0x0010 AES Input Data Register</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <!--Value:AES input data-->
            <field>
              <name>Value</name>
              <description>AES input data</description>
              <bitRange>[31:0]</bitRange>
            </field>
          </fields>
        </register>
        <!--ODR: AES Output Data Register -->
        <register>
          <dim>4</dim>
          <dimIncrement>4</dimIncrement>
          <dimIndex>1-4</dimIndex>
          <name>ODR[%s]</name>
          <description>Offset: 0x0020 AES Output Data Register</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <!--Value:AES output data-->
            <field>
              <name>Value</name>
              <description>AES output data</description>
              <bitRange>[31:0]</bitRange>
            </field>
          </fields>
        </register>
        <!--IVR: AES IV Register -->
        <register>
          <dim>4</dim>
          <dimIncrement>4</dimIncrement>
          <dimIndex>1-4</dimIndex>
          <name>IVR[%s]</name>
          <description>Offset: 0x0050 AES initial vector register</description>
          <addressOffset>0x50</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <!--Value:AES initial vector-->
            <field>
              <name>Value</name>
              <description>AES initial vector</description>
              <bitRange>[31:0]</bitRange>
            </field>
          </fields>
        </register>
        <!--KER: AES Key Register -->
        <register>
          <dim>8</dim>
          <dimIncrement>4</dimIncrement>
          <dimIndex>1-8</dimIndex>
          <name>KDR[%s]</name>
          <description>Offset: 0x0080 AES Key Register </description>
          <addressOffset>0x80</addressOffset>
          <size>32</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <!--Value:AES Key-->
            <field>
              <name>Value</name>
              <description>AES Key</description>
              <bitRange>[31:0]</bitRange>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
  </peripherals>
</device>